// Debenu Quick PDF Library
// DLL Edition
// Version 9.16

// Copyright © 1999 - 2013 Debenu Pty Ltd

// DebenuPDFLibraryDLL0916.cpp
// C++ import header
// This file was generated by an automated process on 10 September 2013
// http://www.debenu.com/

#include "stdafx.h"
#include "QuickPDFDLL0916.h"
#include <string>

bool DebenuPDFLibraryDLL0916::LibraryLoaded()
{
	return !loadError;
}

FARPROC DebenuPDFLibraryDLL0916::AttachFunction(char* funcName)
{
	FARPROC address = GetProcAddress(dllHandle, funcName);
	if (address == 0) loadError = true;
	return address;
}

DebenuPDFLibraryDLL0916::DebenuPDFLibraryDLL0916(const std::wstring& dllFileName)
{
	loadError = false;
	instanceID = 0;
	dllHandle = LoadLibraryW(dllFileName.c_str());
	if (dllHandle > 0) {
		DebenuPDFLibrarySetProgressCallback = (DebenuPDFLibraryFuncType140)AttachFunction("DPLSetProgressCallback");
		DebenuPDFLibraryAddArcToPath = (DebenuPDFLibraryFuncType29)AttachFunction("DPLAddArcToPath");
		DebenuPDFLibraryAddBoxToPath = (DebenuPDFLibraryFuncType30)AttachFunction("DPLAddBoxToPath");
		DebenuPDFLibraryAddCJKFont = (DebenuPDFLibraryFuncType62)AttachFunction("DPLAddCJKFont");
		DebenuPDFLibraryAddCurveToPath = (DebenuPDFLibraryFuncType32)AttachFunction("DPLAddCurveToPath");
		DebenuPDFLibraryAddEmbeddedFile = (DebenuPDFLibraryFuncType117)AttachFunction("DPLAddEmbeddedFile");
		DebenuPDFLibraryAddFileAttachment = (DebenuPDFLibraryFuncType112)AttachFunction("DPLAddFileAttachment");
		DebenuPDFLibraryAddFormFieldChoiceSub = (DebenuPDFLibraryFuncType104)AttachFunction("DPLAddFormFieldChoiceSub");
		DebenuPDFLibraryAddFormFieldSub = (DebenuPDFLibraryFuncType99)AttachFunction("DPLAddFormFieldSub");
		DebenuPDFLibraryAddFormFont = (DebenuPDFLibraryFuncType62)AttachFunction("DPLAddFormFont");
		DebenuPDFLibraryAddGlobalJavaScript = (DebenuPDFLibraryFuncType117)AttachFunction("DPLAddGlobalJavaScript");
		DebenuPDFLibraryAddImageFromFile = (DebenuPDFLibraryFuncType112)AttachFunction("DPLAddImageFromFile");
		DebenuPDFLibraryAddImageFromFileOffset = (DebenuPDFLibraryFuncType114)AttachFunction("DPLAddImageFromFileOffset");
		DebenuPDFLibraryAddImageFromString = (DebenuPDFLibraryFuncType25)AttachFunction("DPLAddImageFromString");
		DebenuPDFLibraryAddLGIDictToPage = (DebenuPDFLibraryFuncType107)AttachFunction("DPLAddLGIDictToPage");
		DebenuPDFLibraryAddLineToPath = (DebenuPDFLibraryFuncType28)AttachFunction("DPLAddLineToPath");
		DebenuPDFLibraryAddLinkToDestination = (DebenuPDFLibraryFuncType41)AttachFunction("DPLAddLinkToDestination");
		DebenuPDFLibraryAddLinkToEmbeddedFile = (DebenuPDFLibraryFuncType44)AttachFunction("DPLAddLinkToEmbeddedFile");
		DebenuPDFLibraryAddLinkToFile = (DebenuPDFLibraryFuncType46)AttachFunction("DPLAddLinkToFile");
		DebenuPDFLibraryAddLinkToFileEx = (DebenuPDFLibraryFuncType48)AttachFunction("DPLAddLinkToFileEx");
		DebenuPDFLibraryAddLinkToJavaScript = (DebenuPDFLibraryFuncType45)AttachFunction("DPLAddLinkToJavaScript");
		DebenuPDFLibraryAddLinkToLocalFile = (DebenuPDFLibraryFuncType45)AttachFunction("DPLAddLinkToLocalFile");
		DebenuPDFLibraryAddLinkToPage = (DebenuPDFLibraryFuncType40)AttachFunction("DPLAddLinkToPage");
		DebenuPDFLibraryAddLinkToWeb = (DebenuPDFLibraryFuncType45)AttachFunction("DPLAddLinkToWeb");
		DebenuPDFLibraryAddNoteAnnotation = (DebenuPDFLibraryFuncType54)AttachFunction("DPLAddNoteAnnotation");
		DebenuPDFLibraryAddOpenTypeFontFromFile = (DebenuPDFLibraryFuncType112)AttachFunction("DPLAddOpenTypeFontFromFile");
		DebenuPDFLibraryAddPageLabels = (DebenuPDFLibraryFuncType96)AttachFunction("DPLAddPageLabels");
		DebenuPDFLibraryAddSVGAnnotationFromFile = (DebenuPDFLibraryFuncType45)AttachFunction("DPLAddSVGAnnotationFromFile");
		DebenuPDFLibraryAddSWFAnnotationFromFile = (DebenuPDFLibraryFuncType49)AttachFunction("DPLAddSWFAnnotationFromFile");
		DebenuPDFLibraryAddSeparationColor = (DebenuPDFLibraryFuncType111)AttachFunction("DPLAddSeparationColor");
		DebenuPDFLibraryAddStampAnnotation = (DebenuPDFLibraryFuncType43)AttachFunction("DPLAddStampAnnotation");
		DebenuPDFLibraryAddStandardFont = (DebenuPDFLibraryFuncType62)AttachFunction("DPLAddStandardFont");
		DebenuPDFLibraryAddSubsettedFont = (DebenuPDFLibraryFuncType116)AttachFunction("DPLAddSubsettedFont");
		DebenuPDFLibraryAddTextMarkupAnnotation = (DebenuPDFLibraryFuncType67)AttachFunction("DPLAddTextMarkupAnnotation");
		DebenuPDFLibraryAddToBuffer = (DebenuPDFLibraryFuncType23)AttachFunction("DPLAddToBuffer");
		DebenuPDFLibraryAddToFileList = (DebenuPDFLibraryFuncType117)AttachFunction("DPLAddToFileList");
		DebenuPDFLibraryAddTrueTypeFont = (DebenuPDFLibraryFuncType112)AttachFunction("DPLAddTrueTypeFont");
		DebenuPDFLibraryAddTrueTypeFontFromFile = (DebenuPDFLibraryFuncType107)AttachFunction("DPLAddTrueTypeFontFromFile");
		DebenuPDFLibraryAddTrueTypeSubsettedFont = (DebenuPDFLibraryFuncType118)AttachFunction("DPLAddTrueTypeSubsettedFont");
		DebenuPDFLibraryAddType1Font = (DebenuPDFLibraryFuncType107)AttachFunction("DPLAddType1Font");
		DebenuPDFLibraryAddU3DAnnotationFromFile = (DebenuPDFLibraryFuncType45)AttachFunction("DPLAddU3DAnnotationFromFile");
		DebenuPDFLibraryAnalyseFile = (DebenuPDFLibraryFuncType117)AttachFunction("DPLAnalyseFile");
		DebenuPDFLibraryAnnotationCount = (DebenuPDFLibraryFuncType21)AttachFunction("DPLAnnotationCount");
		DebenuPDFLibraryAnsiStringResultLength = (DebenuPDFLibraryFuncType21)AttachFunction("DPLAnsiStringResultLength");
		DebenuPDFLibraryAppendSpace = (DebenuPDFLibraryFuncType27)AttachFunction("DPLAppendSpace");
		DebenuPDFLibraryAppendTableColumns = (DebenuPDFLibraryFuncType71)AttachFunction("DPLAppendTableColumns");
		DebenuPDFLibraryAppendTableRows = (DebenuPDFLibraryFuncType71)AttachFunction("DPLAppendTableRows");
		DebenuPDFLibraryAppendText = (DebenuPDFLibraryFuncType107)AttachFunction("DPLAppendText");
		DebenuPDFLibraryApplyStyle = (DebenuPDFLibraryFuncType107)AttachFunction("DPLApplyStyle");
		DebenuPDFLibraryAttachAnnotToForm = (DebenuPDFLibraryFuncType62)AttachFunction("DPLAttachAnnotToForm");
		DebenuPDFLibraryBalanceContentStream = (DebenuPDFLibraryFuncType21)AttachFunction("DPLBalanceContentStream");
		DebenuPDFLibraryBalancePageTree = (DebenuPDFLibraryFuncType62)AttachFunction("DPLBalancePageTree");
		DebenuPDFLibraryBeginPageUpdate = (DebenuPDFLibraryFuncType21)AttachFunction("DPLBeginPageUpdate");
		DebenuPDFLibraryCapturePage = (DebenuPDFLibraryFuncType62)AttachFunction("DPLCapturePage");
		DebenuPDFLibraryCapturePageEx = (DebenuPDFLibraryFuncType71)AttachFunction("DPLCapturePageEx");
		DebenuPDFLibraryCharWidth = (DebenuPDFLibraryFuncType62)AttachFunction("DPLCharWidth");
		DebenuPDFLibraryCheckFileCompliance = (DebenuPDFLibraryFuncType119)AttachFunction("DPLCheckFileCompliance");
		DebenuPDFLibraryCheckObjects = (DebenuPDFLibraryFuncType21)AttachFunction("DPLCheckObjects");
		DebenuPDFLibraryCheckPageAnnots = (DebenuPDFLibraryFuncType21)AttachFunction("DPLCheckPageAnnots");
		DebenuPDFLibraryClearFileList = (DebenuPDFLibraryFuncType107)AttachFunction("DPLClearFileList");
		DebenuPDFLibraryClearImage = (DebenuPDFLibraryFuncType62)AttachFunction("DPLClearImage");
		DebenuPDFLibraryClearPageLabels = (DebenuPDFLibraryFuncType21)AttachFunction("DPLClearPageLabels");
		DebenuPDFLibraryClearTextFormatting = (DebenuPDFLibraryFuncType21)AttachFunction("DPLClearTextFormatting");
		DebenuPDFLibraryCloneOutlineAction = (DebenuPDFLibraryFuncType62)AttachFunction("DPLCloneOutlineAction");
		DebenuPDFLibraryClonePages = (DebenuPDFLibraryFuncType79)AttachFunction("DPLClonePages");
		DebenuPDFLibraryCloseOutline = (DebenuPDFLibraryFuncType62)AttachFunction("DPLCloseOutline");
		DebenuPDFLibraryClosePath = (DebenuPDFLibraryFuncType21)AttachFunction("DPLClosePath");
		DebenuPDFLibraryCombineContentStreams = (DebenuPDFLibraryFuncType21)AttachFunction("DPLCombineContentStreams");
		DebenuPDFLibraryCompareOutlines = (DebenuPDFLibraryFuncType71)AttachFunction("DPLCompareOutlines");
		DebenuPDFLibraryCompressContent = (DebenuPDFLibraryFuncType21)AttachFunction("DPLCompressContent");
		DebenuPDFLibraryCompressFonts = (DebenuPDFLibraryFuncType62)AttachFunction("DPLCompressFonts");
		DebenuPDFLibraryCompressImages = (DebenuPDFLibraryFuncType62)AttachFunction("DPLCompressImages");
		DebenuPDFLibraryCompressPage = (DebenuPDFLibraryFuncType21)AttachFunction("DPLCompressPage");
		DebenuPDFLibraryContentStreamCount = (DebenuPDFLibraryFuncType21)AttachFunction("DPLContentStreamCount");
		DebenuPDFLibraryContentStreamSafe = (DebenuPDFLibraryFuncType21)AttachFunction("DPLContentStreamSafe");
		DebenuPDFLibraryCopyPageRanges = (DebenuPDFLibraryFuncType99)AttachFunction("DPLCopyPageRanges");
		DebenuPDFLibraryCopyPageRangesEx = (DebenuPDFLibraryFuncType101)AttachFunction("DPLCopyPageRangesEx");
		DebenuPDFLibraryCreateBuffer = (DebenuPDFLibraryFuncType3)AttachFunction("DPLCreateBuffer");
		DebenuPDFLibraryCreateLibrary = (DebenuPDFLibraryFuncType20)AttachFunction("DPLCreateLibrary");
		DebenuPDFLibraryCreateNewObject = (DebenuPDFLibraryFuncType21)AttachFunction("DPLCreateNewObject");
		DebenuPDFLibraryCreateTable = (DebenuPDFLibraryFuncType71)AttachFunction("DPLCreateTable");
		DebenuPDFLibraryDAAppendFile = (DebenuPDFLibraryFuncType62)AttachFunction("DPLDAAppendFile");
		DebenuPDFLibraryDACapturePage = (DebenuPDFLibraryFuncType71)AttachFunction("DPLDACapturePage");
		DebenuPDFLibraryDACapturePageEx = (DebenuPDFLibraryFuncType79)AttachFunction("DPLDACapturePageEx");
		DebenuPDFLibraryDACloseFile = (DebenuPDFLibraryFuncType62)AttachFunction("DPLDACloseFile");
		DebenuPDFLibraryDADrawCapturedPage = (DebenuPDFLibraryFuncType81)AttachFunction("DPLDADrawCapturedPage");
		DebenuPDFLibraryDADrawRotatedCapturedPage = (DebenuPDFLibraryFuncType82)AttachFunction("DPLDADrawRotatedCapturedPage");
		DebenuPDFLibraryDAEmbedFileStreams = (DebenuPDFLibraryFuncType99)AttachFunction("DPLDAEmbedFileStreams");
		DebenuPDFLibraryDAExtractPageText = (DebenuPDFLibraryFuncType133)AttachFunction("DPLDAExtractPageText");
		DebenuPDFLibraryDAExtractPageTextBlocks = (DebenuPDFLibraryFuncType79)AttachFunction("DPLDAExtractPageTextBlocks");
		DebenuPDFLibraryDAFindPage = (DebenuPDFLibraryFuncType71)AttachFunction("DPLDAFindPage");
		DebenuPDFLibraryDAGetAnnotationCount = (DebenuPDFLibraryFuncType71)AttachFunction("DPLDAGetAnnotationCount");
		DebenuPDFLibraryDAGetFormFieldCount = (DebenuPDFLibraryFuncType62)AttachFunction("DPLDAGetFormFieldCount");
		DebenuPDFLibraryDAGetFormFieldTitle = (DebenuPDFLibraryFuncType132)AttachFunction("DPLDAGetFormFieldTitle");
		DebenuPDFLibraryDAGetFormFieldValue = (DebenuPDFLibraryFuncType132)AttachFunction("DPLDAGetFormFieldValue");
		DebenuPDFLibraryDAGetImageDataToString = (DebenuPDFLibraryFuncType5)AttachFunction("DPLDAGetImageDataToString");
		DebenuPDFLibraryDAGetImageDblProperty = (DebenuPDFLibraryFuncType17)AttachFunction("DPLDAGetImageDblProperty");
		DebenuPDFLibraryDAGetImageIntProperty = (DebenuPDFLibraryFuncType84)AttachFunction("DPLDAGetImageIntProperty");
		DebenuPDFLibraryDAGetImageListCount = (DebenuPDFLibraryFuncType71)AttachFunction("DPLDAGetImageListCount");
		DebenuPDFLibraryDAGetInformation = (DebenuPDFLibraryFuncType135)AttachFunction("DPLDAGetInformation");
		DebenuPDFLibraryDAGetObjectCount = (DebenuPDFLibraryFuncType62)AttachFunction("DPLDAGetObjectCount");
		DebenuPDFLibraryDAGetObjectToString = (DebenuPDFLibraryFuncType4)AttachFunction("DPLDAGetObjectToString");
		DebenuPDFLibraryDAGetPageBox = (DebenuPDFLibraryFuncType17)AttachFunction("DPLDAGetPageBox");
		DebenuPDFLibraryDAGetPageContentToString = (DebenuPDFLibraryFuncType4)AttachFunction("DPLDAGetPageContentToString");
		DebenuPDFLibraryDAGetPageCount = (DebenuPDFLibraryFuncType62)AttachFunction("DPLDAGetPageCount");
		DebenuPDFLibraryDAGetPageHeight = (DebenuPDFLibraryFuncType15)AttachFunction("DPLDAGetPageHeight");
		DebenuPDFLibraryDAGetPageImageList = (DebenuPDFLibraryFuncType71)AttachFunction("DPLDAGetPageImageList");
		DebenuPDFLibraryDAGetPageWidth = (DebenuPDFLibraryFuncType15)AttachFunction("DPLDAGetPageWidth");
		DebenuPDFLibraryDAGetTextBlockBound = (DebenuPDFLibraryFuncType16)AttachFunction("DPLDAGetTextBlockBound");
		DebenuPDFLibraryDAGetTextBlockCharWidth = (DebenuPDFLibraryFuncType16)AttachFunction("DPLDAGetTextBlockCharWidth");
		DebenuPDFLibraryDAGetTextBlockColor = (DebenuPDFLibraryFuncType16)AttachFunction("DPLDAGetTextBlockColor");
		DebenuPDFLibraryDAGetTextBlockColorType = (DebenuPDFLibraryFuncType71)AttachFunction("DPLDAGetTextBlockColorType");
		DebenuPDFLibraryDAGetTextBlockCount = (DebenuPDFLibraryFuncType62)AttachFunction("DPLDAGetTextBlockCount");
		DebenuPDFLibraryDAGetTextBlockFontName = (DebenuPDFLibraryFuncType132)AttachFunction("DPLDAGetTextBlockFontName");
		DebenuPDFLibraryDAGetTextBlockFontSize = (DebenuPDFLibraryFuncType15)AttachFunction("DPLDAGetTextBlockFontSize");
		DebenuPDFLibraryDAGetTextBlockText = (DebenuPDFLibraryFuncType132)AttachFunction("DPLDAGetTextBlockText");
		DebenuPDFLibraryDAHasPageBox = (DebenuPDFLibraryFuncType79)AttachFunction("DPLDAHasPageBox");
		DebenuPDFLibraryDAHidePage = (DebenuPDFLibraryFuncType71)AttachFunction("DPLDAHidePage");
		DebenuPDFLibraryDAMovePage = (DebenuPDFLibraryFuncType84)AttachFunction("DPLDAMovePage");
		DebenuPDFLibraryDANewPage = (DebenuPDFLibraryFuncType62)AttachFunction("DPLDANewPage");
		DebenuPDFLibraryDANewPages = (DebenuPDFLibraryFuncType71)AttachFunction("DPLDANewPages");
		DebenuPDFLibraryDAOpenFile = (DebenuPDFLibraryFuncType117)AttachFunction("DPLDAOpenFile");
		DebenuPDFLibraryDAOpenFileReadOnly = (DebenuPDFLibraryFuncType117)AttachFunction("DPLDAOpenFileReadOnly");
		DebenuPDFLibraryDAPageRotation = (DebenuPDFLibraryFuncType71)AttachFunction("DPLDAPageRotation");
		DebenuPDFLibraryDAReleaseImageList = (DebenuPDFLibraryFuncType71)AttachFunction("DPLDAReleaseImageList");
		DebenuPDFLibraryDAReleaseTextBlocks = (DebenuPDFLibraryFuncType62)AttachFunction("DPLDAReleaseTextBlocks");
		DebenuPDFLibraryDARemoveUsageRights = (DebenuPDFLibraryFuncType62)AttachFunction("DPLDARemoveUsageRights");
		DebenuPDFLibraryDARenderPageToDC = (DebenuPDFLibraryFuncType83)AttachFunction("DPLDARenderPageToDC");
		DebenuPDFLibraryDARenderPageToFile = (DebenuPDFLibraryFuncType95)AttachFunction("DPLDARenderPageToFile");
		DebenuPDFLibraryDARenderPageToString = (DebenuPDFLibraryFuncType6)AttachFunction("DPLDARenderPageToString");
		DebenuPDFLibraryDARotatePage = (DebenuPDFLibraryFuncType84)AttachFunction("DPLDARotatePage");
		DebenuPDFLibraryDASaveAsFile = (DebenuPDFLibraryFuncType99)AttachFunction("DPLDASaveAsFile");
		DebenuPDFLibraryDASaveImageDataToFile = (DebenuPDFLibraryFuncType96)AttachFunction("DPLDASaveImageDataToFile");
		DebenuPDFLibraryDASetInformation = (DebenuPDFLibraryFuncType104)AttachFunction("DPLDASetInformation");
		DebenuPDFLibraryDASetPageBox = (DebenuPDFLibraryFuncType81)AttachFunction("DPLDASetPageBox");
		DebenuPDFLibraryDASetPageSize = (DebenuPDFLibraryFuncType73)AttachFunction("DPLDASetPageSize");
		DebenuPDFLibraryDASetTextExtractionArea = (DebenuPDFLibraryFuncType30)AttachFunction("DPLDASetTextExtractionArea");
		DebenuPDFLibraryDASetTextExtractionOptions = (DebenuPDFLibraryFuncType71)AttachFunction("DPLDASetTextExtractionOptions");
		DebenuPDFLibraryDASetTextExtractionScaling = (DebenuPDFLibraryFuncType65)AttachFunction("DPLDASetTextExtractionScaling");
		DebenuPDFLibraryDASetTextExtractionWordGap = (DebenuPDFLibraryFuncType27)AttachFunction("DPLDASetTextExtractionWordGap");
		DebenuPDFLibraryDAShiftedHeader = (DebenuPDFLibraryFuncType62)AttachFunction("DPLDAShiftedHeader");
		DebenuPDFLibraryDecrypt = (DebenuPDFLibraryFuncType21)AttachFunction("DPLDecrypt");
		DebenuPDFLibraryDecryptFile = (DebenuPDFLibraryFuncType121)AttachFunction("DPLDecryptFile");
		DebenuPDFLibraryDeleteAnalysis = (DebenuPDFLibraryFuncType62)AttachFunction("DPLDeleteAnalysis");
		DebenuPDFLibraryDeleteAnnotation = (DebenuPDFLibraryFuncType62)AttachFunction("DPLDeleteAnnotation");
		DebenuPDFLibraryDeleteContentStream = (DebenuPDFLibraryFuncType21)AttachFunction("DPLDeleteContentStream");
		DebenuPDFLibraryDeleteFormField = (DebenuPDFLibraryFuncType62)AttachFunction("DPLDeleteFormField");
		DebenuPDFLibraryDeleteOptionalContentGroup = (DebenuPDFLibraryFuncType62)AttachFunction("DPLDeleteOptionalContentGroup");
		DebenuPDFLibraryDeletePageLGIDict = (DebenuPDFLibraryFuncType62)AttachFunction("DPLDeletePageLGIDict");
		DebenuPDFLibraryDeletePages = (DebenuPDFLibraryFuncType71)AttachFunction("DPLDeletePages");
		DebenuPDFLibraryDocJavaScriptAction = (DebenuPDFLibraryFuncType117)AttachFunction("DPLDocJavaScriptAction");
		DebenuPDFLibraryDocumentCount = (DebenuPDFLibraryFuncType21)AttachFunction("DPLDocumentCount");
		DebenuPDFLibraryDrawArc = (DebenuPDFLibraryFuncType37)AttachFunction("DPLDrawArc");
		DebenuPDFLibraryDrawBarcode = (DebenuPDFLibraryFuncType47)AttachFunction("DPLDrawBarcode");
		DebenuPDFLibraryDrawBox = (DebenuPDFLibraryFuncType39)AttachFunction("DPLDrawBox");
		DebenuPDFLibraryDrawCapturedPage = (DebenuPDFLibraryFuncType67)AttachFunction("DPLDrawCapturedPage");
		DebenuPDFLibraryDrawCapturedPageMatrix = (DebenuPDFLibraryFuncType69)AttachFunction("DPLDrawCapturedPageMatrix");
		DebenuPDFLibraryDrawCircle = (DebenuPDFLibraryFuncType50)AttachFunction("DPLDrawCircle");
		DebenuPDFLibraryDrawDataMatrixSymbol = (DebenuPDFLibraryFuncType52)AttachFunction("DPLDrawDataMatrixSymbol");
		DebenuPDFLibraryDrawEllipse = (DebenuPDFLibraryFuncType39)AttachFunction("DPLDrawEllipse");
		DebenuPDFLibraryDrawEllipticArc = (DebenuPDFLibraryFuncType34)AttachFunction("DPLDrawEllipticArc");
		DebenuPDFLibraryDrawHTMLText = (DebenuPDFLibraryFuncType51)AttachFunction("DPLDrawHTMLText");
		DebenuPDFLibraryDrawHTMLTextBox = (DebenuPDFLibraryFuncType128)AttachFunction("DPLDrawHTMLTextBox");
		DebenuPDFLibraryDrawHTMLTextBoxMatrix = (DebenuPDFLibraryFuncType129)AttachFunction("DPLDrawHTMLTextBoxMatrix");
		DebenuPDFLibraryDrawImage = (DebenuPDFLibraryFuncType30)AttachFunction("DPLDrawImage");
		DebenuPDFLibraryDrawImageMatrix = (DebenuPDFLibraryFuncType32)AttachFunction("DPLDrawImageMatrix");
		DebenuPDFLibraryDrawIntelligentMailBarcode = (DebenuPDFLibraryFuncType35)AttachFunction("DPLDrawIntelligentMailBarcode");
		DebenuPDFLibraryDrawLine = (DebenuPDFLibraryFuncType30)AttachFunction("DPLDrawLine");
		DebenuPDFLibraryDrawMultiLineText = (DebenuPDFLibraryFuncType59)AttachFunction("DPLDrawMultiLineText");
		DebenuPDFLibraryDrawPDF417Symbol = (DebenuPDFLibraryFuncType56)AttachFunction("DPLDrawPDF417Symbol");
		DebenuPDFLibraryDrawPDF417SymbolEx = (DebenuPDFLibraryFuncType58)AttachFunction("DPLDrawPDF417SymbolEx");
		DebenuPDFLibraryDrawPath = (DebenuPDFLibraryFuncType62)AttachFunction("DPLDrawPath");
		DebenuPDFLibraryDrawPathEvenOdd = (DebenuPDFLibraryFuncType62)AttachFunction("DPLDrawPathEvenOdd");
		DebenuPDFLibraryDrawPostScriptXObject = (DebenuPDFLibraryFuncType62)AttachFunction("DPLDrawPostScriptXObject");
		DebenuPDFLibraryDrawRotatedBox = (DebenuPDFLibraryFuncType36)AttachFunction("DPLDrawRotatedBox");
		DebenuPDFLibraryDrawRotatedCapturedPage = (DebenuPDFLibraryFuncType68)AttachFunction("DPLDrawRotatedCapturedPage");
		DebenuPDFLibraryDrawRotatedImage = (DebenuPDFLibraryFuncType31)AttachFunction("DPLDrawRotatedImage");
		DebenuPDFLibraryDrawRotatedMultiLineText = (DebenuPDFLibraryFuncType53)AttachFunction("DPLDrawRotatedMultiLineText");
		DebenuPDFLibraryDrawRotatedText = (DebenuPDFLibraryFuncType51)AttachFunction("DPLDrawRotatedText");
		DebenuPDFLibraryDrawRotatedTextBox = (DebenuPDFLibraryFuncType38)AttachFunction("DPLDrawRotatedTextBox");
		DebenuPDFLibraryDrawRoundedBox = (DebenuPDFLibraryFuncType36)AttachFunction("DPLDrawRoundedBox");
		DebenuPDFLibraryDrawScaledImage = (DebenuPDFLibraryFuncType29)AttachFunction("DPLDrawScaledImage");
		DebenuPDFLibraryDrawSpacedText = (DebenuPDFLibraryFuncType51)AttachFunction("DPLDrawSpacedText");
		DebenuPDFLibraryDrawTableRows = (DebenuPDFLibraryFuncType14)AttachFunction("DPLDrawTableRows");
		DebenuPDFLibraryDrawText = (DebenuPDFLibraryFuncType55)AttachFunction("DPLDrawText");
		DebenuPDFLibraryDrawTextArc = (DebenuPDFLibraryFuncType45)AttachFunction("DPLDrawTextArc");
		DebenuPDFLibraryDrawTextBox = (DebenuPDFLibraryFuncType45)AttachFunction("DPLDrawTextBox");
		DebenuPDFLibraryDrawTextBoxMatrix = (DebenuPDFLibraryFuncType57)AttachFunction("DPLDrawTextBoxMatrix");
		DebenuPDFLibraryDrawWrappedText = (DebenuPDFLibraryFuncType51)AttachFunction("DPLDrawWrappedText");
		DebenuPDFLibraryEditableContentStream = (DebenuPDFLibraryFuncType21)AttachFunction("DPLEditableContentStream");
		DebenuPDFLibraryEmbedFile = (DebenuPDFLibraryFuncType121)AttachFunction("DPLEmbedFile");
		DebenuPDFLibraryEmbeddedFileCount = (DebenuPDFLibraryFuncType21)AttachFunction("DPLEmbeddedFileCount");
		DebenuPDFLibraryEncapsulateContentStream = (DebenuPDFLibraryFuncType21)AttachFunction("DPLEncapsulateContentStream");
		DebenuPDFLibraryEncodePermissions = (DebenuPDFLibraryFuncType94)AttachFunction("DPLEncodePermissions");
		DebenuPDFLibraryEncrypt = (DebenuPDFLibraryFuncType119)AttachFunction("DPLEncrypt");
		DebenuPDFLibraryEncryptFile = (DebenuPDFLibraryFuncType125)AttachFunction("DPLEncryptFile");
		DebenuPDFLibraryEncryptWithFingerprint = (DebenuPDFLibraryFuncType107)AttachFunction("DPLEncryptWithFingerprint");
		DebenuPDFLibraryEncryptionAlgorithm = (DebenuPDFLibraryFuncType21)AttachFunction("DPLEncryptionAlgorithm");
		DebenuPDFLibraryEncryptionStatus = (DebenuPDFLibraryFuncType21)AttachFunction("DPLEncryptionStatus");
		DebenuPDFLibraryEncryptionStrength = (DebenuPDFLibraryFuncType21)AttachFunction("DPLEncryptionStrength");
		DebenuPDFLibraryEndPageUpdate = (DebenuPDFLibraryFuncType21)AttachFunction("DPLEndPageUpdate");
		DebenuPDFLibraryEndSignProcessToFile = (DebenuPDFLibraryFuncType99)AttachFunction("DPLEndSignProcessToFile");
		DebenuPDFLibraryEndSignProcessToString = (DebenuPDFLibraryFuncType3)AttachFunction("DPLEndSignProcessToString");
		DebenuPDFLibraryExtractFilePageContentToString = (DebenuPDFLibraryFuncType9)AttachFunction("DPLExtractFilePageContentToString");
		DebenuPDFLibraryExtractFilePageText = (DebenuPDFLibraryFuncType139)AttachFunction("DPLExtractFilePageText");
		DebenuPDFLibraryExtractFilePageTextBlocks = (DebenuPDFLibraryFuncType119)AttachFunction("DPLExtractFilePageTextBlocks");
		DebenuPDFLibraryExtractFilePages = (DebenuPDFLibraryFuncType123)AttachFunction("DPLExtractFilePages");
		DebenuPDFLibraryExtractFilePagesEx = (DebenuPDFLibraryFuncType124)AttachFunction("DPLExtractFilePagesEx");
		DebenuPDFLibraryExtractPageRanges = (DebenuPDFLibraryFuncType107)AttachFunction("DPLExtractPageRanges");
		DebenuPDFLibraryExtractPageTextBlocks = (DebenuPDFLibraryFuncType62)AttachFunction("DPLExtractPageTextBlocks");
		DebenuPDFLibraryExtractPages = (DebenuPDFLibraryFuncType71)AttachFunction("DPLExtractPages");
		DebenuPDFLibraryFileListCount = (DebenuPDFLibraryFuncType107)AttachFunction("DPLFileListCount");
		DebenuPDFLibraryFileListItem = (DebenuPDFLibraryFuncType137)AttachFunction("DPLFileListItem");
		DebenuPDFLibraryFindFonts = (DebenuPDFLibraryFuncType21)AttachFunction("DPLFindFonts");
		DebenuPDFLibraryFindFormFieldByTitle = (DebenuPDFLibraryFuncType107)AttachFunction("DPLFindFormFieldByTitle");
		DebenuPDFLibraryFindImages = (DebenuPDFLibraryFuncType21)AttachFunction("DPLFindImages");
		DebenuPDFLibraryFitImage = (DebenuPDFLibraryFuncType42)AttachFunction("DPLFitImage");
		DebenuPDFLibraryFitRotatedTextBox = (DebenuPDFLibraryFuncType38)AttachFunction("DPLFitRotatedTextBox");
		DebenuPDFLibraryFitTextBox = (DebenuPDFLibraryFuncType45)AttachFunction("DPLFitTextBox");
		DebenuPDFLibraryFlattenAnnot = (DebenuPDFLibraryFuncType71)AttachFunction("DPLFlattenAnnot");
		DebenuPDFLibraryFlattenFormField = (DebenuPDFLibraryFuncType62)AttachFunction("DPLFlattenFormField");
		DebenuPDFLibraryFontCount = (DebenuPDFLibraryFuncType21)AttachFunction("DPLFontCount");
		DebenuPDFLibraryFontFamily = (DebenuPDFLibraryFuncType127)AttachFunction("DPLFontFamily");
		DebenuPDFLibraryFontHasKerning = (DebenuPDFLibraryFuncType21)AttachFunction("DPLFontHasKerning");
		DebenuPDFLibraryFontName = (DebenuPDFLibraryFuncType127)AttachFunction("DPLFontName");
		DebenuPDFLibraryFontReference = (DebenuPDFLibraryFuncType127)AttachFunction("DPLFontReference");
		DebenuPDFLibraryFontSize = (DebenuPDFLibraryFuncType21)AttachFunction("DPLFontSize");
		DebenuPDFLibraryFontType = (DebenuPDFLibraryFuncType21)AttachFunction("DPLFontType");
		DebenuPDFLibraryFormFieldCount = (DebenuPDFLibraryFuncType21)AttachFunction("DPLFormFieldCount");
		DebenuPDFLibraryFormFieldHasParent = (DebenuPDFLibraryFuncType62)AttachFunction("DPLFormFieldHasParent");
		DebenuPDFLibraryFormFieldJavaScriptAction = (DebenuPDFLibraryFuncType104)AttachFunction("DPLFormFieldJavaScriptAction");
		DebenuPDFLibraryFormFieldWebLinkAction = (DebenuPDFLibraryFuncType104)AttachFunction("DPLFormFieldWebLinkAction");
		DebenuPDFLibraryGetActionDest = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetActionDest");
		DebenuPDFLibraryGetActionType = (DebenuPDFLibraryFuncType131)AttachFunction("DPLGetActionType");
		DebenuPDFLibraryGetActionURL = (DebenuPDFLibraryFuncType131)AttachFunction("DPLGetActionURL");
		DebenuPDFLibraryGetAnalysisInfo = (DebenuPDFLibraryFuncType132)AttachFunction("DPLGetAnalysisInfo");
		DebenuPDFLibraryGetAnnotActionID = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetAnnotActionID");
		DebenuPDFLibraryGetAnnotDblProperty = (DebenuPDFLibraryFuncType15)AttachFunction("DPLGetAnnotDblProperty");
		DebenuPDFLibraryGetAnnotDest = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetAnnotDest");
		DebenuPDFLibraryGetAnnotIntProperty = (DebenuPDFLibraryFuncType71)AttachFunction("DPLGetAnnotIntProperty");
		DebenuPDFLibraryGetAnnotQuadCount = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetAnnotQuadCount");
		DebenuPDFLibraryGetAnnotQuadPoints = (DebenuPDFLibraryFuncType16)AttachFunction("DPLGetAnnotQuadPoints");
		DebenuPDFLibraryGetAnnotSoundToFile = (DebenuPDFLibraryFuncType97)AttachFunction("DPLGetAnnotSoundToFile");
		DebenuPDFLibraryGetAnnotSoundToString = (DebenuPDFLibraryFuncType4)AttachFunction("DPLGetAnnotSoundToString");
		DebenuPDFLibraryGetAnnotStrProperty = (DebenuPDFLibraryFuncType132)AttachFunction("DPLGetAnnotStrProperty");
		DebenuPDFLibraryGetBarcodeWidth = (DebenuPDFLibraryFuncType12)AttachFunction("DPLGetBarcodeWidth");
		DebenuPDFLibraryGetBaseURL = (DebenuPDFLibraryFuncType127)AttachFunction("DPLGetBaseURL");
		DebenuPDFLibraryGetCSDictEPSG = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetCSDictEPSG");
		DebenuPDFLibraryGetCSDictType = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetCSDictType");
		DebenuPDFLibraryGetCSDictWKT = (DebenuPDFLibraryFuncType131)AttachFunction("DPLGetCSDictWKT");
		DebenuPDFLibraryGetCanvasDC = (DebenuPDFLibraryFuncType19)AttachFunction("DPLGetCanvasDC");
		DebenuPDFLibraryGetCatalogInformation = (DebenuPDFLibraryFuncType136)AttachFunction("DPLGetCatalogInformation");
		DebenuPDFLibraryGetContentStreamToString = (DebenuPDFLibraryFuncType1)AttachFunction("DPLGetContentStreamToString");
		DebenuPDFLibraryGetCustomInformation = (DebenuPDFLibraryFuncType136)AttachFunction("DPLGetCustomInformation");
		DebenuPDFLibraryGetCustomKeys = (DebenuPDFLibraryFuncType131)AttachFunction("DPLGetCustomKeys");
		DebenuPDFLibraryGetDefaultPrinterName = (DebenuPDFLibraryFuncType127)AttachFunction("DPLGetDefaultPrinterName");
		DebenuPDFLibraryGetDestName = (DebenuPDFLibraryFuncType131)AttachFunction("DPLGetDestName");
		DebenuPDFLibraryGetDestPage = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetDestPage");
		DebenuPDFLibraryGetDestType = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetDestType");
		DebenuPDFLibraryGetDestValue = (DebenuPDFLibraryFuncType15)AttachFunction("DPLGetDestValue");
		DebenuPDFLibraryGetDocJavaScript = (DebenuPDFLibraryFuncType136)AttachFunction("DPLGetDocJavaScript");
		DebenuPDFLibraryGetDocumentFileName = (DebenuPDFLibraryFuncType127)AttachFunction("DPLGetDocumentFileName");
		DebenuPDFLibraryGetDocumentFileSize = (DebenuPDFLibraryFuncType21)AttachFunction("DPLGetDocumentFileSize");
		DebenuPDFLibraryGetDocumentID = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetDocumentID");
		DebenuPDFLibraryGetDocumentIdentifier = (DebenuPDFLibraryFuncType132)AttachFunction("DPLGetDocumentIdentifier");
		DebenuPDFLibraryGetDocumentMetadata = (DebenuPDFLibraryFuncType127)AttachFunction("DPLGetDocumentMetadata");
		DebenuPDFLibraryGetDocumentRepaired = (DebenuPDFLibraryFuncType21)AttachFunction("DPLGetDocumentRepaired");
		DebenuPDFLibraryGetDocumentResourceList = (DebenuPDFLibraryFuncType127)AttachFunction("DPLGetDocumentResourceList");
		DebenuPDFLibraryGetEmbeddedFileContentToFile = (DebenuPDFLibraryFuncType99)AttachFunction("DPLGetEmbeddedFileContentToFile");
		DebenuPDFLibraryGetEmbeddedFileContentToString = (DebenuPDFLibraryFuncType3)AttachFunction("DPLGetEmbeddedFileContentToString");
		DebenuPDFLibraryGetEmbeddedFileID = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetEmbeddedFileID");
		DebenuPDFLibraryGetEmbeddedFileIntProperty = (DebenuPDFLibraryFuncType71)AttachFunction("DPLGetEmbeddedFileIntProperty");
		DebenuPDFLibraryGetEmbeddedFileStrProperty = (DebenuPDFLibraryFuncType132)AttachFunction("DPLGetEmbeddedFileStrProperty");
		DebenuPDFLibraryGetEncryptionFingerprint = (DebenuPDFLibraryFuncType127)AttachFunction("DPLGetEncryptionFingerprint");
		DebenuPDFLibraryGetFileMetadata = (DebenuPDFLibraryFuncType138)AttachFunction("DPLGetFileMetadata");
		DebenuPDFLibraryGetFirstChildOutline = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetFirstChildOutline");
		DebenuPDFLibraryGetFirstOutline = (DebenuPDFLibraryFuncType21)AttachFunction("DPLGetFirstOutline");
		DebenuPDFLibraryGetFontEncoding = (DebenuPDFLibraryFuncType21)AttachFunction("DPLGetFontEncoding");
		DebenuPDFLibraryGetFontFlags = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetFontFlags");
		DebenuPDFLibraryGetFontID = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetFontID");
		DebenuPDFLibraryGetFontObjectNumber = (DebenuPDFLibraryFuncType21)AttachFunction("DPLGetFontObjectNumber");
		DebenuPDFLibraryGetFormFieldActionID = (DebenuPDFLibraryFuncType99)AttachFunction("DPLGetFormFieldActionID");
		DebenuPDFLibraryGetFormFieldAlignment = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetFormFieldAlignment");
		DebenuPDFLibraryGetFormFieldAnnotFlags = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetFormFieldAnnotFlags");
		DebenuPDFLibraryGetFormFieldBackgroundColor = (DebenuPDFLibraryFuncType15)AttachFunction("DPLGetFormFieldBackgroundColor");
		DebenuPDFLibraryGetFormFieldBackgroundColorType = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetFormFieldBackgroundColorType");
		DebenuPDFLibraryGetFormFieldBorderColor = (DebenuPDFLibraryFuncType15)AttachFunction("DPLGetFormFieldBorderColor");
		DebenuPDFLibraryGetFormFieldBorderColorType = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetFormFieldBorderColorType");
		DebenuPDFLibraryGetFormFieldBorderProperty = (DebenuPDFLibraryFuncType15)AttachFunction("DPLGetFormFieldBorderProperty");
		DebenuPDFLibraryGetFormFieldBorderStyle = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetFormFieldBorderStyle");
		DebenuPDFLibraryGetFormFieldBound = (DebenuPDFLibraryFuncType15)AttachFunction("DPLGetFormFieldBound");
		DebenuPDFLibraryGetFormFieldCaption = (DebenuPDFLibraryFuncType131)AttachFunction("DPLGetFormFieldCaption");
		DebenuPDFLibraryGetFormFieldCheckStyle = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetFormFieldCheckStyle");
		DebenuPDFLibraryGetFormFieldChildTitle = (DebenuPDFLibraryFuncType131)AttachFunction("DPLGetFormFieldChildTitle");
		DebenuPDFLibraryGetFormFieldChoiceType = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetFormFieldChoiceType");
		DebenuPDFLibraryGetFormFieldColor = (DebenuPDFLibraryFuncType15)AttachFunction("DPLGetFormFieldColor");
		DebenuPDFLibraryGetFormFieldComb = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetFormFieldComb");
		DebenuPDFLibraryGetFormFieldDefaultValue = (DebenuPDFLibraryFuncType131)AttachFunction("DPLGetFormFieldDefaultValue");
		DebenuPDFLibraryGetFormFieldDescription = (DebenuPDFLibraryFuncType131)AttachFunction("DPLGetFormFieldDescription");
		DebenuPDFLibraryGetFormFieldFlags = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetFormFieldFlags");
		DebenuPDFLibraryGetFormFieldFontName = (DebenuPDFLibraryFuncType131)AttachFunction("DPLGetFormFieldFontName");
		DebenuPDFLibraryGetFormFieldJavaScript = (DebenuPDFLibraryFuncType135)AttachFunction("DPLGetFormFieldJavaScript");
		DebenuPDFLibraryGetFormFieldKidCount = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetFormFieldKidCount");
		DebenuPDFLibraryGetFormFieldMaxLen = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetFormFieldMaxLen");
		DebenuPDFLibraryGetFormFieldNoExport = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetFormFieldNoExport");
		DebenuPDFLibraryGetFormFieldPage = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetFormFieldPage");
		DebenuPDFLibraryGetFormFieldPrintable = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetFormFieldPrintable");
		DebenuPDFLibraryGetFormFieldReadOnly = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetFormFieldReadOnly");
		DebenuPDFLibraryGetFormFieldRequired = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetFormFieldRequired");
		DebenuPDFLibraryGetFormFieldRichTextString = (DebenuPDFLibraryFuncType135)AttachFunction("DPLGetFormFieldRichTextString");
		DebenuPDFLibraryGetFormFieldRotation = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetFormFieldRotation");
		DebenuPDFLibraryGetFormFieldSubCount = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetFormFieldSubCount");
		DebenuPDFLibraryGetFormFieldSubDisplayName = (DebenuPDFLibraryFuncType132)AttachFunction("DPLGetFormFieldSubDisplayName");
		DebenuPDFLibraryGetFormFieldSubName = (DebenuPDFLibraryFuncType132)AttachFunction("DPLGetFormFieldSubName");
		DebenuPDFLibraryGetFormFieldSubTempIndex = (DebenuPDFLibraryFuncType71)AttachFunction("DPLGetFormFieldSubTempIndex");
		DebenuPDFLibraryGetFormFieldTabOrder = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetFormFieldTabOrder");
		DebenuPDFLibraryGetFormFieldTabOrderEx = (DebenuPDFLibraryFuncType71)AttachFunction("DPLGetFormFieldTabOrderEx");
		DebenuPDFLibraryGetFormFieldTextFlags = (DebenuPDFLibraryFuncType71)AttachFunction("DPLGetFormFieldTextFlags");
		DebenuPDFLibraryGetFormFieldTextSize = (DebenuPDFLibraryFuncType13)AttachFunction("DPLGetFormFieldTextSize");
		DebenuPDFLibraryGetFormFieldTitle = (DebenuPDFLibraryFuncType131)AttachFunction("DPLGetFormFieldTitle");
		DebenuPDFLibraryGetFormFieldType = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetFormFieldType");
		DebenuPDFLibraryGetFormFieldValue = (DebenuPDFLibraryFuncType131)AttachFunction("DPLGetFormFieldValue");
		DebenuPDFLibraryGetFormFieldValueByTitle = (DebenuPDFLibraryFuncType136)AttachFunction("DPLGetFormFieldValueByTitle");
		DebenuPDFLibraryGetFormFieldVisible = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetFormFieldVisible");
		DebenuPDFLibraryGetFormFieldWebLink = (DebenuPDFLibraryFuncType135)AttachFunction("DPLGetFormFieldWebLink");
		DebenuPDFLibraryGetFormFontCount = (DebenuPDFLibraryFuncType21)AttachFunction("DPLGetFormFontCount");
		DebenuPDFLibraryGetFormFontName = (DebenuPDFLibraryFuncType131)AttachFunction("DPLGetFormFontName");
		DebenuPDFLibraryGetGlobalJavaScript = (DebenuPDFLibraryFuncType136)AttachFunction("DPLGetGlobalJavaScript");
		DebenuPDFLibraryGetHTMLTextHeight = (DebenuPDFLibraryFuncType11)AttachFunction("DPLGetHTMLTextHeight");
		DebenuPDFLibraryGetHTMLTextLineCount = (DebenuPDFLibraryFuncType61)AttachFunction("DPLGetHTMLTextLineCount");
		DebenuPDFLibraryGetHTMLTextWidth = (DebenuPDFLibraryFuncType11)AttachFunction("DPLGetHTMLTextWidth");
		DebenuPDFLibraryGetImageID = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetImageID");
		DebenuPDFLibraryGetImageListCount = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetImageListCount");
		DebenuPDFLibraryGetImageListItemDataToString = (DebenuPDFLibraryFuncType5)AttachFunction("DPLGetImageListItemDataToString");
		DebenuPDFLibraryGetImageListItemDblProperty = (DebenuPDFLibraryFuncType16)AttachFunction("DPLGetImageListItemDblProperty");
		DebenuPDFLibraryGetImageListItemIntProperty = (DebenuPDFLibraryFuncType79)AttachFunction("DPLGetImageListItemIntProperty");
		DebenuPDFLibraryGetImageMeasureDict = (DebenuPDFLibraryFuncType21)AttachFunction("DPLGetImageMeasureDict");
		DebenuPDFLibraryGetImagePageCount = (DebenuPDFLibraryFuncType107)AttachFunction("DPLGetImagePageCount");
		DebenuPDFLibraryGetImagePageCountFromString = (DebenuPDFLibraryFuncType22)AttachFunction("DPLGetImagePageCountFromString");
		DebenuPDFLibraryGetImagePtDataDict = (DebenuPDFLibraryFuncType21)AttachFunction("DPLGetImagePtDataDict");
		DebenuPDFLibraryGetInformation = (DebenuPDFLibraryFuncType131)AttachFunction("DPLGetInformation");
		DebenuPDFLibraryGetInstalledFontsByCharset = (DebenuPDFLibraryFuncType132)AttachFunction("DPLGetInstalledFontsByCharset");
		DebenuPDFLibraryGetInstalledFontsByCodePage = (DebenuPDFLibraryFuncType132)AttachFunction("DPLGetInstalledFontsByCodePage");
		DebenuPDFLibraryGetKerning = (DebenuPDFLibraryFuncType107)AttachFunction("DPLGetKerning");
		DebenuPDFLibraryGetLatestPrinterNames = (DebenuPDFLibraryFuncType127)AttachFunction("DPLGetLatestPrinterNames");
		DebenuPDFLibraryGetMaxObjectNumber = (DebenuPDFLibraryFuncType21)AttachFunction("DPLGetMaxObjectNumber");
		DebenuPDFLibraryGetMeasureDictBoundsCount = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetMeasureDictBoundsCount");
		DebenuPDFLibraryGetMeasureDictBoundsItem = (DebenuPDFLibraryFuncType15)AttachFunction("DPLGetMeasureDictBoundsItem");
		DebenuPDFLibraryGetMeasureDictCoordinateSystem = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetMeasureDictCoordinateSystem");
		DebenuPDFLibraryGetMeasureDictDCSDict = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetMeasureDictDCSDict");
		DebenuPDFLibraryGetMeasureDictGCSDict = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetMeasureDictGCSDict");
		DebenuPDFLibraryGetMeasureDictGPTSCount = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetMeasureDictGPTSCount");
		DebenuPDFLibraryGetMeasureDictGPTSItem = (DebenuPDFLibraryFuncType15)AttachFunction("DPLGetMeasureDictGPTSItem");
		DebenuPDFLibraryGetMeasureDictLPTSCount = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetMeasureDictLPTSCount");
		DebenuPDFLibraryGetMeasureDictLPTSItem = (DebenuPDFLibraryFuncType15)AttachFunction("DPLGetMeasureDictLPTSItem");
		DebenuPDFLibraryGetMeasureDictPDU = (DebenuPDFLibraryFuncType71)AttachFunction("DPLGetMeasureDictPDU");
		DebenuPDFLibraryGetNamedDestination = (DebenuPDFLibraryFuncType107)AttachFunction("DPLGetNamedDestination");
		DebenuPDFLibraryGetNextOutline = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetNextOutline");
		DebenuPDFLibraryGetObjectCount = (DebenuPDFLibraryFuncType21)AttachFunction("DPLGetObjectCount");
		DebenuPDFLibraryGetObjectDecodeError = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetObjectDecodeError");
		DebenuPDFLibraryGetObjectToString = (DebenuPDFLibraryFuncType3)AttachFunction("DPLGetObjectToString");
		DebenuPDFLibraryGetOpenActionDestination = (DebenuPDFLibraryFuncType21)AttachFunction("DPLGetOpenActionDestination");
		DebenuPDFLibraryGetOpenActionJavaScript = (DebenuPDFLibraryFuncType127)AttachFunction("DPLGetOpenActionJavaScript");
		DebenuPDFLibraryGetOptionalContentConfigCount = (DebenuPDFLibraryFuncType21)AttachFunction("DPLGetOptionalContentConfigCount");
		DebenuPDFLibraryGetOptionalContentConfigLocked = (DebenuPDFLibraryFuncType71)AttachFunction("DPLGetOptionalContentConfigLocked");
		DebenuPDFLibraryGetOptionalContentConfigOrderCount = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetOptionalContentConfigOrderCount");
		DebenuPDFLibraryGetOptionalContentConfigOrderItemID = (DebenuPDFLibraryFuncType71)AttachFunction("DPLGetOptionalContentConfigOrderItemID");
		DebenuPDFLibraryGetOptionalContentConfigOrderItemLabel = (DebenuPDFLibraryFuncType132)AttachFunction("DPLGetOptionalContentConfigOrderItemLabel");
		DebenuPDFLibraryGetOptionalContentConfigOrderItemLevel = (DebenuPDFLibraryFuncType71)AttachFunction("DPLGetOptionalContentConfigOrderItemLevel");
		DebenuPDFLibraryGetOptionalContentConfigOrderItemType = (DebenuPDFLibraryFuncType71)AttachFunction("DPLGetOptionalContentConfigOrderItemType");
		DebenuPDFLibraryGetOptionalContentConfigState = (DebenuPDFLibraryFuncType71)AttachFunction("DPLGetOptionalContentConfigState");
		DebenuPDFLibraryGetOptionalContentGroupID = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetOptionalContentGroupID");
		DebenuPDFLibraryGetOptionalContentGroupName = (DebenuPDFLibraryFuncType131)AttachFunction("DPLGetOptionalContentGroupName");
		DebenuPDFLibraryGetOptionalContentGroupPrintable = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetOptionalContentGroupPrintable");
		DebenuPDFLibraryGetOptionalContentGroupVisible = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetOptionalContentGroupVisible");
		DebenuPDFLibraryGetOrigin = (DebenuPDFLibraryFuncType21)AttachFunction("DPLGetOrigin");
		DebenuPDFLibraryGetOutlineActionID = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetOutlineActionID");
		DebenuPDFLibraryGetOutlineColor = (DebenuPDFLibraryFuncType15)AttachFunction("DPLGetOutlineColor");
		DebenuPDFLibraryGetOutlineDest = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetOutlineDest");
		DebenuPDFLibraryGetOutlineID = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetOutlineID");
		DebenuPDFLibraryGetOutlineJavaScript = (DebenuPDFLibraryFuncType131)AttachFunction("DPLGetOutlineJavaScript");
		DebenuPDFLibraryGetOutlineObjectNumber = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetOutlineObjectNumber");
		DebenuPDFLibraryGetOutlineOpenFile = (DebenuPDFLibraryFuncType131)AttachFunction("DPLGetOutlineOpenFile");
		DebenuPDFLibraryGetOutlinePage = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetOutlinePage");
		DebenuPDFLibraryGetOutlineStyle = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetOutlineStyle");
		DebenuPDFLibraryGetOutlineWebLink = (DebenuPDFLibraryFuncType131)AttachFunction("DPLGetOutlineWebLink");
		DebenuPDFLibraryGetPageBox = (DebenuPDFLibraryFuncType15)AttachFunction("DPLGetPageBox");
		DebenuPDFLibraryGetPageColorSpaces = (DebenuPDFLibraryFuncType131)AttachFunction("DPLGetPageColorSpaces");
		DebenuPDFLibraryGetPageContentToString = (DebenuPDFLibraryFuncType1)AttachFunction("DPLGetPageContentToString");
		DebenuPDFLibraryGetPageImageList = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetPageImageList");
		DebenuPDFLibraryGetPageJavaScript = (DebenuPDFLibraryFuncType136)AttachFunction("DPLGetPageJavaScript");
		DebenuPDFLibraryGetPageLGIDictContent = (DebenuPDFLibraryFuncType131)AttachFunction("DPLGetPageLGIDictContent");
		DebenuPDFLibraryGetPageLGIDictCount = (DebenuPDFLibraryFuncType21)AttachFunction("DPLGetPageLGIDictCount");
		DebenuPDFLibraryGetPageLabel = (DebenuPDFLibraryFuncType131)AttachFunction("DPLGetPageLabel");
		DebenuPDFLibraryGetPageLayout = (DebenuPDFLibraryFuncType21)AttachFunction("DPLGetPageLayout");
		DebenuPDFLibraryGetPageMetricsToString = (DebenuPDFLibraryFuncType5)AttachFunction("DPLGetPageMetricsToString");
		DebenuPDFLibraryGetPageMode = (DebenuPDFLibraryFuncType21)AttachFunction("DPLGetPageMode");
		DebenuPDFLibraryGetPageText = (DebenuPDFLibraryFuncType131)AttachFunction("DPLGetPageText");
		DebenuPDFLibraryGetPageViewPortCount = (DebenuPDFLibraryFuncType21)AttachFunction("DPLGetPageViewPortCount");
		DebenuPDFLibraryGetPageViewPortID = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetPageViewPortID");
		DebenuPDFLibraryGetParentOutline = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetParentOutline");
		DebenuPDFLibraryGetPrevOutline = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetPrevOutline");
		DebenuPDFLibraryGetPrintPreviewBitmapToString = (DebenuPDFLibraryFuncType8)AttachFunction("DPLGetPrintPreviewBitmapToString");
		DebenuPDFLibraryGetPrinterBins = (DebenuPDFLibraryFuncType136)AttachFunction("DPLGetPrinterBins");
		DebenuPDFLibraryGetPrinterDevModeToString = (DebenuPDFLibraryFuncType7)AttachFunction("DPLGetPrinterDevModeToString");
		DebenuPDFLibraryGetPrinterMediaTypes = (DebenuPDFLibraryFuncType136)AttachFunction("DPLGetPrinterMediaTypes");
		DebenuPDFLibraryGetPrinterNames = (DebenuPDFLibraryFuncType127)AttachFunction("DPLGetPrinterNames");
		DebenuPDFLibraryGetRenderScale = (DebenuPDFLibraryFuncType10)AttachFunction("DPLGetRenderScale");
		DebenuPDFLibraryGetSignProcessByteRange = (DebenuPDFLibraryFuncType71)AttachFunction("DPLGetSignProcessByteRange");
		DebenuPDFLibraryGetSignProcessResult = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetSignProcessResult");
		DebenuPDFLibraryGetStringListCount = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetStringListCount");
		DebenuPDFLibraryGetStringListItem = (DebenuPDFLibraryFuncType132)AttachFunction("DPLGetStringListItem");
		DebenuPDFLibraryGetTabOrderMode = (DebenuPDFLibraryFuncType127)AttachFunction("DPLGetTabOrderMode");
		DebenuPDFLibraryGetTableCellDblProperty = (DebenuPDFLibraryFuncType17)AttachFunction("DPLGetTableCellDblProperty");
		DebenuPDFLibraryGetTableCellIntProperty = (DebenuPDFLibraryFuncType84)AttachFunction("DPLGetTableCellIntProperty");
		DebenuPDFLibraryGetTableCellStrProperty = (DebenuPDFLibraryFuncType134)AttachFunction("DPLGetTableCellStrProperty");
		DebenuPDFLibraryGetTableColumnCount = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetTableColumnCount");
		DebenuPDFLibraryGetTableLastDrawnRow = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetTableLastDrawnRow");
		DebenuPDFLibraryGetTableRowCount = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetTableRowCount");
		DebenuPDFLibraryGetTempPath = (DebenuPDFLibraryFuncType127)AttachFunction("DPLGetTempPath");
		DebenuPDFLibraryGetTextAscent = (DebenuPDFLibraryFuncType10)AttachFunction("DPLGetTextAscent");
		DebenuPDFLibraryGetTextBlockBound = (DebenuPDFLibraryFuncType16)AttachFunction("DPLGetTextBlockBound");
		DebenuPDFLibraryGetTextBlockCharWidth = (DebenuPDFLibraryFuncType16)AttachFunction("DPLGetTextBlockCharWidth");
		DebenuPDFLibraryGetTextBlockColor = (DebenuPDFLibraryFuncType16)AttachFunction("DPLGetTextBlockColor");
		DebenuPDFLibraryGetTextBlockColorType = (DebenuPDFLibraryFuncType71)AttachFunction("DPLGetTextBlockColorType");
		DebenuPDFLibraryGetTextBlockCount = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetTextBlockCount");
		DebenuPDFLibraryGetTextBlockFontName = (DebenuPDFLibraryFuncType132)AttachFunction("DPLGetTextBlockFontName");
		DebenuPDFLibraryGetTextBlockFontSize = (DebenuPDFLibraryFuncType15)AttachFunction("DPLGetTextBlockFontSize");
		DebenuPDFLibraryGetTextBlockText = (DebenuPDFLibraryFuncType132)AttachFunction("DPLGetTextBlockText");
		DebenuPDFLibraryGetTextBound = (DebenuPDFLibraryFuncType13)AttachFunction("DPLGetTextBound");
		DebenuPDFLibraryGetTextDescent = (DebenuPDFLibraryFuncType10)AttachFunction("DPLGetTextDescent");
		DebenuPDFLibraryGetTextHeight = (DebenuPDFLibraryFuncType10)AttachFunction("DPLGetTextHeight");
		DebenuPDFLibraryGetTextSize = (DebenuPDFLibraryFuncType10)AttachFunction("DPLGetTextSize");
		DebenuPDFLibraryGetTextWidth = (DebenuPDFLibraryFuncType18)AttachFunction("DPLGetTextWidth");
		DebenuPDFLibraryGetUnicodeCharactersFromEncoding = (DebenuPDFLibraryFuncType131)AttachFunction("DPLGetUnicodeCharactersFromEncoding");
		DebenuPDFLibraryGetViewPortBBox = (DebenuPDFLibraryFuncType15)AttachFunction("DPLGetViewPortBBox");
		DebenuPDFLibraryGetViewPortMeasureDict = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetViewPortMeasureDict");
		DebenuPDFLibraryGetViewPortName = (DebenuPDFLibraryFuncType131)AttachFunction("DPLGetViewPortName");
		DebenuPDFLibraryGetViewPortPtDataDict = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetViewPortPtDataDict");
		DebenuPDFLibraryGetViewerPreferences = (DebenuPDFLibraryFuncType62)AttachFunction("DPLGetViewerPreferences");
		DebenuPDFLibraryGetWrappedText = (DebenuPDFLibraryFuncType130)AttachFunction("DPLGetWrappedText");
		DebenuPDFLibraryGetWrappedTextBreakString = (DebenuPDFLibraryFuncType130)AttachFunction("DPLGetWrappedTextBreakString");
		DebenuPDFLibraryGetWrappedTextHeight = (DebenuPDFLibraryFuncType11)AttachFunction("DPLGetWrappedTextHeight");
		DebenuPDFLibraryGetWrappedTextLineCount = (DebenuPDFLibraryFuncType61)AttachFunction("DPLGetWrappedTextLineCount");
		DebenuPDFLibraryGetXFAFormFieldCount = (DebenuPDFLibraryFuncType21)AttachFunction("DPLGetXFAFormFieldCount");
		DebenuPDFLibraryGetXFAFormFieldName = (DebenuPDFLibraryFuncType131)AttachFunction("DPLGetXFAFormFieldName");
		DebenuPDFLibraryGetXFAFormFieldNames = (DebenuPDFLibraryFuncType136)AttachFunction("DPLGetXFAFormFieldNames");
		DebenuPDFLibraryGetXFAFormFieldValue = (DebenuPDFLibraryFuncType136)AttachFunction("DPLGetXFAFormFieldValue");
		DebenuPDFLibraryGetXFAToString = (DebenuPDFLibraryFuncType3)AttachFunction("DPLGetXFAToString");
		DebenuPDFLibraryGlobalJavaScriptCount = (DebenuPDFLibraryFuncType21)AttachFunction("DPLGlobalJavaScriptCount");
		DebenuPDFLibraryGlobalJavaScriptPackageName = (DebenuPDFLibraryFuncType131)AttachFunction("DPLGlobalJavaScriptPackageName");
		DebenuPDFLibraryHasFontResources = (DebenuPDFLibraryFuncType21)AttachFunction("DPLHasFontResources");
		DebenuPDFLibraryHasPageBox = (DebenuPDFLibraryFuncType62)AttachFunction("DPLHasPageBox");
		DebenuPDFLibraryHidePage = (DebenuPDFLibraryFuncType21)AttachFunction("DPLHidePage");
		DebenuPDFLibraryImageCount = (DebenuPDFLibraryFuncType21)AttachFunction("DPLImageCount");
		DebenuPDFLibraryImageFillColor = (DebenuPDFLibraryFuncType21)AttachFunction("DPLImageFillColor");
		DebenuPDFLibraryImageHeight = (DebenuPDFLibraryFuncType21)AttachFunction("DPLImageHeight");
		DebenuPDFLibraryImageHorizontalResolution = (DebenuPDFLibraryFuncType21)AttachFunction("DPLImageHorizontalResolution");
		DebenuPDFLibraryImageResolutionUnits = (DebenuPDFLibraryFuncType21)AttachFunction("DPLImageResolutionUnits");
		DebenuPDFLibraryImageType = (DebenuPDFLibraryFuncType21)AttachFunction("DPLImageType");
		DebenuPDFLibraryImageVerticalResolution = (DebenuPDFLibraryFuncType21)AttachFunction("DPLImageVerticalResolution");
		DebenuPDFLibraryImageWidth = (DebenuPDFLibraryFuncType21)AttachFunction("DPLImageWidth");
		DebenuPDFLibraryImportEMFFromFile = (DebenuPDFLibraryFuncType113)AttachFunction("DPLImportEMFFromFile");
		DebenuPDFLibraryInsertPages = (DebenuPDFLibraryFuncType71)AttachFunction("DPLInsertPages");
		DebenuPDFLibraryInsertTableColumns = (DebenuPDFLibraryFuncType79)AttachFunction("DPLInsertTableColumns");
		DebenuPDFLibraryInsertTableRows = (DebenuPDFLibraryFuncType79)AttachFunction("DPLInsertTableRows");
		DebenuPDFLibraryIsAnnotFormField = (DebenuPDFLibraryFuncType62)AttachFunction("DPLIsAnnotFormField");
		DebenuPDFLibraryIsTaggedPDF = (DebenuPDFLibraryFuncType21)AttachFunction("DPLIsTaggedPDF");
		DebenuPDFLibraryLastErrorCode = (DebenuPDFLibraryFuncType21)AttachFunction("DPLLastErrorCode");
		DebenuPDFLibraryLastRenderError = (DebenuPDFLibraryFuncType127)AttachFunction("DPLLastRenderError");
		DebenuPDFLibraryLibraryVersion = (DebenuPDFLibraryFuncType127)AttachFunction("DPLLibraryVersion");
		DebenuPDFLibraryLicenseInfo = (DebenuPDFLibraryFuncType127)AttachFunction("DPLLicenseInfo");
		DebenuPDFLibraryLinearized = (DebenuPDFLibraryFuncType21)AttachFunction("DPLLinearized");
		DebenuPDFLibraryLoadFromCanvasDC = (DebenuPDFLibraryFuncType60)AttachFunction("DPLLoadFromCanvasDC");
		DebenuPDFLibraryLoadFromFile = (DebenuPDFLibraryFuncType117)AttachFunction("DPLLoadFromFile");
		DebenuPDFLibraryLoadFromString = (DebenuPDFLibraryFuncType26)AttachFunction("DPLLoadFromString");
		DebenuPDFLibraryLoadState = (DebenuPDFLibraryFuncType21)AttachFunction("DPLLoadState");
		DebenuPDFLibraryMergeDocument = (DebenuPDFLibraryFuncType62)AttachFunction("DPLMergeDocument");
		DebenuPDFLibraryMergeFileList = (DebenuPDFLibraryFuncType117)AttachFunction("DPLMergeFileList");
		DebenuPDFLibraryMergeFileListFast = (DebenuPDFLibraryFuncType117)AttachFunction("DPLMergeFileListFast");
		DebenuPDFLibraryMergeFiles = (DebenuPDFLibraryFuncType121)AttachFunction("DPLMergeFiles");
		DebenuPDFLibraryMergeTableCells = (DebenuPDFLibraryFuncType86)AttachFunction("DPLMergeTableCells");
		DebenuPDFLibraryMoveContentStream = (DebenuPDFLibraryFuncType71)AttachFunction("DPLMoveContentStream");
		DebenuPDFLibraryMoveOutlineAfter = (DebenuPDFLibraryFuncType71)AttachFunction("DPLMoveOutlineAfter");
		DebenuPDFLibraryMoveOutlineBefore = (DebenuPDFLibraryFuncType71)AttachFunction("DPLMoveOutlineBefore");
		DebenuPDFLibraryMovePage = (DebenuPDFLibraryFuncType62)AttachFunction("DPLMovePage");
		DebenuPDFLibraryMovePath = (DebenuPDFLibraryFuncType28)AttachFunction("DPLMovePath");
		DebenuPDFLibraryMultiplyScale = (DebenuPDFLibraryFuncType27)AttachFunction("DPLMultiplyScale");
		DebenuPDFLibraryNewChildFormField = (DebenuPDFLibraryFuncType101)AttachFunction("DPLNewChildFormField");
		DebenuPDFLibraryNewContentStream = (DebenuPDFLibraryFuncType21)AttachFunction("DPLNewContentStream");
		DebenuPDFLibraryNewCustomPrinter = (DebenuPDFLibraryFuncType136)AttachFunction("DPLNewCustomPrinter");
		DebenuPDFLibraryNewDestination = (DebenuPDFLibraryFuncType81)AttachFunction("DPLNewDestination");
		DebenuPDFLibraryNewDocument = (DebenuPDFLibraryFuncType21)AttachFunction("DPLNewDocument");
		DebenuPDFLibraryNewFormField = (DebenuPDFLibraryFuncType112)AttachFunction("DPLNewFormField");
		DebenuPDFLibraryNewInternalPrinterObject = (DebenuPDFLibraryFuncType62)AttachFunction("DPLNewInternalPrinterObject");
		DebenuPDFLibraryNewNamedDestination = (DebenuPDFLibraryFuncType112)AttachFunction("DPLNewNamedDestination");
		DebenuPDFLibraryNewOptionalContentGroup = (DebenuPDFLibraryFuncType107)AttachFunction("DPLNewOptionalContentGroup");
		DebenuPDFLibraryNewOutline = (DebenuPDFLibraryFuncType102)AttachFunction("DPLNewOutline");
		DebenuPDFLibraryNewPage = (DebenuPDFLibraryFuncType21)AttachFunction("DPLNewPage");
		DebenuPDFLibraryNewPageFromCanvasDC = (DebenuPDFLibraryFuncType71)AttachFunction("DPLNewPageFromCanvasDC");
		DebenuPDFLibraryNewPages = (DebenuPDFLibraryFuncType62)AttachFunction("DPLNewPages");
		DebenuPDFLibraryNewPostScriptXObject = (DebenuPDFLibraryFuncType107)AttachFunction("DPLNewPostScriptXObject");
		DebenuPDFLibraryNewRGBAxialShader = (DebenuPDFLibraryFuncType110)AttachFunction("DPLNewRGBAxialShader");
		DebenuPDFLibraryNewSignProcessFromFile = (DebenuPDFLibraryFuncType117)AttachFunction("DPLNewSignProcessFromFile");
		DebenuPDFLibraryNewSignProcessFromString = (DebenuPDFLibraryFuncType26)AttachFunction("DPLNewSignProcessFromString");
		DebenuPDFLibraryNewStaticOutline = (DebenuPDFLibraryFuncType99)AttachFunction("DPLNewStaticOutline");
		DebenuPDFLibraryNewTilingPatternFromCapturedPage = (DebenuPDFLibraryFuncType112)AttachFunction("DPLNewTilingPatternFromCapturedPage");
		DebenuPDFLibraryNoEmbedFontListAdd = (DebenuPDFLibraryFuncType107)AttachFunction("DPLNoEmbedFontListAdd");
		DebenuPDFLibraryNoEmbedFontListCount = (DebenuPDFLibraryFuncType21)AttachFunction("DPLNoEmbedFontListCount");
		DebenuPDFLibraryNoEmbedFontListGet = (DebenuPDFLibraryFuncType131)AttachFunction("DPLNoEmbedFontListGet");
		DebenuPDFLibraryNoEmbedFontListRemoveAll = (DebenuPDFLibraryFuncType21)AttachFunction("DPLNoEmbedFontListRemoveAll");
		DebenuPDFLibraryNoEmbedFontListRemoveIndex = (DebenuPDFLibraryFuncType62)AttachFunction("DPLNoEmbedFontListRemoveIndex");
		DebenuPDFLibraryNoEmbedFontListRemoveName = (DebenuPDFLibraryFuncType107)AttachFunction("DPLNoEmbedFontListRemoveName");
		DebenuPDFLibraryNormalizePage = (DebenuPDFLibraryFuncType62)AttachFunction("DPLNormalizePage");
		DebenuPDFLibraryOpenOutline = (DebenuPDFLibraryFuncType62)AttachFunction("DPLOpenOutline");
		DebenuPDFLibraryOptionalContentGroupCount = (DebenuPDFLibraryFuncType21)AttachFunction("DPLOptionalContentGroupCount");
		DebenuPDFLibraryOutlineCount = (DebenuPDFLibraryFuncType21)AttachFunction("DPLOutlineCount");
		DebenuPDFLibraryOutlineTitle = (DebenuPDFLibraryFuncType131)AttachFunction("DPLOutlineTitle");
		DebenuPDFLibraryPageCount = (DebenuPDFLibraryFuncType21)AttachFunction("DPLPageCount");
		DebenuPDFLibraryPageHasFontResources = (DebenuPDFLibraryFuncType62)AttachFunction("DPLPageHasFontResources");
		DebenuPDFLibraryPageHeight = (DebenuPDFLibraryFuncType10)AttachFunction("DPLPageHeight");
		DebenuPDFLibraryPageJavaScriptAction = (DebenuPDFLibraryFuncType117)AttachFunction("DPLPageJavaScriptAction");
		DebenuPDFLibraryPageRotation = (DebenuPDFLibraryFuncType21)AttachFunction("DPLPageRotation");
		DebenuPDFLibraryPageWidth = (DebenuPDFLibraryFuncType10)AttachFunction("DPLPageWidth");
		DebenuPDFLibraryPrintDocument = (DebenuPDFLibraryFuncType114)AttachFunction("DPLPrintDocument");
		DebenuPDFLibraryPrintDocumentToFile = (DebenuPDFLibraryFuncType115)AttachFunction("DPLPrintDocumentToFile");
		DebenuPDFLibraryPrintOptions = (DebenuPDFLibraryFuncType97)AttachFunction("DPLPrintOptions");
		DebenuPDFLibraryPrintPages = (DebenuPDFLibraryFuncType118)AttachFunction("DPLPrintPages");
		DebenuPDFLibraryPrintPagesToFile = (DebenuPDFLibraryFuncType120)AttachFunction("DPLPrintPagesToFile");
		DebenuPDFLibraryReleaseBuffer = (DebenuPDFLibraryFuncType22)AttachFunction("DPLReleaseBuffer");
		DebenuPDFLibraryReleaseImage = (DebenuPDFLibraryFuncType62)AttachFunction("DPLReleaseImage");
		DebenuPDFLibraryReleaseImageList = (DebenuPDFLibraryFuncType62)AttachFunction("DPLReleaseImageList");
		DebenuPDFLibraryReleaseLibrary = (DebenuPDFLibraryFuncType21)AttachFunction("DPLReleaseLibrary");
		DebenuPDFLibraryReleaseSignProcess = (DebenuPDFLibraryFuncType62)AttachFunction("DPLReleaseSignProcess");
		DebenuPDFLibraryReleaseStringList = (DebenuPDFLibraryFuncType62)AttachFunction("DPLReleaseStringList");
		DebenuPDFLibraryReleaseTextBlocks = (DebenuPDFLibraryFuncType62)AttachFunction("DPLReleaseTextBlocks");
		DebenuPDFLibraryRemoveAppearanceStream = (DebenuPDFLibraryFuncType62)AttachFunction("DPLRemoveAppearanceStream");
		DebenuPDFLibraryRemoveCustomInformation = (DebenuPDFLibraryFuncType107)AttachFunction("DPLRemoveCustomInformation");
		DebenuPDFLibraryRemoveDocument = (DebenuPDFLibraryFuncType62)AttachFunction("DPLRemoveDocument");
		DebenuPDFLibraryRemoveEmbeddedFile = (DebenuPDFLibraryFuncType62)AttachFunction("DPLRemoveEmbeddedFile");
		DebenuPDFLibraryRemoveFormFieldBackgroundColor = (DebenuPDFLibraryFuncType62)AttachFunction("DPLRemoveFormFieldBackgroundColor");
		DebenuPDFLibraryRemoveFormFieldBorderColor = (DebenuPDFLibraryFuncType62)AttachFunction("DPLRemoveFormFieldBorderColor");
		DebenuPDFLibraryRemoveGlobalJavaScript = (DebenuPDFLibraryFuncType107)AttachFunction("DPLRemoveGlobalJavaScript");
		DebenuPDFLibraryRemoveOpenAction = (DebenuPDFLibraryFuncType21)AttachFunction("DPLRemoveOpenAction");
		DebenuPDFLibraryRemoveOutline = (DebenuPDFLibraryFuncType62)AttachFunction("DPLRemoveOutline");
		DebenuPDFLibraryRemoveSharedContentStreams = (DebenuPDFLibraryFuncType21)AttachFunction("DPLRemoveSharedContentStreams");
		DebenuPDFLibraryRemoveStyle = (DebenuPDFLibraryFuncType107)AttachFunction("DPLRemoveStyle");
		DebenuPDFLibraryRemoveUsageRights = (DebenuPDFLibraryFuncType21)AttachFunction("DPLRemoveUsageRights");
		DebenuPDFLibraryRemoveXFAEntries = (DebenuPDFLibraryFuncType62)AttachFunction("DPLRemoveXFAEntries");
		DebenuPDFLibraryRenderDocumentToFile = (DebenuPDFLibraryFuncType95)AttachFunction("DPLRenderDocumentToFile");
		DebenuPDFLibraryRenderPageToDC = (DebenuPDFLibraryFuncType78)AttachFunction("DPLRenderPageToDC");
		DebenuPDFLibraryRenderPageToFile = (DebenuPDFLibraryFuncType96)AttachFunction("DPLRenderPageToFile");
		DebenuPDFLibraryRenderPageToString = (DebenuPDFLibraryFuncType5)AttachFunction("DPLRenderPageToString");
		DebenuPDFLibraryReplaceFonts = (DebenuPDFLibraryFuncType21)AttachFunction("DPLReplaceFonts");
		DebenuPDFLibraryReplaceImage = (DebenuPDFLibraryFuncType71)AttachFunction("DPLReplaceImage");
		DebenuPDFLibraryReplaceTag = (DebenuPDFLibraryFuncType117)AttachFunction("DPLReplaceTag");
		DebenuPDFLibraryRequestPrinterStatus = (DebenuPDFLibraryFuncType62)AttachFunction("DPLRequestPrinterStatus");
		DebenuPDFLibraryRetrieveCustomDataToFile = (DebenuPDFLibraryFuncType118)AttachFunction("DPLRetrieveCustomDataToFile");
		DebenuPDFLibraryRetrieveCustomDataToString = (DebenuPDFLibraryFuncType2)AttachFunction("DPLRetrieveCustomDataToString");
		DebenuPDFLibraryReverseImage = (DebenuPDFLibraryFuncType62)AttachFunction("DPLReverseImage");
		DebenuPDFLibraryRotatePage = (DebenuPDFLibraryFuncType62)AttachFunction("DPLRotatePage");
		DebenuPDFLibrarySaveFontToFile = (DebenuPDFLibraryFuncType107)AttachFunction("DPLSaveFontToFile");
		DebenuPDFLibrarySaveImageListItemDataToFile = (DebenuPDFLibraryFuncType96)AttachFunction("DPLSaveImageListItemDataToFile");
		DebenuPDFLibrarySaveImageToFile = (DebenuPDFLibraryFuncType107)AttachFunction("DPLSaveImageToFile");
		DebenuPDFLibrarySaveImageToString = (DebenuPDFLibraryFuncType1)AttachFunction("DPLSaveImageToString");
		DebenuPDFLibrarySaveState = (DebenuPDFLibraryFuncType21)AttachFunction("DPLSaveState");
		DebenuPDFLibrarySaveStyle = (DebenuPDFLibraryFuncType107)AttachFunction("DPLSaveStyle");
		DebenuPDFLibrarySaveToFile = (DebenuPDFLibraryFuncType107)AttachFunction("DPLSaveToFile");
		DebenuPDFLibrarySaveToString = (DebenuPDFLibraryFuncType1)AttachFunction("DPLSaveToString");
		DebenuPDFLibrarySecurityInfo = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSecurityInfo");
		DebenuPDFLibrarySelectContentStream = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSelectContentStream");
		DebenuPDFLibrarySelectDocument = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSelectDocument");
		DebenuPDFLibrarySelectFont = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSelectFont");
		DebenuPDFLibrarySelectImage = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSelectImage");
		DebenuPDFLibrarySelectPage = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSelectPage");
		DebenuPDFLibrarySelectRenderer = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSelectRenderer");
		DebenuPDFLibrarySelectedDocument = (DebenuPDFLibraryFuncType21)AttachFunction("DPLSelectedDocument");
		DebenuPDFLibrarySelectedFont = (DebenuPDFLibraryFuncType21)AttachFunction("DPLSelectedFont");
		DebenuPDFLibrarySelectedImage = (DebenuPDFLibraryFuncType21)AttachFunction("DPLSelectedImage");
		DebenuPDFLibrarySelectedPage = (DebenuPDFLibraryFuncType21)AttachFunction("DPLSelectedPage");
		DebenuPDFLibrarySetActionURL = (DebenuPDFLibraryFuncType99)AttachFunction("DPLSetActionURL");
		DebenuPDFLibrarySetAnnotBorderColor = (DebenuPDFLibraryFuncType66)AttachFunction("DPLSetAnnotBorderColor");
		DebenuPDFLibrarySetAnnotBorderStyle = (DebenuPDFLibraryFuncType70)AttachFunction("DPLSetAnnotBorderStyle");
		DebenuPDFLibrarySetAnnotContents = (DebenuPDFLibraryFuncType99)AttachFunction("DPLSetAnnotContents");
		DebenuPDFLibrarySetAnnotDblProperty = (DebenuPDFLibraryFuncType72)AttachFunction("DPLSetAnnotDblProperty");
		DebenuPDFLibrarySetAnnotIntProperty = (DebenuPDFLibraryFuncType79)AttachFunction("DPLSetAnnotIntProperty");
		DebenuPDFLibrarySetAnnotQuadPoints = (DebenuPDFLibraryFuncType76)AttachFunction("DPLSetAnnotQuadPoints");
		DebenuPDFLibrarySetAnnotRect = (DebenuPDFLibraryFuncType67)AttachFunction("DPLSetAnnotRect");
		DebenuPDFLibrarySetAnnotStrProperty = (DebenuPDFLibraryFuncType97)AttachFunction("DPLSetAnnotStrProperty");
		DebenuPDFLibrarySetAnsiMode = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSetAnsiMode");
		DebenuPDFLibrarySetBaseURL = (DebenuPDFLibraryFuncType107)AttachFunction("DPLSetBaseURL");
		DebenuPDFLibrarySetBlendMode = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSetBlendMode");
		DebenuPDFLibrarySetBreakString = (DebenuPDFLibraryFuncType107)AttachFunction("DPLSetBreakString");
		DebenuPDFLibrarySetCSDictEPSG = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetCSDictEPSG");
		DebenuPDFLibrarySetCSDictType = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetCSDictType");
		DebenuPDFLibrarySetCSDictWKT = (DebenuPDFLibraryFuncType99)AttachFunction("DPLSetCSDictWKT");
		DebenuPDFLibrarySetCairoFileName = (DebenuPDFLibraryFuncType107)AttachFunction("DPLSetCairoFileName");
		DebenuPDFLibrarySetCapturedPageOptional = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetCapturedPageOptional");
		DebenuPDFLibrarySetCapturedPageTransparencyGroup = (DebenuPDFLibraryFuncType84)AttachFunction("DPLSetCapturedPageTransparencyGroup");
		DebenuPDFLibrarySetCatalogInformation = (DebenuPDFLibraryFuncType117)AttachFunction("DPLSetCatalogInformation");
		DebenuPDFLibrarySetCharWidth = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetCharWidth");
		DebenuPDFLibrarySetClippingPath = (DebenuPDFLibraryFuncType21)AttachFunction("DPLSetClippingPath");
		DebenuPDFLibrarySetClippingPathEvenOdd = (DebenuPDFLibraryFuncType21)AttachFunction("DPLSetClippingPathEvenOdd");
		DebenuPDFLibrarySetCompatibility = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetCompatibility");
		DebenuPDFLibrarySetContentStreamFromString = (DebenuPDFLibraryFuncType22)AttachFunction("DPLSetContentStreamFromString");
		DebenuPDFLibrarySetContentStreamOptional = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSetContentStreamOptional");
		DebenuPDFLibrarySetCropBox = (DebenuPDFLibraryFuncType30)AttachFunction("DPLSetCropBox");
		DebenuPDFLibrarySetCustomInformation = (DebenuPDFLibraryFuncType117)AttachFunction("DPLSetCustomInformation");
		DebenuPDFLibrarySetCustomLineDash = (DebenuPDFLibraryFuncType108)AttachFunction("DPLSetCustomLineDash");
		DebenuPDFLibrarySetDestProperties = (DebenuPDFLibraryFuncType81)AttachFunction("DPLSetDestProperties");
		DebenuPDFLibrarySetDestValue = (DebenuPDFLibraryFuncType72)AttachFunction("DPLSetDestValue");
		DebenuPDFLibrarySetDocumentMetadata = (DebenuPDFLibraryFuncType107)AttachFunction("DPLSetDocumentMetadata");
		DebenuPDFLibrarySetEmbeddedFileStrProperty = (DebenuPDFLibraryFuncType97)AttachFunction("DPLSetEmbeddedFileStrProperty");
		DebenuPDFLibrarySetFillColor = (DebenuPDFLibraryFuncType29)AttachFunction("DPLSetFillColor");
		DebenuPDFLibrarySetFillColorCMYK = (DebenuPDFLibraryFuncType30)AttachFunction("DPLSetFillColorCMYK");
		DebenuPDFLibrarySetFillColorSep = (DebenuPDFLibraryFuncType108)AttachFunction("DPLSetFillColorSep");
		DebenuPDFLibrarySetFillShader = (DebenuPDFLibraryFuncType107)AttachFunction("DPLSetFillShader");
		DebenuPDFLibrarySetFillTilingPattern = (DebenuPDFLibraryFuncType107)AttachFunction("DPLSetFillTilingPattern");
		DebenuPDFLibrarySetFindImagesMode = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSetFindImagesMode");
		DebenuPDFLibrarySetFontEncoding = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSetFontEncoding");
		DebenuPDFLibrarySetFontFlags = (DebenuPDFLibraryFuncType94)AttachFunction("DPLSetFontFlags");
		DebenuPDFLibrarySetFormFieldAlignment = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetFormFieldAlignment");
		DebenuPDFLibrarySetFormFieldAnnotFlags = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetFormFieldAnnotFlags");
		DebenuPDFLibrarySetFormFieldBackgroundColor = (DebenuPDFLibraryFuncType66)AttachFunction("DPLSetFormFieldBackgroundColor");
		DebenuPDFLibrarySetFormFieldBackgroundColorCMYK = (DebenuPDFLibraryFuncType67)AttachFunction("DPLSetFormFieldBackgroundColorCMYK");
		DebenuPDFLibrarySetFormFieldBackgroundColorGray = (DebenuPDFLibraryFuncType64)AttachFunction("DPLSetFormFieldBackgroundColorGray");
		DebenuPDFLibrarySetFormFieldBackgroundColorSep = (DebenuPDFLibraryFuncType100)AttachFunction("DPLSetFormFieldBackgroundColorSep");
		DebenuPDFLibrarySetFormFieldBorderColor = (DebenuPDFLibraryFuncType66)AttachFunction("DPLSetFormFieldBorderColor");
		DebenuPDFLibrarySetFormFieldBorderColorCMYK = (DebenuPDFLibraryFuncType67)AttachFunction("DPLSetFormFieldBorderColorCMYK");
		DebenuPDFLibrarySetFormFieldBorderColorGray = (DebenuPDFLibraryFuncType64)AttachFunction("DPLSetFormFieldBorderColorGray");
		DebenuPDFLibrarySetFormFieldBorderColorSep = (DebenuPDFLibraryFuncType100)AttachFunction("DPLSetFormFieldBorderColorSep");
		DebenuPDFLibrarySetFormFieldBorderStyle = (DebenuPDFLibraryFuncType70)AttachFunction("DPLSetFormFieldBorderStyle");
		DebenuPDFLibrarySetFormFieldBounds = (DebenuPDFLibraryFuncType67)AttachFunction("DPLSetFormFieldBounds");
		DebenuPDFLibrarySetFormFieldCalcOrder = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetFormFieldCalcOrder");
		DebenuPDFLibrarySetFormFieldCaption = (DebenuPDFLibraryFuncType99)AttachFunction("DPLSetFormFieldCaption");
		DebenuPDFLibrarySetFormFieldCheckStyle = (DebenuPDFLibraryFuncType79)AttachFunction("DPLSetFormFieldCheckStyle");
		DebenuPDFLibrarySetFormFieldChildTitle = (DebenuPDFLibraryFuncType99)AttachFunction("DPLSetFormFieldChildTitle");
		DebenuPDFLibrarySetFormFieldChoiceSub = (DebenuPDFLibraryFuncType98)AttachFunction("DPLSetFormFieldChoiceSub");
		DebenuPDFLibrarySetFormFieldChoiceType = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetFormFieldChoiceType");
		DebenuPDFLibrarySetFormFieldColor = (DebenuPDFLibraryFuncType66)AttachFunction("DPLSetFormFieldColor");
		DebenuPDFLibrarySetFormFieldColorCMYK = (DebenuPDFLibraryFuncType67)AttachFunction("DPLSetFormFieldColorCMYK");
		DebenuPDFLibrarySetFormFieldColorSep = (DebenuPDFLibraryFuncType100)AttachFunction("DPLSetFormFieldColorSep");
		DebenuPDFLibrarySetFormFieldComb = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetFormFieldComb");
		DebenuPDFLibrarySetFormFieldDefaultValue = (DebenuPDFLibraryFuncType99)AttachFunction("DPLSetFormFieldDefaultValue");
		DebenuPDFLibrarySetFormFieldDescription = (DebenuPDFLibraryFuncType99)AttachFunction("DPLSetFormFieldDescription");
		DebenuPDFLibrarySetFormFieldFlags = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetFormFieldFlags");
		DebenuPDFLibrarySetFormFieldFont = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetFormFieldFont");
		DebenuPDFLibrarySetFormFieldHighlightMode = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetFormFieldHighlightMode");
		DebenuPDFLibrarySetFormFieldIcon = (DebenuPDFLibraryFuncType79)AttachFunction("DPLSetFormFieldIcon");
		DebenuPDFLibrarySetFormFieldIconStyle = (DebenuPDFLibraryFuncType90)AttachFunction("DPLSetFormFieldIconStyle");
		DebenuPDFLibrarySetFormFieldMaxLen = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetFormFieldMaxLen");
		DebenuPDFLibrarySetFormFieldNoExport = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetFormFieldNoExport");
		DebenuPDFLibrarySetFormFieldOptional = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetFormFieldOptional");
		DebenuPDFLibrarySetFormFieldPage = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetFormFieldPage");
		DebenuPDFLibrarySetFormFieldPrintable = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetFormFieldPrintable");
		DebenuPDFLibrarySetFormFieldReadOnly = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetFormFieldReadOnly");
		DebenuPDFLibrarySetFormFieldRequired = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetFormFieldRequired");
		DebenuPDFLibrarySetFormFieldResetAction = (DebenuPDFLibraryFuncType99)AttachFunction("DPLSetFormFieldResetAction");
		DebenuPDFLibrarySetFormFieldRichTextString = (DebenuPDFLibraryFuncType104)AttachFunction("DPLSetFormFieldRichTextString");
		DebenuPDFLibrarySetFormFieldRotation = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetFormFieldRotation");
		DebenuPDFLibrarySetFormFieldSignatureImage = (DebenuPDFLibraryFuncType79)AttachFunction("DPLSetFormFieldSignatureImage");
		DebenuPDFLibrarySetFormFieldStandardFont = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetFormFieldStandardFont");
		DebenuPDFLibrarySetFormFieldSubmitAction = (DebenuPDFLibraryFuncType104)AttachFunction("DPLSetFormFieldSubmitAction");
		DebenuPDFLibrarySetFormFieldSubmitActionEx = (DebenuPDFLibraryFuncType105)AttachFunction("DPLSetFormFieldSubmitActionEx");
		DebenuPDFLibrarySetFormFieldTabOrder = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetFormFieldTabOrder");
		DebenuPDFLibrarySetFormFieldTextFlags = (DebenuPDFLibraryFuncType90)AttachFunction("DPLSetFormFieldTextFlags");
		DebenuPDFLibrarySetFormFieldTextSize = (DebenuPDFLibraryFuncType64)AttachFunction("DPLSetFormFieldTextSize");
		DebenuPDFLibrarySetFormFieldValue = (DebenuPDFLibraryFuncType99)AttachFunction("DPLSetFormFieldValue");
		DebenuPDFLibrarySetFormFieldValueByTitle = (DebenuPDFLibraryFuncType117)AttachFunction("DPLSetFormFieldValueByTitle");
		DebenuPDFLibrarySetFormFieldVisible = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetFormFieldVisible");
		DebenuPDFLibrarySetGDIPlusFileName = (DebenuPDFLibraryFuncType107)AttachFunction("DPLSetGDIPlusFileName");
		DebenuPDFLibrarySetGDIPlusOptions = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetGDIPlusOptions");
		DebenuPDFLibrarySetHTMLBoldFont = (DebenuPDFLibraryFuncType112)AttachFunction("DPLSetHTMLBoldFont");
		DebenuPDFLibrarySetHTMLBoldItalicFont = (DebenuPDFLibraryFuncType112)AttachFunction("DPLSetHTMLBoldItalicFont");
		DebenuPDFLibrarySetHTMLItalicFont = (DebenuPDFLibraryFuncType112)AttachFunction("DPLSetHTMLItalicFont");
		DebenuPDFLibrarySetHTMLNormalFont = (DebenuPDFLibraryFuncType112)AttachFunction("DPLSetHTMLNormalFont");
		DebenuPDFLibrarySetHeaderCommentsFromString = (DebenuPDFLibraryFuncType22)AttachFunction("DPLSetHeaderCommentsFromString");
		DebenuPDFLibrarySetImageAsMask = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSetImageAsMask");
		DebenuPDFLibrarySetImageMask = (DebenuPDFLibraryFuncType32)AttachFunction("DPLSetImageMask");
		DebenuPDFLibrarySetImageMaskCMYK = (DebenuPDFLibraryFuncType33)AttachFunction("DPLSetImageMaskCMYK");
		DebenuPDFLibrarySetImageMaskFromImage = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSetImageMaskFromImage");
		DebenuPDFLibrarySetImageOptional = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSetImageOptional");
		DebenuPDFLibrarySetImageResolution = (DebenuPDFLibraryFuncType79)AttachFunction("DPLSetImageResolution");
		DebenuPDFLibrarySetInformation = (DebenuPDFLibraryFuncType99)AttachFunction("DPLSetInformation");
		DebenuPDFLibrarySetJPEGQuality = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSetJPEGQuality");
		DebenuPDFLibrarySetJavaScriptMode = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSetJavaScriptMode");
		DebenuPDFLibrarySetKerning = (DebenuPDFLibraryFuncType112)AttachFunction("DPLSetKerning");
		DebenuPDFLibrarySetLineCap = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSetLineCap");
		DebenuPDFLibrarySetLineColor = (DebenuPDFLibraryFuncType29)AttachFunction("DPLSetLineColor");
		DebenuPDFLibrarySetLineColorCMYK = (DebenuPDFLibraryFuncType30)AttachFunction("DPLSetLineColorCMYK");
		DebenuPDFLibrarySetLineColorSep = (DebenuPDFLibraryFuncType108)AttachFunction("DPLSetLineColorSep");
		DebenuPDFLibrarySetLineDash = (DebenuPDFLibraryFuncType28)AttachFunction("DPLSetLineDash");
		DebenuPDFLibrarySetLineDashEx = (DebenuPDFLibraryFuncType107)AttachFunction("DPLSetLineDashEx");
		DebenuPDFLibrarySetLineJoin = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSetLineJoin");
		DebenuPDFLibrarySetLineShader = (DebenuPDFLibraryFuncType107)AttachFunction("DPLSetLineShader");
		DebenuPDFLibrarySetLineWidth = (DebenuPDFLibraryFuncType27)AttachFunction("DPLSetLineWidth");
		DebenuPDFLibrarySetMarkupAnnotStyle = (DebenuPDFLibraryFuncType67)AttachFunction("DPLSetMarkupAnnotStyle");
		DebenuPDFLibrarySetMeasureDictBoundsCount = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetMeasureDictBoundsCount");
		DebenuPDFLibrarySetMeasureDictBoundsItem = (DebenuPDFLibraryFuncType72)AttachFunction("DPLSetMeasureDictBoundsItem");
		DebenuPDFLibrarySetMeasureDictCoordinateSystem = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetMeasureDictCoordinateSystem");
		DebenuPDFLibrarySetMeasureDictGPTSCount = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetMeasureDictGPTSCount");
		DebenuPDFLibrarySetMeasureDictGPTSItem = (DebenuPDFLibraryFuncType72)AttachFunction("DPLSetMeasureDictGPTSItem");
		DebenuPDFLibrarySetMeasureDictLPTSCount = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetMeasureDictLPTSCount");
		DebenuPDFLibrarySetMeasureDictLPTSItem = (DebenuPDFLibraryFuncType72)AttachFunction("DPLSetMeasureDictLPTSItem");
		DebenuPDFLibrarySetMeasureDictPDU = (DebenuPDFLibraryFuncType84)AttachFunction("DPLSetMeasureDictPDU");
		DebenuPDFLibrarySetMeasurementUnits = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSetMeasurementUnits");
		DebenuPDFLibrarySetNeedAppearances = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSetNeedAppearances");
		DebenuPDFLibrarySetObjectFromString = (DebenuPDFLibraryFuncType63)AttachFunction("DPLSetObjectFromString");
		DebenuPDFLibrarySetOpenActionDestination = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetOpenActionDestination");
		DebenuPDFLibrarySetOpenActionDestinationFull = (DebenuPDFLibraryFuncType81)AttachFunction("DPLSetOpenActionDestinationFull");
		DebenuPDFLibrarySetOpenActionJavaScript = (DebenuPDFLibraryFuncType107)AttachFunction("DPLSetOpenActionJavaScript");
		DebenuPDFLibrarySetOpenActionMenu = (DebenuPDFLibraryFuncType107)AttachFunction("DPLSetOpenActionMenu");
		DebenuPDFLibrarySetOptionalContentConfigLocked = (DebenuPDFLibraryFuncType79)AttachFunction("DPLSetOptionalContentConfigLocked");
		DebenuPDFLibrarySetOptionalContentConfigState = (DebenuPDFLibraryFuncType79)AttachFunction("DPLSetOptionalContentConfigState");
		DebenuPDFLibrarySetOptionalContentGroupName = (DebenuPDFLibraryFuncType99)AttachFunction("DPLSetOptionalContentGroupName");
		DebenuPDFLibrarySetOptionalContentGroupPrintable = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetOptionalContentGroupPrintable");
		DebenuPDFLibrarySetOptionalContentGroupVisible = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetOptionalContentGroupVisible");
		DebenuPDFLibrarySetOrigin = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSetOrigin");
		DebenuPDFLibrarySetOutlineColor = (DebenuPDFLibraryFuncType66)AttachFunction("DPLSetOutlineColor");
		DebenuPDFLibrarySetOutlineDestination = (DebenuPDFLibraryFuncType72)AttachFunction("DPLSetOutlineDestination");
		DebenuPDFLibrarySetOutlineDestinationFull = (DebenuPDFLibraryFuncType85)AttachFunction("DPLSetOutlineDestinationFull");
		DebenuPDFLibrarySetOutlineDestinationZoom = (DebenuPDFLibraryFuncType77)AttachFunction("DPLSetOutlineDestinationZoom");
		DebenuPDFLibrarySetOutlineJavaScript = (DebenuPDFLibraryFuncType99)AttachFunction("DPLSetOutlineJavaScript");
		DebenuPDFLibrarySetOutlineNamedDestination = (DebenuPDFLibraryFuncType99)AttachFunction("DPLSetOutlineNamedDestination");
		DebenuPDFLibrarySetOutlineOpenFile = (DebenuPDFLibraryFuncType99)AttachFunction("DPLSetOutlineOpenFile");
		DebenuPDFLibrarySetOutlineRemoteDestination = (DebenuPDFLibraryFuncType103)AttachFunction("DPLSetOutlineRemoteDestination");
		DebenuPDFLibrarySetOutlineStyle = (DebenuPDFLibraryFuncType79)AttachFunction("DPLSetOutlineStyle");
		DebenuPDFLibrarySetOutlineTitle = (DebenuPDFLibraryFuncType99)AttachFunction("DPLSetOutlineTitle");
		DebenuPDFLibrarySetOutlineWebLink = (DebenuPDFLibraryFuncType99)AttachFunction("DPLSetOutlineWebLink");
		DebenuPDFLibrarySetOverprint = (DebenuPDFLibraryFuncType79)AttachFunction("DPLSetOverprint");
		DebenuPDFLibrarySetPDFAMode = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSetPDFAMode");
		DebenuPDFLibrarySetPNGTransparencyColor = (DebenuPDFLibraryFuncType79)AttachFunction("DPLSetPNGTransparencyColor");
		DebenuPDFLibrarySetPageActionMenu = (DebenuPDFLibraryFuncType107)AttachFunction("DPLSetPageActionMenu");
		DebenuPDFLibrarySetPageBox = (DebenuPDFLibraryFuncType67)AttachFunction("DPLSetPageBox");
		DebenuPDFLibrarySetPageContentFromString = (DebenuPDFLibraryFuncType22)AttachFunction("DPLSetPageContentFromString");
		DebenuPDFLibrarySetPageDimensions = (DebenuPDFLibraryFuncType28)AttachFunction("DPLSetPageDimensions");
		DebenuPDFLibrarySetPageLayout = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSetPageLayout");
		DebenuPDFLibrarySetPageMode = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSetPageMode");
		DebenuPDFLibrarySetPageSize = (DebenuPDFLibraryFuncType107)AttachFunction("DPLSetPageSize");
		DebenuPDFLibrarySetPageThumbnail = (DebenuPDFLibraryFuncType21)AttachFunction("DPLSetPageThumbnail");
		DebenuPDFLibrarySetPageTransparencyGroup = (DebenuPDFLibraryFuncType79)AttachFunction("DPLSetPageTransparencyGroup");
		DebenuPDFLibrarySetPrecision = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSetPrecision");
		DebenuPDFLibrarySetPrinterDevModeFromString = (DebenuPDFLibraryFuncType22)AttachFunction("DPLSetPrinterDevModeFromString");
		DebenuPDFLibrarySetRenderCropType = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSetRenderCropType");
		DebenuPDFLibrarySetRenderDCErasePage = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSetRenderDCErasePage");
		DebenuPDFLibrarySetRenderDCOffset = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetRenderDCOffset");
		DebenuPDFLibrarySetRenderOptions = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetRenderOptions");
		DebenuPDFLibrarySetRenderScale = (DebenuPDFLibraryFuncType27)AttachFunction("DPLSetRenderScale");
		DebenuPDFLibrarySetScale = (DebenuPDFLibraryFuncType27)AttachFunction("DPLSetScale");
		DebenuPDFLibrarySetSignProcessField = (DebenuPDFLibraryFuncType99)AttachFunction("DPLSetSignProcessField");
		DebenuPDFLibrarySetSignProcessFieldBounds = (DebenuPDFLibraryFuncType67)AttachFunction("DPLSetSignProcessFieldBounds");
		DebenuPDFLibrarySetSignProcessFieldImageFromFile = (DebenuPDFLibraryFuncType101)AttachFunction("DPLSetSignProcessFieldImageFromFile");
		DebenuPDFLibrarySetSignProcessFieldPage = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetSignProcessFieldPage");
		DebenuPDFLibrarySetSignProcessInfo = (DebenuPDFLibraryFuncType106)AttachFunction("DPLSetSignProcessInfo");
		DebenuPDFLibrarySetSignProcessKeyset = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetSignProcessKeyset");
		DebenuPDFLibrarySetSignProcessPFXFromFile = (DebenuPDFLibraryFuncType104)AttachFunction("DPLSetSignProcessPFXFromFile");
		DebenuPDFLibrarySetSignProcessPassthrough = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetSignProcessPassthrough");
		DebenuPDFLibrarySetSignProcessSubFilter = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetSignProcessSubFilter");
		DebenuPDFLibrarySetTabOrderMode = (DebenuPDFLibraryFuncType107)AttachFunction("DPLSetTabOrderMode");
		DebenuPDFLibrarySetTableBorderColor = (DebenuPDFLibraryFuncType74)AttachFunction("DPLSetTableBorderColor");
		DebenuPDFLibrarySetTableBorderColorCMYK = (DebenuPDFLibraryFuncType75)AttachFunction("DPLSetTableBorderColorCMYK");
		DebenuPDFLibrarySetTableBorderWidth = (DebenuPDFLibraryFuncType72)AttachFunction("DPLSetTableBorderWidth");
		DebenuPDFLibrarySetTableCellAlignment = (DebenuPDFLibraryFuncType90)AttachFunction("DPLSetTableCellAlignment");
		DebenuPDFLibrarySetTableCellBackgroundColor = (DebenuPDFLibraryFuncType88)AttachFunction("DPLSetTableCellBackgroundColor");
		DebenuPDFLibrarySetTableCellBackgroundColorCMYK = (DebenuPDFLibraryFuncType89)AttachFunction("DPLSetTableCellBackgroundColorCMYK");
		DebenuPDFLibrarySetTableCellBorderColor = (DebenuPDFLibraryFuncType92)AttachFunction("DPLSetTableCellBorderColor");
		DebenuPDFLibrarySetTableCellBorderColorCMYK = (DebenuPDFLibraryFuncType93)AttachFunction("DPLSetTableCellBorderColorCMYK");
		DebenuPDFLibrarySetTableCellBorderWidth = (DebenuPDFLibraryFuncType91)AttachFunction("DPLSetTableCellBorderWidth");
		DebenuPDFLibrarySetTableCellContent = (DebenuPDFLibraryFuncType96)AttachFunction("DPLSetTableCellContent");
		DebenuPDFLibrarySetTableCellPadding = (DebenuPDFLibraryFuncType91)AttachFunction("DPLSetTableCellPadding");
		DebenuPDFLibrarySetTableCellTextColor = (DebenuPDFLibraryFuncType88)AttachFunction("DPLSetTableCellTextColor");
		DebenuPDFLibrarySetTableCellTextColorCMYK = (DebenuPDFLibraryFuncType89)AttachFunction("DPLSetTableCellTextColorCMYK");
		DebenuPDFLibrarySetTableCellTextSize = (DebenuPDFLibraryFuncType87)AttachFunction("DPLSetTableCellTextSize");
		DebenuPDFLibrarySetTableColumnWidth = (DebenuPDFLibraryFuncType80)AttachFunction("DPLSetTableColumnWidth");
		DebenuPDFLibrarySetTableRowHeight = (DebenuPDFLibraryFuncType80)AttachFunction("DPLSetTableRowHeight");
		DebenuPDFLibrarySetTableThinBorders = (DebenuPDFLibraryFuncType74)AttachFunction("DPLSetTableThinBorders");
		DebenuPDFLibrarySetTableThinBordersCMYK = (DebenuPDFLibraryFuncType75)AttachFunction("DPLSetTableThinBordersCMYK");
		DebenuPDFLibrarySetTempFile = (DebenuPDFLibraryFuncType107)AttachFunction("DPLSetTempFile");
		DebenuPDFLibrarySetTempPath = (DebenuPDFLibraryFuncType107)AttachFunction("DPLSetTempPath");
		DebenuPDFLibrarySetTextAlign = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSetTextAlign");
		DebenuPDFLibrarySetTextCharSpacing = (DebenuPDFLibraryFuncType27)AttachFunction("DPLSetTextCharSpacing");
		DebenuPDFLibrarySetTextColor = (DebenuPDFLibraryFuncType29)AttachFunction("DPLSetTextColor");
		DebenuPDFLibrarySetTextColorCMYK = (DebenuPDFLibraryFuncType30)AttachFunction("DPLSetTextColorCMYK");
		DebenuPDFLibrarySetTextColorSep = (DebenuPDFLibraryFuncType108)AttachFunction("DPLSetTextColorSep");
		DebenuPDFLibrarySetTextExtractionArea = (DebenuPDFLibraryFuncType30)AttachFunction("DPLSetTextExtractionArea");
		DebenuPDFLibrarySetTextExtractionOptions = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetTextExtractionOptions");
		DebenuPDFLibrarySetTextExtractionScaling = (DebenuPDFLibraryFuncType65)AttachFunction("DPLSetTextExtractionScaling");
		DebenuPDFLibrarySetTextExtractionWordGap = (DebenuPDFLibraryFuncType27)AttachFunction("DPLSetTextExtractionWordGap");
		DebenuPDFLibrarySetTextHighlight = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSetTextHighlight");
		DebenuPDFLibrarySetTextHighlightColor = (DebenuPDFLibraryFuncType29)AttachFunction("DPLSetTextHighlightColor");
		DebenuPDFLibrarySetTextHighlightColorCMYK = (DebenuPDFLibraryFuncType30)AttachFunction("DPLSetTextHighlightColorCMYK");
		DebenuPDFLibrarySetTextHighlightColorSep = (DebenuPDFLibraryFuncType108)AttachFunction("DPLSetTextHighlightColorSep");
		DebenuPDFLibrarySetTextMode = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSetTextMode");
		DebenuPDFLibrarySetTextRise = (DebenuPDFLibraryFuncType27)AttachFunction("DPLSetTextRise");
		DebenuPDFLibrarySetTextScaling = (DebenuPDFLibraryFuncType27)AttachFunction("DPLSetTextScaling");
		DebenuPDFLibrarySetTextShader = (DebenuPDFLibraryFuncType107)AttachFunction("DPLSetTextShader");
		DebenuPDFLibrarySetTextSize = (DebenuPDFLibraryFuncType27)AttachFunction("DPLSetTextSize");
		DebenuPDFLibrarySetTextSpacing = (DebenuPDFLibraryFuncType27)AttachFunction("DPLSetTextSpacing");
		DebenuPDFLibrarySetTextUnderline = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSetTextUnderline");
		DebenuPDFLibrarySetTextUnderlineColor = (DebenuPDFLibraryFuncType29)AttachFunction("DPLSetTextUnderlineColor");
		DebenuPDFLibrarySetTextUnderlineColorCMYK = (DebenuPDFLibraryFuncType30)AttachFunction("DPLSetTextUnderlineColorCMYK");
		DebenuPDFLibrarySetTextUnderlineColorSep = (DebenuPDFLibraryFuncType108)AttachFunction("DPLSetTextUnderlineColorSep");
		DebenuPDFLibrarySetTextUnderlineCustomDash = (DebenuPDFLibraryFuncType108)AttachFunction("DPLSetTextUnderlineCustomDash");
		DebenuPDFLibrarySetTextUnderlineDash = (DebenuPDFLibraryFuncType28)AttachFunction("DPLSetTextUnderlineDash");
		DebenuPDFLibrarySetTextUnderlineDistance = (DebenuPDFLibraryFuncType27)AttachFunction("DPLSetTextUnderlineDistance");
		DebenuPDFLibrarySetTextUnderlineWidth = (DebenuPDFLibraryFuncType27)AttachFunction("DPLSetTextUnderlineWidth");
		DebenuPDFLibrarySetTextWordSpacing = (DebenuPDFLibraryFuncType27)AttachFunction("DPLSetTextWordSpacing");
		DebenuPDFLibrarySetTransparency = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSetTransparency");
		DebenuPDFLibrarySetViewerPreferences = (DebenuPDFLibraryFuncType71)AttachFunction("DPLSetViewerPreferences");
		DebenuPDFLibrarySetXFAFormFieldAccess = (DebenuPDFLibraryFuncType112)AttachFunction("DPLSetXFAFormFieldAccess");
		DebenuPDFLibrarySetXFAFormFieldBorderColor = (DebenuPDFLibraryFuncType109)AttachFunction("DPLSetXFAFormFieldBorderColor");
		DebenuPDFLibrarySetXFAFormFieldBorderPresence = (DebenuPDFLibraryFuncType112)AttachFunction("DPLSetXFAFormFieldBorderPresence");
		DebenuPDFLibrarySetXFAFormFieldBorderWidth = (DebenuPDFLibraryFuncType108)AttachFunction("DPLSetXFAFormFieldBorderWidth");
		DebenuPDFLibrarySetXFAFormFieldValue = (DebenuPDFLibraryFuncType117)AttachFunction("DPLSetXFAFormFieldValue");
		DebenuPDFLibrarySetXFAFromString = (DebenuPDFLibraryFuncType25)AttachFunction("DPLSetXFAFromString");
		DebenuPDFLibrarySetupCustomPrinter = (DebenuPDFLibraryFuncType113)AttachFunction("DPLSetupCustomPrinter");
		DebenuPDFLibrarySignFile = (DebenuPDFLibraryFuncType126)AttachFunction("DPLSignFile");
		DebenuPDFLibrarySplitPageText = (DebenuPDFLibraryFuncType62)AttachFunction("DPLSplitPageText");
		DebenuPDFLibraryStartPath = (DebenuPDFLibraryFuncType28)AttachFunction("DPLStartPath");
		DebenuPDFLibraryStoreCustomDataFromFile = (DebenuPDFLibraryFuncType119)AttachFunction("DPLStoreCustomDataFromFile");
		DebenuPDFLibraryStoreCustomDataFromString = (DebenuPDFLibraryFuncType24)AttachFunction("DPLStoreCustomDataFromString");
		DebenuPDFLibraryStringResultLength = (DebenuPDFLibraryFuncType21)AttachFunction("DPLStringResultLength");
		DebenuPDFLibraryTestTempPath = (DebenuPDFLibraryFuncType21)AttachFunction("DPLTestTempPath");
		DebenuPDFLibraryTransformFile = (DebenuPDFLibraryFuncType122)AttachFunction("DPLTransformFile");
		DebenuPDFLibraryUnlockKey = (DebenuPDFLibraryFuncType107)AttachFunction("DPLUnlockKey");
		DebenuPDFLibraryUnlocked = (DebenuPDFLibraryFuncType21)AttachFunction("DPLUnlocked");
		DebenuPDFLibraryUpdateAndFlattenFormField = (DebenuPDFLibraryFuncType62)AttachFunction("DPLUpdateAndFlattenFormField");
		DebenuPDFLibraryUpdateAppearanceStream = (DebenuPDFLibraryFuncType62)AttachFunction("DPLUpdateAppearanceStream");
		DebenuPDFLibraryUseKerning = (DebenuPDFLibraryFuncType62)AttachFunction("DPLUseKerning");
		DebenuPDFLibraryUseUnsafeContentStreams = (DebenuPDFLibraryFuncType62)AttachFunction("DPLUseUnsafeContentStreams");
		instanceID = DebenuPDFLibraryCreateLibrary();
	}
	else
	{
		loadError = true;
	}
}

DebenuPDFLibraryDLL0916::~DebenuPDFLibraryDLL0916()
{
	if (instanceID > 0)
	{
		DebenuPDFLibraryReleaseLibrary(instanceID);
	}
	if (dllHandle > 0)
	{
		FreeLibrary(dllHandle);
		dllHandle = 0;
	}
}

char* DebenuPDFLibraryDLL0916::StringParm(const std::string& strParm, int& sb)
{
	char* sp;
	int pl;
	if (strParm.find("\0") == std::string::npos)
	{
		sp = (char*)strParm.c_str();
		sb = 0;
	} else
	{
		sb = 1;
		pl = (int)strParm.length();
		sp = DebenuPDFLibraryCreateBuffer(instanceID, pl);
		DebenuPDFLibraryAddToBuffer(instanceID, sp, (char*)strParm.c_str(), pl);
	}
	return sp;
}

wchar_t* DebenuPDFLibraryDLL0916::WideStringParm(const std::wstring& strParm)
{
	wchar_t* sp;
	sp = (wchar_t*)strParm.c_str();
	return sp;
}

int DebenuPDFLibraryDLL0916::SetProgressCallback(void* ProgressProc, void* UserData)
{
	return DebenuPDFLibrarySetProgressCallback(instanceID, ProgressProc, UserData);
}

int DebenuPDFLibraryDLL0916::AddArcToPath(double CenterX, double CenterY, double TotalAngle)
{
	return DebenuPDFLibraryAddArcToPath(instanceID, CenterX, CenterY, 
		TotalAngle);
}

int DebenuPDFLibraryDLL0916::AddBoxToPath(double Left, double Top, double Width, double Height)
{
	return DebenuPDFLibraryAddBoxToPath(instanceID, Left, Top, Width, Height);
}

int DebenuPDFLibraryDLL0916::AddCJKFont(int CJKFontID)
{
	return DebenuPDFLibraryAddCJKFont(instanceID, CJKFontID);
}

int DebenuPDFLibraryDLL0916::AddCurveToPath(double CtAX, double CtAY, double CtBX, double CtBY, double EndX, double EndY)
{
	return DebenuPDFLibraryAddCurveToPath(instanceID, CtAX, CtAY, CtBX, CtBY, 
		EndX, EndY);
}

int DebenuPDFLibraryDLL0916::AddEmbeddedFile(const std::wstring& FileName, const std::wstring& MIMEType)
{
	return DebenuPDFLibraryAddEmbeddedFile(instanceID, 
		WideStringParm(FileName), WideStringParm(MIMEType));
}

int DebenuPDFLibraryDLL0916::AddFileAttachment(const std::wstring& Title, int EmbeddedFileID)
{
	return DebenuPDFLibraryAddFileAttachment(instanceID, 
		WideStringParm(Title), EmbeddedFileID);
}

int DebenuPDFLibraryDLL0916::AddFormFieldChoiceSub(int Index, const std::wstring& SubName, const std::wstring& DisplayName)
{
	return DebenuPDFLibraryAddFormFieldChoiceSub(instanceID, Index, 
		WideStringParm(SubName), WideStringParm(DisplayName));
}

int DebenuPDFLibraryDLL0916::AddFormFieldSub(int Index, const std::wstring& SubName)
{
	return DebenuPDFLibraryAddFormFieldSub(instanceID, Index, 
		WideStringParm(SubName));
}

int DebenuPDFLibraryDLL0916::AddFormFont(int FontID)
{
	return DebenuPDFLibraryAddFormFont(instanceID, FontID);
}

int DebenuPDFLibraryDLL0916::AddGlobalJavaScript(const std::wstring& PackageName, const std::wstring& JavaScript)
{
	return DebenuPDFLibraryAddGlobalJavaScript(instanceID, 
		WideStringParm(PackageName), WideStringParm(JavaScript));
}

int DebenuPDFLibraryDLL0916::AddImageFromFile(const std::wstring& FileName, int Options)
{
	return DebenuPDFLibraryAddImageFromFile(instanceID, 
		WideStringParm(FileName), Options);
}

int DebenuPDFLibraryDLL0916::AddImageFromFileOffset(const std::wstring& FileName, int Offset, int DataLength, int Options)
{
	return DebenuPDFLibraryAddImageFromFileOffset(instanceID, 
		WideStringParm(FileName), Offset, DataLength, Options);
}

int DebenuPDFLibraryDLL0916::AddImageFromString(const std::string& Source, int Options)
{
	int sb1;
	char* sp1 = StringParm(Source, sb1);
	int result;
	result = DebenuPDFLibraryAddImageFromString(instanceID, sp1, Options);
	if (sb1 == 1) DebenuPDFLibraryReleaseBuffer(instanceID, sp1);
	return result;
}

int DebenuPDFLibraryDLL0916::AddLGIDictToPage(const std::wstring& DictContent)
{
	return DebenuPDFLibraryAddLGIDictToPage(instanceID, 
		WideStringParm(DictContent));
}

int DebenuPDFLibraryDLL0916::AddLineToPath(double EndX, double EndY)
{
	return DebenuPDFLibraryAddLineToPath(instanceID, EndX, EndY);
}

int DebenuPDFLibraryDLL0916::AddLinkToDestination(double Left, double Top, double Width, double Height, int DestID, int Options)
{
	return DebenuPDFLibraryAddLinkToDestination(instanceID, Left, Top, Width, 
		Height, DestID, Options);
}

int DebenuPDFLibraryDLL0916::AddLinkToEmbeddedFile(double Left, double Top, double Width, double Height, int EmbeddedFileID, const std::wstring& Title, const std::wstring& Contents, int IconType, int Transpareny)
{
	return DebenuPDFLibraryAddLinkToEmbeddedFile(instanceID, Left, Top, 
		Width, Height, EmbeddedFileID, WideStringParm(Title), 
		WideStringParm(Contents), IconType, Transpareny);
}

int DebenuPDFLibraryDLL0916::AddLinkToFile(double Left, double Top, double Width, double Height, const std::wstring& FileName, int Page, double Position, int NewWindow, int Options)
{
	return DebenuPDFLibraryAddLinkToFile(instanceID, Left, Top, Width, 
		Height, WideStringParm(FileName), Page, Position, NewWindow, Options);
}

int DebenuPDFLibraryDLL0916::AddLinkToFileEx(double Left, double Top, double Width, double Height, const std::wstring& FileName, int DestPage, int NewWindow, int Options, int Zoom, int DestType, double DestLeft, double DestTop, double DestRight, double DestBottom)
{
	return DebenuPDFLibraryAddLinkToFileEx(instanceID, Left, Top, Width, 
		Height, WideStringParm(FileName), DestPage, NewWindow, Options, Zoom, 
		DestType, DestLeft, DestTop, DestRight, DestBottom);
}

int DebenuPDFLibraryDLL0916::AddLinkToJavaScript(double Left, double Top, double Width, double Height, const std::wstring& JavaScript, int Options)
{
	return DebenuPDFLibraryAddLinkToJavaScript(instanceID, Left, Top, Width, 
		Height, WideStringParm(JavaScript), Options);
}

int DebenuPDFLibraryDLL0916::AddLinkToLocalFile(double Left, double Top, double Width, double Height, const std::wstring& FileName, int Options)
{
	return DebenuPDFLibraryAddLinkToLocalFile(instanceID, Left, Top, Width, 
		Height, WideStringParm(FileName), Options);
}

int DebenuPDFLibraryDLL0916::AddLinkToPage(double Left, double Top, double Width, double Height, int Page, double Position, int Options)
{
	return DebenuPDFLibraryAddLinkToPage(instanceID, Left, Top, Width, 
		Height, Page, Position, Options);
}

int DebenuPDFLibraryDLL0916::AddLinkToWeb(double Left, double Top, double Width, double Height, const std::wstring& Link, int Options)
{
	return DebenuPDFLibraryAddLinkToWeb(instanceID, Left, Top, Width, Height, 
		WideStringParm(Link), Options);
}

int DebenuPDFLibraryDLL0916::AddNoteAnnotation(double Left, double Top, int AnnotType, double PopupLeft, double PopupTop, double PopupWidth, double PopupHeight, const std::wstring& Title, const std::wstring& Contents, double Red, double Green, double Blue, int Open)
{
	return DebenuPDFLibraryAddNoteAnnotation(instanceID, Left, Top, 
		AnnotType, PopupLeft, PopupTop, PopupWidth, PopupHeight, 
		WideStringParm(Title), WideStringParm(Contents), Red, Green, Blue, Open);
}

int DebenuPDFLibraryDLL0916::AddOpenTypeFontFromFile(const std::wstring& FileName, int Options)
{
	return DebenuPDFLibraryAddOpenTypeFontFromFile(instanceID, 
		WideStringParm(FileName), Options);
}

int DebenuPDFLibraryDLL0916::AddPageLabels(int Start, int Style, int Offset, const std::wstring& Prefix)
{
	return DebenuPDFLibraryAddPageLabels(instanceID, Start, Style, Offset, 
		WideStringParm(Prefix));
}

int DebenuPDFLibraryDLL0916::AddSVGAnnotationFromFile(double Left, double Top, double Width, double Height, const std::wstring& FileName, int Options)
{
	return DebenuPDFLibraryAddSVGAnnotationFromFile(instanceID, Left, Top, 
		Width, Height, WideStringParm(FileName), Options);
}

int DebenuPDFLibraryDLL0916::AddSWFAnnotationFromFile(double Left, double Top, double Width, double Height, const std::wstring& FileName, const std::wstring& Title, int Options)
{
	return DebenuPDFLibraryAddSWFAnnotationFromFile(instanceID, Left, Top, 
		Width, Height, WideStringParm(FileName), WideStringParm(Title), Options);
}

int DebenuPDFLibraryDLL0916::AddSeparationColor(const std::wstring& ColorName, double C, double M, double Y, double K, int Options)
{
	return DebenuPDFLibraryAddSeparationColor(instanceID, 
		WideStringParm(ColorName), C, M, Y, K, Options);
}

int DebenuPDFLibraryDLL0916::AddStampAnnotation(double Left, double Top, double Width, double Height, int StampType, const std::wstring& Title, const std::wstring& Contents, double Red, double Green, double Blue, int Options)
{
	return DebenuPDFLibraryAddStampAnnotation(instanceID, Left, Top, Width, 
		Height, StampType, WideStringParm(Title), WideStringParm(Contents), Red, 
		Green, Blue, Options);
}

int DebenuPDFLibraryDLL0916::AddStandardFont(int StandardFontID)
{
	return DebenuPDFLibraryAddStandardFont(instanceID, StandardFontID);
}

int DebenuPDFLibraryDLL0916::AddSubsettedFont(const std::wstring& FontName, int CharsetIndex, const std::wstring& SubsetChars)
{
	return DebenuPDFLibraryAddSubsettedFont(instanceID, 
		WideStringParm(FontName), CharsetIndex, WideStringParm(SubsetChars));
}

int DebenuPDFLibraryDLL0916::AddTextMarkupAnnotation(int MarkupType, double Left, double Top, double Width, double Height)
{
	return DebenuPDFLibraryAddTextMarkupAnnotation(instanceID, MarkupType, 
		Left, Top, Width, Height);
}

int DebenuPDFLibraryDLL0916::AddToFileList(const std::wstring& ListName, const std::wstring& FileName)
{
	return DebenuPDFLibraryAddToFileList(instanceID, 
		WideStringParm(ListName), WideStringParm(FileName));
}

int DebenuPDFLibraryDLL0916::AddTrueTypeFont(const std::wstring& FontName, int Embed)
{
	return DebenuPDFLibraryAddTrueTypeFont(instanceID, 
		WideStringParm(FontName), Embed);
}

int DebenuPDFLibraryDLL0916::AddTrueTypeFontFromFile(const std::wstring& FileName)
{
	return DebenuPDFLibraryAddTrueTypeFontFromFile(instanceID, 
		WideStringParm(FileName));
}

int DebenuPDFLibraryDLL0916::AddTrueTypeSubsettedFont(const std::wstring& FontName, const std::wstring& SubsetChars, int Options)
{
	return DebenuPDFLibraryAddTrueTypeSubsettedFont(instanceID, 
		WideStringParm(FontName), WideStringParm(SubsetChars), Options);
}

int DebenuPDFLibraryDLL0916::AddType1Font(const std::wstring& FileName)
{
	return DebenuPDFLibraryAddType1Font(instanceID, WideStringParm(FileName));
}

int DebenuPDFLibraryDLL0916::AddU3DAnnotationFromFile(double Left, double Top, double Width, double Height, const std::wstring& FileName, int Options)
{
	return DebenuPDFLibraryAddU3DAnnotationFromFile(instanceID, Left, Top, 
		Width, Height, WideStringParm(FileName), Options);
}

int DebenuPDFLibraryDLL0916::AnalyseFile(const std::wstring& InputFileName, const std::wstring& Password)
{
	return DebenuPDFLibraryAnalyseFile(instanceID, 
		WideStringParm(InputFileName), WideStringParm(Password));
}

int DebenuPDFLibraryDLL0916::AnnotationCount()
{
	return DebenuPDFLibraryAnnotationCount(instanceID);
}

int DebenuPDFLibraryDLL0916::AnsiStringResultLength()
{
	return DebenuPDFLibraryAnsiStringResultLength(instanceID);
}

int DebenuPDFLibraryDLL0916::AppendSpace(double RelativeSpace)
{
	return DebenuPDFLibraryAppendSpace(instanceID, RelativeSpace);
}

int DebenuPDFLibraryDLL0916::AppendTableColumns(int TableID, int NewColumnCount)
{
	return DebenuPDFLibraryAppendTableColumns(instanceID, TableID, 
		NewColumnCount);
}

int DebenuPDFLibraryDLL0916::AppendTableRows(int TableID, int NewRowCount)
{
	return DebenuPDFLibraryAppendTableRows(instanceID, TableID, NewRowCount);
}

int DebenuPDFLibraryDLL0916::AppendText(const std::wstring& Text)
{
	return DebenuPDFLibraryAppendText(instanceID, WideStringParm(Text));
}

int DebenuPDFLibraryDLL0916::ApplyStyle(const std::wstring& StyleName)
{
	return DebenuPDFLibraryApplyStyle(instanceID, WideStringParm(StyleName));
}

int DebenuPDFLibraryDLL0916::AttachAnnotToForm(int Index)
{
	return DebenuPDFLibraryAttachAnnotToForm(instanceID, Index);
}

int DebenuPDFLibraryDLL0916::BalanceContentStream()
{
	return DebenuPDFLibraryBalanceContentStream(instanceID);
}

int DebenuPDFLibraryDLL0916::BalancePageTree(int Options)
{
	return DebenuPDFLibraryBalancePageTree(instanceID, Options);
}

int DebenuPDFLibraryDLL0916::BeginPageUpdate()
{
	return DebenuPDFLibraryBeginPageUpdate(instanceID);
}

int DebenuPDFLibraryDLL0916::CapturePage(int Page)
{
	return DebenuPDFLibraryCapturePage(instanceID, Page);
}

int DebenuPDFLibraryDLL0916::CapturePageEx(int Page, int Options)
{
	return DebenuPDFLibraryCapturePageEx(instanceID, Page, Options);
}

int DebenuPDFLibraryDLL0916::CharWidth(int CharCode)
{
	return DebenuPDFLibraryCharWidth(instanceID, CharCode);
}

int DebenuPDFLibraryDLL0916::CheckFileCompliance(const std::wstring& InputFileName, const std::wstring& Password, int ComplianceTest, int Options)
{
	return DebenuPDFLibraryCheckFileCompliance(instanceID, 
		WideStringParm(InputFileName), WideStringParm(Password), ComplianceTest, 
		Options);
}

int DebenuPDFLibraryDLL0916::CheckObjects()
{
	return DebenuPDFLibraryCheckObjects(instanceID);
}

int DebenuPDFLibraryDLL0916::CheckPageAnnots()
{
	return DebenuPDFLibraryCheckPageAnnots(instanceID);
}

int DebenuPDFLibraryDLL0916::ClearFileList(const std::wstring& ListName)
{
	return DebenuPDFLibraryClearFileList(instanceID, 
		WideStringParm(ListName));
}

int DebenuPDFLibraryDLL0916::ClearImage(int ImageID)
{
	return DebenuPDFLibraryClearImage(instanceID, ImageID);
}

int DebenuPDFLibraryDLL0916::ClearPageLabels()
{
	return DebenuPDFLibraryClearPageLabels(instanceID);
}

int DebenuPDFLibraryDLL0916::ClearTextFormatting()
{
	return DebenuPDFLibraryClearTextFormatting(instanceID);
}

int DebenuPDFLibraryDLL0916::CloneOutlineAction(int OutlineID)
{
	return DebenuPDFLibraryCloneOutlineAction(instanceID, OutlineID);
}

int DebenuPDFLibraryDLL0916::ClonePages(int StartPage, int EndPage, int RepeatCount)
{
	return DebenuPDFLibraryClonePages(instanceID, StartPage, EndPage, 
		RepeatCount);
}

int DebenuPDFLibraryDLL0916::CloseOutline(int OutlineID)
{
	return DebenuPDFLibraryCloseOutline(instanceID, OutlineID);
}

int DebenuPDFLibraryDLL0916::ClosePath()
{
	return DebenuPDFLibraryClosePath(instanceID);
}

int DebenuPDFLibraryDLL0916::CombineContentStreams()
{
	return DebenuPDFLibraryCombineContentStreams(instanceID);
}

int DebenuPDFLibraryDLL0916::CompareOutlines(int FirstOutlineID, int SecondOutlineID)
{
	return DebenuPDFLibraryCompareOutlines(instanceID, FirstOutlineID, 
		SecondOutlineID);
}

int DebenuPDFLibraryDLL0916::CompressContent()
{
	return DebenuPDFLibraryCompressContent(instanceID);
}

int DebenuPDFLibraryDLL0916::CompressFonts(int Compress)
{
	return DebenuPDFLibraryCompressFonts(instanceID, Compress);
}

int DebenuPDFLibraryDLL0916::CompressImages(int Compress)
{
	return DebenuPDFLibraryCompressImages(instanceID, Compress);
}

int DebenuPDFLibraryDLL0916::CompressPage()
{
	return DebenuPDFLibraryCompressPage(instanceID);
}

int DebenuPDFLibraryDLL0916::ContentStreamCount()
{
	return DebenuPDFLibraryContentStreamCount(instanceID);
}

int DebenuPDFLibraryDLL0916::ContentStreamSafe()
{
	return DebenuPDFLibraryContentStreamSafe(instanceID);
}

int DebenuPDFLibraryDLL0916::CopyPageRanges(int DocumentID, const std::wstring& RangeList)
{
	return DebenuPDFLibraryCopyPageRanges(instanceID, DocumentID, 
		WideStringParm(RangeList));
}

int DebenuPDFLibraryDLL0916::CopyPageRangesEx(int DocumentID, const std::wstring& RangeList, int Options)
{
	return DebenuPDFLibraryCopyPageRangesEx(instanceID, DocumentID, 
		WideStringParm(RangeList), Options);
}

int DebenuPDFLibraryDLL0916::CreateNewObject()
{
	return DebenuPDFLibraryCreateNewObject(instanceID);
}

int DebenuPDFLibraryDLL0916::CreateTable(int RowCount, int ColumnCount)
{
	return DebenuPDFLibraryCreateTable(instanceID, RowCount, ColumnCount);
}

int DebenuPDFLibraryDLL0916::DAAppendFile(int FileHandle)
{
	return DebenuPDFLibraryDAAppendFile(instanceID, FileHandle);
}

int DebenuPDFLibraryDLL0916::DACapturePage(int FileHandle, int PageRef)
{
	return DebenuPDFLibraryDACapturePage(instanceID, FileHandle, PageRef);
}

int DebenuPDFLibraryDLL0916::DACapturePageEx(int FileHandle, int PageRef, int Options)
{
	return DebenuPDFLibraryDACapturePageEx(instanceID, FileHandle, PageRef, 
		Options);
}

int DebenuPDFLibraryDLL0916::DACloseFile(int FileHandle)
{
	return DebenuPDFLibraryDACloseFile(instanceID, FileHandle);
}

int DebenuPDFLibraryDLL0916::DADrawCapturedPage(int FileHandle, int DACaptureID, int DestPageRef, double PntLeft, double PntBottom, double PntWidth, double PntHeight)
{
	return DebenuPDFLibraryDADrawCapturedPage(instanceID, FileHandle, 
		DACaptureID, DestPageRef, PntLeft, PntBottom, PntWidth, PntHeight);
}

int DebenuPDFLibraryDLL0916::DADrawRotatedCapturedPage(int FileHandle, int DACaptureID, int DestPageRef, double PntLeft, double PntBottom, double PntWidth, double PntHeight, double Angle)
{
	return DebenuPDFLibraryDADrawRotatedCapturedPage(instanceID, FileHandle, 
		DACaptureID, DestPageRef, PntLeft, PntBottom, PntWidth, PntHeight, 
		Angle);
}

int DebenuPDFLibraryDLL0916::DAEmbedFileStreams(int FileHandle, const std::wstring& RootPath)
{
	return DebenuPDFLibraryDAEmbedFileStreams(instanceID, FileHandle, 
		WideStringParm(RootPath));
}

std::wstring DebenuPDFLibraryDLL0916::DAExtractPageText(int FileHandle, int PageRef, int Options)
{
	wchar_t* result;
	result = DebenuPDFLibraryDAExtractPageText(instanceID, FileHandle, 
		PageRef, Options);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::DAExtractPageTextBlocks(int FileHandle, int PageRef, int ExtractOptions)
{
	return DebenuPDFLibraryDAExtractPageTextBlocks(instanceID, FileHandle, 
		PageRef, ExtractOptions);
}

int DebenuPDFLibraryDLL0916::DAFindPage(int FileHandle, int Page)
{
	return DebenuPDFLibraryDAFindPage(instanceID, FileHandle, Page);
}

int DebenuPDFLibraryDLL0916::DAGetAnnotationCount(int FileHandle, int PageRef)
{
	return DebenuPDFLibraryDAGetAnnotationCount(instanceID, FileHandle, 
		PageRef);
}

int DebenuPDFLibraryDLL0916::DAGetFormFieldCount(int FileHandle)
{
	return DebenuPDFLibraryDAGetFormFieldCount(instanceID, FileHandle);
}

std::wstring DebenuPDFLibraryDLL0916::DAGetFormFieldTitle(int FileHandle, int FieldIndex)
{
	wchar_t* result;
	result = DebenuPDFLibraryDAGetFormFieldTitle(instanceID, FileHandle, 
		FieldIndex);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::DAGetFormFieldValue(int FileHandle, int FieldIndex)
{
	wchar_t* result;
	result = DebenuPDFLibraryDAGetFormFieldValue(instanceID, FileHandle, 
		FieldIndex);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::string DebenuPDFLibraryDLL0916::DAGetImageDataToString(int FileHandle, int ImageListID, int ImageIndex)
{
	char* result;
	result = DebenuPDFLibraryDAGetImageDataToString(instanceID, FileHandle, 
		ImageListID, ImageIndex);
	std::string resultStr(result, DebenuPDFLibraryAnsiStringResultLength(instanceID));
	return resultStr;
}

double DebenuPDFLibraryDLL0916::DAGetImageDblProperty(int FileHandle, int ImageListID, int ImageIndex, int PropertyID)
{
	return DebenuPDFLibraryDAGetImageDblProperty(instanceID, FileHandle, 
		ImageListID, ImageIndex, PropertyID);
}

int DebenuPDFLibraryDLL0916::DAGetImageIntProperty(int FileHandle, int ImageListID, int ImageIndex, int PropertyID)
{
	return DebenuPDFLibraryDAGetImageIntProperty(instanceID, FileHandle, 
		ImageListID, ImageIndex, PropertyID);
}

int DebenuPDFLibraryDLL0916::DAGetImageListCount(int FileHandle, int ImageListID)
{
	return DebenuPDFLibraryDAGetImageListCount(instanceID, FileHandle, 
		ImageListID);
}

std::wstring DebenuPDFLibraryDLL0916::DAGetInformation(int FileHandle, const std::wstring& Key)
{
	wchar_t* result;
	result = DebenuPDFLibraryDAGetInformation(instanceID, FileHandle, 
		WideStringParm(Key));
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::DAGetObjectCount(int FileHandle)
{
	return DebenuPDFLibraryDAGetObjectCount(instanceID, FileHandle);
}

std::string DebenuPDFLibraryDLL0916::DAGetObjectToString(int FileHandle, int ObjectNumber)
{
	char* result;
	result = DebenuPDFLibraryDAGetObjectToString(instanceID, FileHandle, 
		ObjectNumber);
	std::string resultStr(result, DebenuPDFLibraryAnsiStringResultLength(instanceID));
	return resultStr;
}

double DebenuPDFLibraryDLL0916::DAGetPageBox(int FileHandle, int PageRef, int BoxIndex, int Dimension)
{
	return DebenuPDFLibraryDAGetPageBox(instanceID, FileHandle, PageRef, 
		BoxIndex, Dimension);
}

std::string DebenuPDFLibraryDLL0916::DAGetPageContentToString(int FileHandle, int PageRef)
{
	char* result;
	result = DebenuPDFLibraryDAGetPageContentToString(instanceID, FileHandle, 
		PageRef);
	std::string resultStr(result, DebenuPDFLibraryAnsiStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::DAGetPageCount(int FileHandle)
{
	return DebenuPDFLibraryDAGetPageCount(instanceID, FileHandle);
}

double DebenuPDFLibraryDLL0916::DAGetPageHeight(int FileHandle, int PageRef)
{
	return DebenuPDFLibraryDAGetPageHeight(instanceID, FileHandle, PageRef);
}

int DebenuPDFLibraryDLL0916::DAGetPageImageList(int FileHandle, int PageRef)
{
	return DebenuPDFLibraryDAGetPageImageList(instanceID, FileHandle, 
		PageRef);
}

double DebenuPDFLibraryDLL0916::DAGetPageWidth(int FileHandle, int PageRef)
{
	return DebenuPDFLibraryDAGetPageWidth(instanceID, FileHandle, PageRef);
}

double DebenuPDFLibraryDLL0916::DAGetTextBlockBound(int TextBlockListID, int Index, int BoundIndex)
{
	return DebenuPDFLibraryDAGetTextBlockBound(instanceID, TextBlockListID, 
		Index, BoundIndex);
}

double DebenuPDFLibraryDLL0916::DAGetTextBlockCharWidth(int TextBlockListID, int Index, int CharIndex)
{
	return DebenuPDFLibraryDAGetTextBlockCharWidth(instanceID, 
		TextBlockListID, Index, CharIndex);
}

double DebenuPDFLibraryDLL0916::DAGetTextBlockColor(int TextBlockListID, int Index, int ColorComponent)
{
	return DebenuPDFLibraryDAGetTextBlockColor(instanceID, TextBlockListID, 
		Index, ColorComponent);
}

int DebenuPDFLibraryDLL0916::DAGetTextBlockColorType(int TextBlockListID, int Index)
{
	return DebenuPDFLibraryDAGetTextBlockColorType(instanceID, 
		TextBlockListID, Index);
}

int DebenuPDFLibraryDLL0916::DAGetTextBlockCount(int TextBlockListID)
{
	return DebenuPDFLibraryDAGetTextBlockCount(instanceID, TextBlockListID);
}

std::wstring DebenuPDFLibraryDLL0916::DAGetTextBlockFontName(int TextBlockListID, int Index)
{
	wchar_t* result;
	result = DebenuPDFLibraryDAGetTextBlockFontName(instanceID, 
		TextBlockListID, Index);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

double DebenuPDFLibraryDLL0916::DAGetTextBlockFontSize(int TextBlockListID, int Index)
{
	return DebenuPDFLibraryDAGetTextBlockFontSize(instanceID, 
		TextBlockListID, Index);
}

std::wstring DebenuPDFLibraryDLL0916::DAGetTextBlockText(int TextBlockListID, int Index)
{
	wchar_t* result;
	result = DebenuPDFLibraryDAGetTextBlockText(instanceID, TextBlockListID, 
		Index);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::DAHasPageBox(int FileHandle, int PageRef, int BoxIndex)
{
	return DebenuPDFLibraryDAHasPageBox(instanceID, FileHandle, PageRef, 
		BoxIndex);
}

int DebenuPDFLibraryDLL0916::DAHidePage(int FileHandle, int PageRef)
{
	return DebenuPDFLibraryDAHidePage(instanceID, FileHandle, PageRef);
}

int DebenuPDFLibraryDLL0916::DAMovePage(int FileHandle, int PageRef, int TargetPageRef, int Options)
{
	return DebenuPDFLibraryDAMovePage(instanceID, FileHandle, PageRef, 
		TargetPageRef, Options);
}

int DebenuPDFLibraryDLL0916::DANewPage(int FileHandle)
{
	return DebenuPDFLibraryDANewPage(instanceID, FileHandle);
}

int DebenuPDFLibraryDLL0916::DANewPages(int FileHandle, int PageCount)
{
	return DebenuPDFLibraryDANewPages(instanceID, FileHandle, PageCount);
}

int DebenuPDFLibraryDLL0916::DAOpenFile(const std::wstring& InputFileName, const std::wstring& Password)
{
	return DebenuPDFLibraryDAOpenFile(instanceID, 
		WideStringParm(InputFileName), WideStringParm(Password));
}

int DebenuPDFLibraryDLL0916::DAOpenFileReadOnly(const std::wstring& InputFileName, const std::wstring& Password)
{
	return DebenuPDFLibraryDAOpenFileReadOnly(instanceID, 
		WideStringParm(InputFileName), WideStringParm(Password));
}

int DebenuPDFLibraryDLL0916::DAPageRotation(int FileHandle, int PageRef)
{
	return DebenuPDFLibraryDAPageRotation(instanceID, FileHandle, PageRef);
}

int DebenuPDFLibraryDLL0916::DAReleaseImageList(int FileHandle, int ImageListID)
{
	return DebenuPDFLibraryDAReleaseImageList(instanceID, FileHandle, 
		ImageListID);
}

int DebenuPDFLibraryDLL0916::DAReleaseTextBlocks(int TextBlockListID)
{
	return DebenuPDFLibraryDAReleaseTextBlocks(instanceID, TextBlockListID);
}

int DebenuPDFLibraryDLL0916::DARemoveUsageRights(int FileHandle)
{
	return DebenuPDFLibraryDARemoveUsageRights(instanceID, FileHandle);
}

int DebenuPDFLibraryDLL0916::DARenderPageToDC(int FileHandle, int PageRef, int DPI, HDC DC)
{
	return DebenuPDFLibraryDARenderPageToDC(instanceID, FileHandle, PageRef, 
		DPI, DC);
}

int DebenuPDFLibraryDLL0916::DARenderPageToFile(int FileHandle, int PageRef, int Options, int DPI, const std::wstring& FileName)
{
	return DebenuPDFLibraryDARenderPageToFile(instanceID, FileHandle, 
		PageRef, Options, DPI, WideStringParm(FileName));
}

std::string DebenuPDFLibraryDLL0916::DARenderPageToString(int FileHandle, int PageRef, int Options, int DPI)
{
	char* result;
	result = DebenuPDFLibraryDARenderPageToString(instanceID, FileHandle, 
		PageRef, Options, DPI);
	std::string resultStr(result, DebenuPDFLibraryAnsiStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::DARotatePage(int FileHandle, int PageRef, int Angle, int Options)
{
	return DebenuPDFLibraryDARotatePage(instanceID, FileHandle, PageRef, 
		Angle, Options);
}

int DebenuPDFLibraryDLL0916::DASaveAsFile(int FileHandle, const std::wstring& OutputFileName)
{
	return DebenuPDFLibraryDASaveAsFile(instanceID, FileHandle, 
		WideStringParm(OutputFileName));
}

int DebenuPDFLibraryDLL0916::DASaveImageDataToFile(int FileHandle, int ImageListID, int ImageIndex, const std::wstring& ImageFileName)
{
	return DebenuPDFLibraryDASaveImageDataToFile(instanceID, FileHandle, 
		ImageListID, ImageIndex, WideStringParm(ImageFileName));
}

int DebenuPDFLibraryDLL0916::DASetInformation(int FileHandle, const std::wstring& Key, const std::wstring& NewValue)
{
	return DebenuPDFLibraryDASetInformation(instanceID, FileHandle, 
		WideStringParm(Key), WideStringParm(NewValue));
}

int DebenuPDFLibraryDLL0916::DASetPageBox(int FileHandle, int PageRef, int BoxIndex, double X1, double Y1, double X2, double Y2)
{
	return DebenuPDFLibraryDASetPageBox(instanceID, FileHandle, PageRef, 
		BoxIndex, X1, Y1, X2, Y2);
}

int DebenuPDFLibraryDLL0916::DASetPageSize(int FileHandle, int PageRef, double PntWidth, double PntHeight)
{
	return DebenuPDFLibraryDASetPageSize(instanceID, FileHandle, PageRef, 
		PntWidth, PntHeight);
}

int DebenuPDFLibraryDLL0916::DASetTextExtractionArea(double Left, double Top, double Width, double Height)
{
	return DebenuPDFLibraryDASetTextExtractionArea(instanceID, Left, Top, 
		Width, Height);
}

int DebenuPDFLibraryDLL0916::DASetTextExtractionOptions(int OptionID, int NewValue)
{
	return DebenuPDFLibraryDASetTextExtractionOptions(instanceID, OptionID, 
		NewValue);
}

int DebenuPDFLibraryDLL0916::DASetTextExtractionScaling(int Options, double Horizontal, double Vertical)
{
	return DebenuPDFLibraryDASetTextExtractionScaling(instanceID, Options, 
		Horizontal, Vertical);
}

int DebenuPDFLibraryDLL0916::DASetTextExtractionWordGap(double NewWordGap)
{
	return DebenuPDFLibraryDASetTextExtractionWordGap(instanceID, NewWordGap);
}

int DebenuPDFLibraryDLL0916::DAShiftedHeader(int FileHandle)
{
	return DebenuPDFLibraryDAShiftedHeader(instanceID, FileHandle);
}

int DebenuPDFLibraryDLL0916::Decrypt()
{
	return DebenuPDFLibraryDecrypt(instanceID);
}

int DebenuPDFLibraryDLL0916::DecryptFile(const std::wstring& InputFileName, const std::wstring& OutputFileName, const std::wstring& Password)
{
	return DebenuPDFLibraryDecryptFile(instanceID, 
		WideStringParm(InputFileName), WideStringParm(OutputFileName), 
		WideStringParm(Password));
}

int DebenuPDFLibraryDLL0916::DeleteAnalysis(int AnalysisID)
{
	return DebenuPDFLibraryDeleteAnalysis(instanceID, AnalysisID);
}

int DebenuPDFLibraryDLL0916::DeleteAnnotation(int Index)
{
	return DebenuPDFLibraryDeleteAnnotation(instanceID, Index);
}

int DebenuPDFLibraryDLL0916::DeleteContentStream()
{
	return DebenuPDFLibraryDeleteContentStream(instanceID);
}

int DebenuPDFLibraryDLL0916::DeleteFormField(int Index)
{
	return DebenuPDFLibraryDeleteFormField(instanceID, Index);
}

int DebenuPDFLibraryDLL0916::DeleteOptionalContentGroup(int OptionalContentGroupID)
{
	return DebenuPDFLibraryDeleteOptionalContentGroup(instanceID, 
		OptionalContentGroupID);
}

int DebenuPDFLibraryDLL0916::DeletePageLGIDict(int DictIndex)
{
	return DebenuPDFLibraryDeletePageLGIDict(instanceID, DictIndex);
}

int DebenuPDFLibraryDLL0916::DeletePages(int StartPage, int PageCount)
{
	return DebenuPDFLibraryDeletePages(instanceID, StartPage, PageCount);
}

int DebenuPDFLibraryDLL0916::DocJavaScriptAction(const std::wstring& ActionType, const std::wstring& JavaScript)
{
	return DebenuPDFLibraryDocJavaScriptAction(instanceID, 
		WideStringParm(ActionType), WideStringParm(JavaScript));
}

int DebenuPDFLibraryDLL0916::DocumentCount()
{
	return DebenuPDFLibraryDocumentCount(instanceID);
}

int DebenuPDFLibraryDLL0916::DrawArc(double XPos, double YPos, double Radius, double StartAngle, double EndAngle, int Pie, int DrawOptions)
{
	return DebenuPDFLibraryDrawArc(instanceID, XPos, YPos, Radius, 
		StartAngle, EndAngle, Pie, DrawOptions);
}

int DebenuPDFLibraryDLL0916::DrawBarcode(double Left, double Top, double Width, double Height, const std::wstring& Text, int Barcode, int Options)
{
	return DebenuPDFLibraryDrawBarcode(instanceID, Left, Top, Width, Height, 
		WideStringParm(Text), Barcode, Options);
}

int DebenuPDFLibraryDLL0916::DrawBox(double Left, double Top, double Width, double Height, int DrawOptions)
{
	return DebenuPDFLibraryDrawBox(instanceID, Left, Top, Width, Height, 
		DrawOptions);
}

int DebenuPDFLibraryDLL0916::DrawCapturedPage(int CaptureID, double Left, double Top, double Width, double Height)
{
	return DebenuPDFLibraryDrawCapturedPage(instanceID, CaptureID, Left, Top, 
		Width, Height);
}

int DebenuPDFLibraryDLL0916::DrawCapturedPageMatrix(int CaptureID, double M11, double M12, double M21, double M22, double MDX, double MDY)
{
	return DebenuPDFLibraryDrawCapturedPageMatrix(instanceID, CaptureID, M11, 
		M12, M21, M22, MDX, MDY);
}

int DebenuPDFLibraryDLL0916::DrawCircle(double XPos, double YPos, double Radius, int DrawOptions)
{
	return DebenuPDFLibraryDrawCircle(instanceID, XPos, YPos, Radius, 
		DrawOptions);
}

int DebenuPDFLibraryDLL0916::DrawDataMatrixSymbol(double Left, double Top, double ModuleSize, const std::wstring& Text, int Encoding, int SymbolSize, int Options)
{
	return DebenuPDFLibraryDrawDataMatrixSymbol(instanceID, Left, Top, 
		ModuleSize, WideStringParm(Text), Encoding, SymbolSize, Options);
}

int DebenuPDFLibraryDLL0916::DrawEllipse(double XPos, double YPos, double Width, double Height, int DrawOptions)
{
	return DebenuPDFLibraryDrawEllipse(instanceID, XPos, YPos, Width, Height, 
		DrawOptions);
}

int DebenuPDFLibraryDLL0916::DrawEllipticArc(double XPos, double YPos, double Width, double Height, double StartAngle, double EndAngle, int Pie, int DrawOptions)
{
	return DebenuPDFLibraryDrawEllipticArc(instanceID, XPos, YPos, Width, 
		Height, StartAngle, EndAngle, Pie, DrawOptions);
}

int DebenuPDFLibraryDLL0916::DrawHTMLText(double Left, double Top, double Width, const std::wstring& HTMLText)
{
	return DebenuPDFLibraryDrawHTMLText(instanceID, Left, Top, Width, 
		WideStringParm(HTMLText));
}

std::wstring DebenuPDFLibraryDLL0916::DrawHTMLTextBox(double Left, double Top, double Width, double Height, const std::wstring& HTMLText)
{
	wchar_t* result;
	result = DebenuPDFLibraryDrawHTMLTextBox(instanceID, Left, Top, Width, 
		Height, WideStringParm(HTMLText));
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::DrawHTMLTextBoxMatrix(double Width, double Height, const std::wstring& HTMLText, double M11, double M12, double M21, double M22, double MDX, double MDY)
{
	wchar_t* result;
	result = DebenuPDFLibraryDrawHTMLTextBoxMatrix(instanceID, Width, Height, 
		WideStringParm(HTMLText), M11, M12, M21, M22, MDX, MDY);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::DrawImage(double Left, double Top, double Width, double Height)
{
	return DebenuPDFLibraryDrawImage(instanceID, Left, Top, Width, Height);
}

int DebenuPDFLibraryDLL0916::DrawImageMatrix(double M11, double M12, double M21, double M22, double MDX, double MDY)
{
	return DebenuPDFLibraryDrawImageMatrix(instanceID, M11, M12, M21, M22, 
		MDX, MDY);
}

int DebenuPDFLibraryDLL0916::DrawIntelligentMailBarcode(double Left, double Top, double BarWidth, double FullBarHeight, double TrackerHeight, double SpaceWidth, const std::wstring& BarcodeData, int Options)
{
	return DebenuPDFLibraryDrawIntelligentMailBarcode(instanceID, Left, Top, 
		BarWidth, FullBarHeight, TrackerHeight, SpaceWidth, 
		WideStringParm(BarcodeData), Options);
}

int DebenuPDFLibraryDLL0916::DrawLine(double StartX, double StartY, double EndX, double EndY)
{
	return DebenuPDFLibraryDrawLine(instanceID, StartX, StartY, EndX, EndY);
}

int DebenuPDFLibraryDLL0916::DrawMultiLineText(double XPos, double YPos, const std::wstring& Delimiter, const std::wstring& Text)
{
	return DebenuPDFLibraryDrawMultiLineText(instanceID, XPos, YPos, 
		WideStringParm(Delimiter), WideStringParm(Text));
}

int DebenuPDFLibraryDLL0916::DrawPDF417Symbol(double Left, double Top, const std::wstring& Text, int Options)
{
	return DebenuPDFLibraryDrawPDF417Symbol(instanceID, Left, Top, 
		WideStringParm(Text), Options);
}

int DebenuPDFLibraryDLL0916::DrawPDF417SymbolEx(double Left, double Top, const std::wstring& Text, int Options, int FixedColumns, int FixedRows, int ErrorLevel, double ModuleSize, double HeightWidthRatio)
{
	return DebenuPDFLibraryDrawPDF417SymbolEx(instanceID, Left, Top, 
		WideStringParm(Text), Options, FixedColumns, FixedRows, ErrorLevel, 
		ModuleSize, HeightWidthRatio);
}

int DebenuPDFLibraryDLL0916::DrawPath(int PathOptions)
{
	return DebenuPDFLibraryDrawPath(instanceID, PathOptions);
}

int DebenuPDFLibraryDLL0916::DrawPathEvenOdd(int PathOptions)
{
	return DebenuPDFLibraryDrawPathEvenOdd(instanceID, PathOptions);
}

int DebenuPDFLibraryDLL0916::DrawPostScriptXObject(int PSRef)
{
	return DebenuPDFLibraryDrawPostScriptXObject(instanceID, PSRef);
}

int DebenuPDFLibraryDLL0916::DrawRotatedBox(double Left, double Bottom, double Width, double Height, double Angle, int DrawOptions)
{
	return DebenuPDFLibraryDrawRotatedBox(instanceID, Left, Bottom, Width, 
		Height, Angle, DrawOptions);
}

int DebenuPDFLibraryDLL0916::DrawRotatedCapturedPage(int CaptureID, double Left, double Bottom, double Width, double Height, double Angle)
{
	return DebenuPDFLibraryDrawRotatedCapturedPage(instanceID, CaptureID, 
		Left, Bottom, Width, Height, Angle);
}

int DebenuPDFLibraryDLL0916::DrawRotatedImage(double Left, double Bottom, double Width, double Height, double Angle)
{
	return DebenuPDFLibraryDrawRotatedImage(instanceID, Left, Bottom, Width, 
		Height, Angle);
}

int DebenuPDFLibraryDLL0916::DrawRotatedMultiLineText(double XPos, double YPos, double Angle, const std::wstring& Delimiter, const std::wstring& Text)
{
	return DebenuPDFLibraryDrawRotatedMultiLineText(instanceID, XPos, YPos, 
		Angle, WideStringParm(Delimiter), WideStringParm(Text));
}

int DebenuPDFLibraryDLL0916::DrawRotatedText(double XPos, double YPos, double Angle, const std::wstring& Text)
{
	return DebenuPDFLibraryDrawRotatedText(instanceID, XPos, YPos, Angle, 
		WideStringParm(Text));
}

int DebenuPDFLibraryDLL0916::DrawRotatedTextBox(double Left, double Top, double Width, double Height, double Angle, const std::wstring& Text, int Options)
{
	return DebenuPDFLibraryDrawRotatedTextBox(instanceID, Left, Top, Width, 
		Height, Angle, WideStringParm(Text), Options);
}

int DebenuPDFLibraryDLL0916::DrawRoundedBox(double Left, double Top, double Width, double Height, double Radius, int DrawOptions)
{
	return DebenuPDFLibraryDrawRoundedBox(instanceID, Left, Top, Width, 
		Height, Radius, DrawOptions);
}

int DebenuPDFLibraryDLL0916::DrawScaledImage(double Left, double Top, double Scale)
{
	return DebenuPDFLibraryDrawScaledImage(instanceID, Left, Top, Scale);
}

int DebenuPDFLibraryDLL0916::DrawSpacedText(double XPos, double YPos, double Spacing, const std::wstring& Text)
{
	return DebenuPDFLibraryDrawSpacedText(instanceID, XPos, YPos, Spacing, 
		WideStringParm(Text));
}

double DebenuPDFLibraryDLL0916::DrawTableRows(int TableID, double Left, double Top, double Height, int FirstRow, int LastRow)
{
	return DebenuPDFLibraryDrawTableRows(instanceID, TableID, Left, Top, 
		Height, FirstRow, LastRow);
}

int DebenuPDFLibraryDLL0916::DrawText(double XPos, double YPos, const std::wstring& Text)
{
	return DebenuPDFLibraryDrawText(instanceID, XPos, YPos, 
		WideStringParm(Text));
}

int DebenuPDFLibraryDLL0916::DrawTextArc(double XPos, double YPos, double Radius, double Angle, const std::wstring& Text, int DrawOptions)
{
	return DebenuPDFLibraryDrawTextArc(instanceID, XPos, YPos, Radius, Angle, 
		WideStringParm(Text), DrawOptions);
}

int DebenuPDFLibraryDLL0916::DrawTextBox(double Left, double Top, double Width, double Height, const std::wstring& Text, int Options)
{
	return DebenuPDFLibraryDrawTextBox(instanceID, Left, Top, Width, Height, 
		WideStringParm(Text), Options);
}

int DebenuPDFLibraryDLL0916::DrawTextBoxMatrix(double Width, double Height, const std::wstring& Text, int Options, double M11, double M12, double M21, double M22, double MDX, double MDY)
{
	return DebenuPDFLibraryDrawTextBoxMatrix(instanceID, Width, Height, 
		WideStringParm(Text), Options, M11, M12, M21, M22, MDX, MDY);
}

int DebenuPDFLibraryDLL0916::DrawWrappedText(double XPos, double YPos, double Width, const std::wstring& Text)
{
	return DebenuPDFLibraryDrawWrappedText(instanceID, XPos, YPos, Width, 
		WideStringParm(Text));
}

int DebenuPDFLibraryDLL0916::EditableContentStream()
{
	return DebenuPDFLibraryEditableContentStream(instanceID);
}

int DebenuPDFLibraryDLL0916::EmbedFile(const std::wstring& Title, const std::wstring& FileName, const std::wstring& MIMEType)
{
	return DebenuPDFLibraryEmbedFile(instanceID, WideStringParm(Title), 
		WideStringParm(FileName), WideStringParm(MIMEType));
}

int DebenuPDFLibraryDLL0916::EmbeddedFileCount()
{
	return DebenuPDFLibraryEmbeddedFileCount(instanceID);
}

int DebenuPDFLibraryDLL0916::EncapsulateContentStream()
{
	return DebenuPDFLibraryEncapsulateContentStream(instanceID);
}

int DebenuPDFLibraryDLL0916::EncodePermissions(int CanPrint, int CanCopy, int CanChange, int CanAddNotes, int CanFillFields, int CanCopyAccess, int CanAssemble, int CanPrintFull)
{
	return DebenuPDFLibraryEncodePermissions(instanceID, CanPrint, CanCopy, 
		CanChange, CanAddNotes, CanFillFields, CanCopyAccess, CanAssemble, 
		CanPrintFull);
}

int DebenuPDFLibraryDLL0916::Encrypt(const std::wstring& Owner, const std::wstring& User, int Strength, int Permissions)
{
	return DebenuPDFLibraryEncrypt(instanceID, WideStringParm(Owner), 
		WideStringParm(User), Strength, Permissions);
}

int DebenuPDFLibraryDLL0916::EncryptFile(const std::wstring& InputFileName, const std::wstring& OutputFileName, const std::wstring& Owner, const std::wstring& User, int Strength, int Permissions)
{
	return DebenuPDFLibraryEncryptFile(instanceID, 
		WideStringParm(InputFileName), WideStringParm(OutputFileName), 
		WideStringParm(Owner), WideStringParm(User), Strength, Permissions);
}

int DebenuPDFLibraryDLL0916::EncryptWithFingerprint(const std::wstring& Fingerprint)
{
	return DebenuPDFLibraryEncryptWithFingerprint(instanceID, 
		WideStringParm(Fingerprint));
}

int DebenuPDFLibraryDLL0916::EncryptionAlgorithm()
{
	return DebenuPDFLibraryEncryptionAlgorithm(instanceID);
}

int DebenuPDFLibraryDLL0916::EncryptionStatus()
{
	return DebenuPDFLibraryEncryptionStatus(instanceID);
}

int DebenuPDFLibraryDLL0916::EncryptionStrength()
{
	return DebenuPDFLibraryEncryptionStrength(instanceID);
}

int DebenuPDFLibraryDLL0916::EndPageUpdate()
{
	return DebenuPDFLibraryEndPageUpdate(instanceID);
}

int DebenuPDFLibraryDLL0916::EndSignProcessToFile(int SignProcessID, const std::wstring& OutputFile)
{
	return DebenuPDFLibraryEndSignProcessToFile(instanceID, SignProcessID, 
		WideStringParm(OutputFile));
}

std::string DebenuPDFLibraryDLL0916::EndSignProcessToString(int SignProcessID)
{
	char* result;
	result = DebenuPDFLibraryEndSignProcessToString(instanceID, 
		SignProcessID);
	std::string resultStr(result, DebenuPDFLibraryAnsiStringResultLength(instanceID));
	return resultStr;
}

std::string DebenuPDFLibraryDLL0916::ExtractFilePageContentToString(const std::wstring& InputFileName, const std::wstring& Password, int Page)
{
	char* result;
	result = DebenuPDFLibraryExtractFilePageContentToString(instanceID, 
		WideStringParm(InputFileName), WideStringParm(Password), Page);
	std::string resultStr(result, DebenuPDFLibraryAnsiStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::ExtractFilePageText(const std::wstring& InputFileName, const std::wstring& Password, int Page, int Options)
{
	wchar_t* result;
	result = DebenuPDFLibraryExtractFilePageText(instanceID, 
		WideStringParm(InputFileName), WideStringParm(Password), Page, Options);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::ExtractFilePageTextBlocks(const std::wstring& InputFileName, const std::wstring& Password, int Page, int Options)
{
	return DebenuPDFLibraryExtractFilePageTextBlocks(instanceID, 
		WideStringParm(InputFileName), WideStringParm(Password), Page, Options);
}

int DebenuPDFLibraryDLL0916::ExtractFilePages(const std::wstring& InputFileName, const std::wstring& Password, const std::wstring& OutputFileName, const std::wstring& RangeList)
{
	return DebenuPDFLibraryExtractFilePages(instanceID, 
		WideStringParm(InputFileName), WideStringParm(Password), 
		WideStringParm(OutputFileName), WideStringParm(RangeList));
}

int DebenuPDFLibraryDLL0916::ExtractFilePagesEx(const std::wstring& InputFileName, const std::wstring& Password, const std::wstring& OutputFileName, const std::wstring& RangeList, int Options)
{
	return DebenuPDFLibraryExtractFilePagesEx(instanceID, 
		WideStringParm(InputFileName), WideStringParm(Password), 
		WideStringParm(OutputFileName), WideStringParm(RangeList), Options);
}

int DebenuPDFLibraryDLL0916::ExtractPageRanges(const std::wstring& RangeList)
{
	return DebenuPDFLibraryExtractPageRanges(instanceID, 
		WideStringParm(RangeList));
}

int DebenuPDFLibraryDLL0916::ExtractPageTextBlocks(int ExtractOptions)
{
	return DebenuPDFLibraryExtractPageTextBlocks(instanceID, ExtractOptions);
}

int DebenuPDFLibraryDLL0916::ExtractPages(int StartPage, int PageCount)
{
	return DebenuPDFLibraryExtractPages(instanceID, StartPage, PageCount);
}

int DebenuPDFLibraryDLL0916::FileListCount(const std::wstring& ListName)
{
	return DebenuPDFLibraryFileListCount(instanceID, 
		WideStringParm(ListName));
}

std::wstring DebenuPDFLibraryDLL0916::FileListItem(const std::wstring& ListName, int Index)
{
	wchar_t* result;
	result = DebenuPDFLibraryFileListItem(instanceID, 
		WideStringParm(ListName), Index);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::FindFonts()
{
	return DebenuPDFLibraryFindFonts(instanceID);
}

int DebenuPDFLibraryDLL0916::FindFormFieldByTitle(const std::wstring& Title)
{
	return DebenuPDFLibraryFindFormFieldByTitle(instanceID, 
		WideStringParm(Title));
}

int DebenuPDFLibraryDLL0916::FindImages()
{
	return DebenuPDFLibraryFindImages(instanceID);
}

int DebenuPDFLibraryDLL0916::FitImage(double Left, double Top, double Width, double Height, int HAlign, int VAlign, int Rotate)
{
	return DebenuPDFLibraryFitImage(instanceID, Left, Top, Width, Height, 
		HAlign, VAlign, Rotate);
}

int DebenuPDFLibraryDLL0916::FitRotatedTextBox(double Left, double Top, double Width, double Height, double Angle, const std::wstring& Text, int Options)
{
	return DebenuPDFLibraryFitRotatedTextBox(instanceID, Left, Top, Width, 
		Height, Angle, WideStringParm(Text), Options);
}

int DebenuPDFLibraryDLL0916::FitTextBox(double Left, double Top, double Width, double Height, const std::wstring& Text, int Options)
{
	return DebenuPDFLibraryFitTextBox(instanceID, Left, Top, Width, Height, 
		WideStringParm(Text), Options);
}

int DebenuPDFLibraryDLL0916::FlattenAnnot(int Index, int Options)
{
	return DebenuPDFLibraryFlattenAnnot(instanceID, Index, Options);
}

int DebenuPDFLibraryDLL0916::FlattenFormField(int Index)
{
	return DebenuPDFLibraryFlattenFormField(instanceID, Index);
}

int DebenuPDFLibraryDLL0916::FontCount()
{
	return DebenuPDFLibraryFontCount(instanceID);
}

std::wstring DebenuPDFLibraryDLL0916::FontFamily()
{
	wchar_t* result;
	result = DebenuPDFLibraryFontFamily(instanceID);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::FontHasKerning()
{
	return DebenuPDFLibraryFontHasKerning(instanceID);
}

std::wstring DebenuPDFLibraryDLL0916::FontName()
{
	wchar_t* result;
	result = DebenuPDFLibraryFontName(instanceID);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::FontReference()
{
	wchar_t* result;
	result = DebenuPDFLibraryFontReference(instanceID);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::FontSize()
{
	return DebenuPDFLibraryFontSize(instanceID);
}

int DebenuPDFLibraryDLL0916::FontType()
{
	return DebenuPDFLibraryFontType(instanceID);
}

int DebenuPDFLibraryDLL0916::FormFieldCount()
{
	return DebenuPDFLibraryFormFieldCount(instanceID);
}

int DebenuPDFLibraryDLL0916::FormFieldHasParent(int Index)
{
	return DebenuPDFLibraryFormFieldHasParent(instanceID, Index);
}

int DebenuPDFLibraryDLL0916::FormFieldJavaScriptAction(int Index, const std::wstring& ActionType, const std::wstring& JavaScript)
{
	return DebenuPDFLibraryFormFieldJavaScriptAction(instanceID, Index, 
		WideStringParm(ActionType), WideStringParm(JavaScript));
}

int DebenuPDFLibraryDLL0916::FormFieldWebLinkAction(int Index, const std::wstring& ActionType, const std::wstring& Link)
{
	return DebenuPDFLibraryFormFieldWebLinkAction(instanceID, Index, 
		WideStringParm(ActionType), WideStringParm(Link));
}

int DebenuPDFLibraryDLL0916::GetActionDest(int ActionID)
{
	return DebenuPDFLibraryGetActionDest(instanceID, ActionID);
}

std::wstring DebenuPDFLibraryDLL0916::GetActionType(int ActionID)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetActionType(instanceID, ActionID);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::GetActionURL(int ActionID)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetActionURL(instanceID, ActionID);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::GetAnalysisInfo(int AnalysisID, int AnalysisItem)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetAnalysisInfo(instanceID, AnalysisID, 
		AnalysisItem);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetAnnotActionID(int Index)
{
	return DebenuPDFLibraryGetAnnotActionID(instanceID, Index);
}

double DebenuPDFLibraryDLL0916::GetAnnotDblProperty(int Index, int Tag)
{
	return DebenuPDFLibraryGetAnnotDblProperty(instanceID, Index, Tag);
}

int DebenuPDFLibraryDLL0916::GetAnnotDest(int Index)
{
	return DebenuPDFLibraryGetAnnotDest(instanceID, Index);
}

int DebenuPDFLibraryDLL0916::GetAnnotIntProperty(int Index, int Tag)
{
	return DebenuPDFLibraryGetAnnotIntProperty(instanceID, Index, Tag);
}

int DebenuPDFLibraryDLL0916::GetAnnotQuadCount(int Index)
{
	return DebenuPDFLibraryGetAnnotQuadCount(instanceID, Index);
}

double DebenuPDFLibraryDLL0916::GetAnnotQuadPoints(int Index, int QuadNumber, int PointNumber)
{
	return DebenuPDFLibraryGetAnnotQuadPoints(instanceID, Index, QuadNumber, 
		PointNumber);
}

int DebenuPDFLibraryDLL0916::GetAnnotSoundToFile(int Index, int Options, const std::wstring& SoundFileName)
{
	return DebenuPDFLibraryGetAnnotSoundToFile(instanceID, Index, Options, 
		WideStringParm(SoundFileName));
}

std::string DebenuPDFLibraryDLL0916::GetAnnotSoundToString(int Index, int Options)
{
	char* result;
	result = DebenuPDFLibraryGetAnnotSoundToString(instanceID, Index, 
		Options);
	std::string resultStr(result, DebenuPDFLibraryAnsiStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::GetAnnotStrProperty(int Index, int Tag)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetAnnotStrProperty(instanceID, Index, Tag);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

double DebenuPDFLibraryDLL0916::GetBarcodeWidth(double NominalWidth, const std::wstring& Text, int Barcode)
{
	return DebenuPDFLibraryGetBarcodeWidth(instanceID, NominalWidth, 
		WideStringParm(Text), Barcode);
}

std::wstring DebenuPDFLibraryDLL0916::GetBaseURL()
{
	wchar_t* result;
	result = DebenuPDFLibraryGetBaseURL(instanceID);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetCSDictEPSG(int CSDictID)
{
	return DebenuPDFLibraryGetCSDictEPSG(instanceID, CSDictID);
}

int DebenuPDFLibraryDLL0916::GetCSDictType(int CSDictID)
{
	return DebenuPDFLibraryGetCSDictType(instanceID, CSDictID);
}

std::wstring DebenuPDFLibraryDLL0916::GetCSDictWKT(int CSDictID)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetCSDictWKT(instanceID, CSDictID);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

HDC DebenuPDFLibraryDLL0916::GetCanvasDC(int CanvasWidth, int CanvasHeight)
{
	return DebenuPDFLibraryGetCanvasDC(instanceID, CanvasWidth, CanvasHeight);
}

std::wstring DebenuPDFLibraryDLL0916::GetCatalogInformation(const std::wstring& Key)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetCatalogInformation(instanceID, 
		WideStringParm(Key));
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::string DebenuPDFLibraryDLL0916::GetContentStreamToString()
{
	char* result;
	result = DebenuPDFLibraryGetContentStreamToString(instanceID);
	std::string resultStr(result, DebenuPDFLibraryAnsiStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::GetCustomInformation(const std::wstring& Key)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetCustomInformation(instanceID, 
		WideStringParm(Key));
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::GetCustomKeys(int Location)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetCustomKeys(instanceID, Location);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::GetDefaultPrinterName()
{
	wchar_t* result;
	result = DebenuPDFLibraryGetDefaultPrinterName(instanceID);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::GetDestName(int DestID)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetDestName(instanceID, DestID);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetDestPage(int DestID)
{
	return DebenuPDFLibraryGetDestPage(instanceID, DestID);
}

int DebenuPDFLibraryDLL0916::GetDestType(int DestID)
{
	return DebenuPDFLibraryGetDestType(instanceID, DestID);
}

double DebenuPDFLibraryDLL0916::GetDestValue(int DestID, int ValueKey)
{
	return DebenuPDFLibraryGetDestValue(instanceID, DestID, ValueKey);
}

std::wstring DebenuPDFLibraryDLL0916::GetDocJavaScript(const std::wstring& ActionType)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetDocJavaScript(instanceID, 
		WideStringParm(ActionType));
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::GetDocumentFileName()
{
	wchar_t* result;
	result = DebenuPDFLibraryGetDocumentFileName(instanceID);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetDocumentFileSize()
{
	return DebenuPDFLibraryGetDocumentFileSize(instanceID);
}

int DebenuPDFLibraryDLL0916::GetDocumentID(int Index)
{
	return DebenuPDFLibraryGetDocumentID(instanceID, Index);
}

std::wstring DebenuPDFLibraryDLL0916::GetDocumentIdentifier(int Part, int Options)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetDocumentIdentifier(instanceID, Part, Options);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::GetDocumentMetadata()
{
	wchar_t* result;
	result = DebenuPDFLibraryGetDocumentMetadata(instanceID);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetDocumentRepaired()
{
	return DebenuPDFLibraryGetDocumentRepaired(instanceID);
}

std::wstring DebenuPDFLibraryDLL0916::GetDocumentResourceList()
{
	wchar_t* result;
	result = DebenuPDFLibraryGetDocumentResourceList(instanceID);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetEmbeddedFileContentToFile(int Index, const std::wstring& FileName)
{
	return DebenuPDFLibraryGetEmbeddedFileContentToFile(instanceID, Index, 
		WideStringParm(FileName));
}

std::string DebenuPDFLibraryDLL0916::GetEmbeddedFileContentToString(int Index)
{
	char* result;
	result = DebenuPDFLibraryGetEmbeddedFileContentToString(instanceID, 
		Index);
	std::string resultStr(result, DebenuPDFLibraryAnsiStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetEmbeddedFileID(int Index)
{
	return DebenuPDFLibraryGetEmbeddedFileID(instanceID, Index);
}

int DebenuPDFLibraryDLL0916::GetEmbeddedFileIntProperty(int Index, int Tag)
{
	return DebenuPDFLibraryGetEmbeddedFileIntProperty(instanceID, Index, Tag);
}

std::wstring DebenuPDFLibraryDLL0916::GetEmbeddedFileStrProperty(int Index, int Tag)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetEmbeddedFileStrProperty(instanceID, Index, 
		Tag);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::GetEncryptionFingerprint()
{
	wchar_t* result;
	result = DebenuPDFLibraryGetEncryptionFingerprint(instanceID);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::GetFileMetadata(const std::wstring& InputFileName, const std::wstring& Password)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetFileMetadata(instanceID, 
		WideStringParm(InputFileName), WideStringParm(Password));
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetFirstChildOutline(int OutlineID)
{
	return DebenuPDFLibraryGetFirstChildOutline(instanceID, OutlineID);
}

int DebenuPDFLibraryDLL0916::GetFirstOutline()
{
	return DebenuPDFLibraryGetFirstOutline(instanceID);
}

int DebenuPDFLibraryDLL0916::GetFontEncoding()
{
	return DebenuPDFLibraryGetFontEncoding(instanceID);
}

int DebenuPDFLibraryDLL0916::GetFontFlags(int FontFlagItemID)
{
	return DebenuPDFLibraryGetFontFlags(instanceID, FontFlagItemID);
}

int DebenuPDFLibraryDLL0916::GetFontID(int Index)
{
	return DebenuPDFLibraryGetFontID(instanceID, Index);
}

int DebenuPDFLibraryDLL0916::GetFontObjectNumber()
{
	return DebenuPDFLibraryGetFontObjectNumber(instanceID);
}

int DebenuPDFLibraryDLL0916::GetFormFieldActionID(int Index, const std::wstring& TriggerEvent)
{
	return DebenuPDFLibraryGetFormFieldActionID(instanceID, Index, 
		WideStringParm(TriggerEvent));
}

int DebenuPDFLibraryDLL0916::GetFormFieldAlignment(int Index)
{
	return DebenuPDFLibraryGetFormFieldAlignment(instanceID, Index);
}

int DebenuPDFLibraryDLL0916::GetFormFieldAnnotFlags(int Index)
{
	return DebenuPDFLibraryGetFormFieldAnnotFlags(instanceID, Index);
}

double DebenuPDFLibraryDLL0916::GetFormFieldBackgroundColor(int Index, int ColorComponent)
{
	return DebenuPDFLibraryGetFormFieldBackgroundColor(instanceID, Index, 
		ColorComponent);
}

int DebenuPDFLibraryDLL0916::GetFormFieldBackgroundColorType(int Index)
{
	return DebenuPDFLibraryGetFormFieldBackgroundColorType(instanceID, Index);
}

double DebenuPDFLibraryDLL0916::GetFormFieldBorderColor(int Index, int ColorComponent)
{
	return DebenuPDFLibraryGetFormFieldBorderColor(instanceID, Index, 
		ColorComponent);
}

int DebenuPDFLibraryDLL0916::GetFormFieldBorderColorType(int Index)
{
	return DebenuPDFLibraryGetFormFieldBorderColorType(instanceID, Index);
}

double DebenuPDFLibraryDLL0916::GetFormFieldBorderProperty(int Index, int PropKey)
{
	return DebenuPDFLibraryGetFormFieldBorderProperty(instanceID, Index, 
		PropKey);
}

int DebenuPDFLibraryDLL0916::GetFormFieldBorderStyle(int Index)
{
	return DebenuPDFLibraryGetFormFieldBorderStyle(instanceID, Index);
}

double DebenuPDFLibraryDLL0916::GetFormFieldBound(int Index, int Edge)
{
	return DebenuPDFLibraryGetFormFieldBound(instanceID, Index, Edge);
}

std::wstring DebenuPDFLibraryDLL0916::GetFormFieldCaption(int Index)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetFormFieldCaption(instanceID, Index);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetFormFieldCheckStyle(int Index)
{
	return DebenuPDFLibraryGetFormFieldCheckStyle(instanceID, Index);
}

std::wstring DebenuPDFLibraryDLL0916::GetFormFieldChildTitle(int Index)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetFormFieldChildTitle(instanceID, Index);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetFormFieldChoiceType(int Index)
{
	return DebenuPDFLibraryGetFormFieldChoiceType(instanceID, Index);
}

double DebenuPDFLibraryDLL0916::GetFormFieldColor(int Index, int ColorComponent)
{
	return DebenuPDFLibraryGetFormFieldColor(instanceID, Index, 
		ColorComponent);
}

int DebenuPDFLibraryDLL0916::GetFormFieldComb(int Index)
{
	return DebenuPDFLibraryGetFormFieldComb(instanceID, Index);
}

std::wstring DebenuPDFLibraryDLL0916::GetFormFieldDefaultValue(int Index)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetFormFieldDefaultValue(instanceID, Index);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::GetFormFieldDescription(int Index)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetFormFieldDescription(instanceID, Index);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetFormFieldFlags(int Index)
{
	return DebenuPDFLibraryGetFormFieldFlags(instanceID, Index);
}

std::wstring DebenuPDFLibraryDLL0916::GetFormFieldFontName(int Index)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetFormFieldFontName(instanceID, Index);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::GetFormFieldJavaScript(int Index, const std::wstring& ActionType)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetFormFieldJavaScript(instanceID, Index, 
		WideStringParm(ActionType));
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetFormFieldKidCount(int Index)
{
	return DebenuPDFLibraryGetFormFieldKidCount(instanceID, Index);
}

int DebenuPDFLibraryDLL0916::GetFormFieldMaxLen(int Index)
{
	return DebenuPDFLibraryGetFormFieldMaxLen(instanceID, Index);
}

int DebenuPDFLibraryDLL0916::GetFormFieldNoExport(int Index)
{
	return DebenuPDFLibraryGetFormFieldNoExport(instanceID, Index);
}

int DebenuPDFLibraryDLL0916::GetFormFieldPage(int Index)
{
	return DebenuPDFLibraryGetFormFieldPage(instanceID, Index);
}

int DebenuPDFLibraryDLL0916::GetFormFieldPrintable(int Index)
{
	return DebenuPDFLibraryGetFormFieldPrintable(instanceID, Index);
}

int DebenuPDFLibraryDLL0916::GetFormFieldReadOnly(int Index)
{
	return DebenuPDFLibraryGetFormFieldReadOnly(instanceID, Index);
}

int DebenuPDFLibraryDLL0916::GetFormFieldRequired(int Index)
{
	return DebenuPDFLibraryGetFormFieldRequired(instanceID, Index);
}

std::wstring DebenuPDFLibraryDLL0916::GetFormFieldRichTextString(int Index, const std::wstring& Key)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetFormFieldRichTextString(instanceID, Index, 
		WideStringParm(Key));
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetFormFieldRotation(int Index)
{
	return DebenuPDFLibraryGetFormFieldRotation(instanceID, Index);
}

int DebenuPDFLibraryDLL0916::GetFormFieldSubCount(int Index)
{
	return DebenuPDFLibraryGetFormFieldSubCount(instanceID, Index);
}

std::wstring DebenuPDFLibraryDLL0916::GetFormFieldSubDisplayName(int Index, int SubIndex)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetFormFieldSubDisplayName(instanceID, Index, 
		SubIndex);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::GetFormFieldSubName(int Index, int SubIndex)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetFormFieldSubName(instanceID, Index, SubIndex);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetFormFieldSubTempIndex(int Index, int SubIndex)
{
	return DebenuPDFLibraryGetFormFieldSubTempIndex(instanceID, Index, 
		SubIndex);
}

int DebenuPDFLibraryDLL0916::GetFormFieldTabOrder(int Index)
{
	return DebenuPDFLibraryGetFormFieldTabOrder(instanceID, Index);
}

int DebenuPDFLibraryDLL0916::GetFormFieldTabOrderEx(int Index, int Options)
{
	return DebenuPDFLibraryGetFormFieldTabOrderEx(instanceID, Index, Options);
}

int DebenuPDFLibraryDLL0916::GetFormFieldTextFlags(int Index, int ValueKey)
{
	return DebenuPDFLibraryGetFormFieldTextFlags(instanceID, Index, ValueKey);
}

double DebenuPDFLibraryDLL0916::GetFormFieldTextSize(int Index)
{
	return DebenuPDFLibraryGetFormFieldTextSize(instanceID, Index);
}

std::wstring DebenuPDFLibraryDLL0916::GetFormFieldTitle(int Index)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetFormFieldTitle(instanceID, Index);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetFormFieldType(int Index)
{
	return DebenuPDFLibraryGetFormFieldType(instanceID, Index);
}

std::wstring DebenuPDFLibraryDLL0916::GetFormFieldValue(int Index)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetFormFieldValue(instanceID, Index);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::GetFormFieldValueByTitle(const std::wstring& Title)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetFormFieldValueByTitle(instanceID, 
		WideStringParm(Title));
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetFormFieldVisible(int Index)
{
	return DebenuPDFLibraryGetFormFieldVisible(instanceID, Index);
}

std::wstring DebenuPDFLibraryDLL0916::GetFormFieldWebLink(int Index, const std::wstring& ActionType)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetFormFieldWebLink(instanceID, Index, 
		WideStringParm(ActionType));
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetFormFontCount()
{
	return DebenuPDFLibraryGetFormFontCount(instanceID);
}

std::wstring DebenuPDFLibraryDLL0916::GetFormFontName(int FontIndex)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetFormFontName(instanceID, FontIndex);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::GetGlobalJavaScript(const std::wstring& PackageName)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetGlobalJavaScript(instanceID, 
		WideStringParm(PackageName));
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

double DebenuPDFLibraryDLL0916::GetHTMLTextHeight(double Width, const std::wstring& HTMLText)
{
	return DebenuPDFLibraryGetHTMLTextHeight(instanceID, Width, 
		WideStringParm(HTMLText));
}

int DebenuPDFLibraryDLL0916::GetHTMLTextLineCount(double Width, const std::wstring& HTMLText)
{
	return DebenuPDFLibraryGetHTMLTextLineCount(instanceID, Width, 
		WideStringParm(HTMLText));
}

double DebenuPDFLibraryDLL0916::GetHTMLTextWidth(double MaxWidth, const std::wstring& HTMLText)
{
	return DebenuPDFLibraryGetHTMLTextWidth(instanceID, MaxWidth, 
		WideStringParm(HTMLText));
}

int DebenuPDFLibraryDLL0916::GetImageID(int Index)
{
	return DebenuPDFLibraryGetImageID(instanceID, Index);
}

int DebenuPDFLibraryDLL0916::GetImageListCount(int ImageListID)
{
	return DebenuPDFLibraryGetImageListCount(instanceID, ImageListID);
}

std::string DebenuPDFLibraryDLL0916::GetImageListItemDataToString(int ImageListID, int ImageIndex, int Options)
{
	char* result;
	result = DebenuPDFLibraryGetImageListItemDataToString(instanceID, 
		ImageListID, ImageIndex, Options);
	std::string resultStr(result, DebenuPDFLibraryAnsiStringResultLength(instanceID));
	return resultStr;
}

double DebenuPDFLibraryDLL0916::GetImageListItemDblProperty(int ImageListID, int ImageIndex, int PropertyID)
{
	return DebenuPDFLibraryGetImageListItemDblProperty(instanceID, 
		ImageListID, ImageIndex, PropertyID);
}

int DebenuPDFLibraryDLL0916::GetImageListItemIntProperty(int ImageListID, int ImageIndex, int PropertyID)
{
	return DebenuPDFLibraryGetImageListItemIntProperty(instanceID, 
		ImageListID, ImageIndex, PropertyID);
}

int DebenuPDFLibraryDLL0916::GetImageMeasureDict()
{
	return DebenuPDFLibraryGetImageMeasureDict(instanceID);
}

int DebenuPDFLibraryDLL0916::GetImagePageCount(const std::wstring& FileName)
{
	return DebenuPDFLibraryGetImagePageCount(instanceID, 
		WideStringParm(FileName));
}

int DebenuPDFLibraryDLL0916::GetImagePageCountFromString(const std::string& Source)
{
	int sb1;
	char* sp1 = StringParm(Source, sb1);
	int result;
	result = DebenuPDFLibraryGetImagePageCountFromString(instanceID, sp1);
	if (sb1 == 1) DebenuPDFLibraryReleaseBuffer(instanceID, sp1);
	return result;
}

int DebenuPDFLibraryDLL0916::GetImagePtDataDict()
{
	return DebenuPDFLibraryGetImagePtDataDict(instanceID);
}

std::wstring DebenuPDFLibraryDLL0916::GetInformation(int Key)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetInformation(instanceID, Key);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::GetInstalledFontsByCharset(int CharsetIndex, int Options)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetInstalledFontsByCharset(instanceID, 
		CharsetIndex, Options);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::GetInstalledFontsByCodePage(int CodePage, int Options)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetInstalledFontsByCodePage(instanceID, 
		CodePage, Options);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetKerning(const std::wstring& CharPair)
{
	return DebenuPDFLibraryGetKerning(instanceID, WideStringParm(CharPair));
}

std::wstring DebenuPDFLibraryDLL0916::GetLatestPrinterNames()
{
	wchar_t* result;
	result = DebenuPDFLibraryGetLatestPrinterNames(instanceID);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetMaxObjectNumber()
{
	return DebenuPDFLibraryGetMaxObjectNumber(instanceID);
}

int DebenuPDFLibraryDLL0916::GetMeasureDictBoundsCount(int MeasureDictID)
{
	return DebenuPDFLibraryGetMeasureDictBoundsCount(instanceID, 
		MeasureDictID);
}

double DebenuPDFLibraryDLL0916::GetMeasureDictBoundsItem(int MeasureDictID, int ItemIndex)
{
	return DebenuPDFLibraryGetMeasureDictBoundsItem(instanceID, 
		MeasureDictID, ItemIndex);
}

int DebenuPDFLibraryDLL0916::GetMeasureDictCoordinateSystem(int MeasureDictID)
{
	return DebenuPDFLibraryGetMeasureDictCoordinateSystem(instanceID, 
		MeasureDictID);
}

int DebenuPDFLibraryDLL0916::GetMeasureDictDCSDict(int MeasureDictID)
{
	return DebenuPDFLibraryGetMeasureDictDCSDict(instanceID, MeasureDictID);
}

int DebenuPDFLibraryDLL0916::GetMeasureDictGCSDict(int MeasureDictID)
{
	return DebenuPDFLibraryGetMeasureDictGCSDict(instanceID, MeasureDictID);
}

int DebenuPDFLibraryDLL0916::GetMeasureDictGPTSCount(int MeasureDictID)
{
	return DebenuPDFLibraryGetMeasureDictGPTSCount(instanceID, MeasureDictID);
}

double DebenuPDFLibraryDLL0916::GetMeasureDictGPTSItem(int MeasureDictID, int ItemIndex)
{
	return DebenuPDFLibraryGetMeasureDictGPTSItem(instanceID, MeasureDictID, 
		ItemIndex);
}

int DebenuPDFLibraryDLL0916::GetMeasureDictLPTSCount(int MeasureDictID)
{
	return DebenuPDFLibraryGetMeasureDictLPTSCount(instanceID, MeasureDictID);
}

double DebenuPDFLibraryDLL0916::GetMeasureDictLPTSItem(int MeasureDictID, int ItemIndex)
{
	return DebenuPDFLibraryGetMeasureDictLPTSItem(instanceID, MeasureDictID, 
		ItemIndex);
}

int DebenuPDFLibraryDLL0916::GetMeasureDictPDU(int MeasureDictID, int UnitIndex)
{
	return DebenuPDFLibraryGetMeasureDictPDU(instanceID, MeasureDictID, 
		UnitIndex);
}

int DebenuPDFLibraryDLL0916::GetNamedDestination(const std::wstring& DestName)
{
	return DebenuPDFLibraryGetNamedDestination(instanceID, 
		WideStringParm(DestName));
}

int DebenuPDFLibraryDLL0916::GetNextOutline(int OutlineID)
{
	return DebenuPDFLibraryGetNextOutline(instanceID, OutlineID);
}

int DebenuPDFLibraryDLL0916::GetObjectCount()
{
	return DebenuPDFLibraryGetObjectCount(instanceID);
}

int DebenuPDFLibraryDLL0916::GetObjectDecodeError(int ObjectNumber)
{
	return DebenuPDFLibraryGetObjectDecodeError(instanceID, ObjectNumber);
}

std::string DebenuPDFLibraryDLL0916::GetObjectToString(int ObjectNumber)
{
	char* result;
	result = DebenuPDFLibraryGetObjectToString(instanceID, ObjectNumber);
	std::string resultStr(result, DebenuPDFLibraryAnsiStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetOpenActionDestination()
{
	return DebenuPDFLibraryGetOpenActionDestination(instanceID);
}

std::wstring DebenuPDFLibraryDLL0916::GetOpenActionJavaScript()
{
	wchar_t* result;
	result = DebenuPDFLibraryGetOpenActionJavaScript(instanceID);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetOptionalContentConfigCount()
{
	return DebenuPDFLibraryGetOptionalContentConfigCount(instanceID);
}

int DebenuPDFLibraryDLL0916::GetOptionalContentConfigLocked(int OptionalContentConfigID, int OptionalContentGroupID)
{
	return DebenuPDFLibraryGetOptionalContentConfigLocked(instanceID, 
		OptionalContentConfigID, OptionalContentGroupID);
}

int DebenuPDFLibraryDLL0916::GetOptionalContentConfigOrderCount(int OptionalContentConfigID)
{
	return DebenuPDFLibraryGetOptionalContentConfigOrderCount(instanceID, 
		OptionalContentConfigID);
}

int DebenuPDFLibraryDLL0916::GetOptionalContentConfigOrderItemID(int OptionalContentConfigID, int ItemIndex)
{
	return DebenuPDFLibraryGetOptionalContentConfigOrderItemID(instanceID, 
		OptionalContentConfigID, ItemIndex);
}

std::wstring DebenuPDFLibraryDLL0916::GetOptionalContentConfigOrderItemLabel(int OptionalContentConfigID, int ItemIndex)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetOptionalContentConfigOrderItemLabel(instanceID, 
		OptionalContentConfigID, ItemIndex);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetOptionalContentConfigOrderItemLevel(int OptionalContentConfigID, int ItemIndex)
{
	return DebenuPDFLibraryGetOptionalContentConfigOrderItemLevel(instanceID, 
		OptionalContentConfigID, ItemIndex);
}

int DebenuPDFLibraryDLL0916::GetOptionalContentConfigOrderItemType(int OptionalContentConfigID, int ItemIndex)
{
	return DebenuPDFLibraryGetOptionalContentConfigOrderItemType(instanceID, 
		OptionalContentConfigID, ItemIndex);
}

int DebenuPDFLibraryDLL0916::GetOptionalContentConfigState(int OptionalContentConfigID, int OptionalContentGroupID)
{
	return DebenuPDFLibraryGetOptionalContentConfigState(instanceID, 
		OptionalContentConfigID, OptionalContentGroupID);
}

int DebenuPDFLibraryDLL0916::GetOptionalContentGroupID(int Index)
{
	return DebenuPDFLibraryGetOptionalContentGroupID(instanceID, Index);
}

std::wstring DebenuPDFLibraryDLL0916::GetOptionalContentGroupName(int OptionalContentGroupID)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetOptionalContentGroupName(instanceID, 
		OptionalContentGroupID);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetOptionalContentGroupPrintable(int OptionalContentGroupID)
{
	return DebenuPDFLibraryGetOptionalContentGroupPrintable(instanceID, 
		OptionalContentGroupID);
}

int DebenuPDFLibraryDLL0916::GetOptionalContentGroupVisible(int OptionalContentGroupID)
{
	return DebenuPDFLibraryGetOptionalContentGroupVisible(instanceID, 
		OptionalContentGroupID);
}

int DebenuPDFLibraryDLL0916::GetOrigin()
{
	return DebenuPDFLibraryGetOrigin(instanceID);
}

int DebenuPDFLibraryDLL0916::GetOutlineActionID(int OutlineID)
{
	return DebenuPDFLibraryGetOutlineActionID(instanceID, OutlineID);
}

double DebenuPDFLibraryDLL0916::GetOutlineColor(int OutlineID, int ColorComponent)
{
	return DebenuPDFLibraryGetOutlineColor(instanceID, OutlineID, 
		ColorComponent);
}

int DebenuPDFLibraryDLL0916::GetOutlineDest(int OutlineID)
{
	return DebenuPDFLibraryGetOutlineDest(instanceID, OutlineID);
}

int DebenuPDFLibraryDLL0916::GetOutlineID(int Index)
{
	return DebenuPDFLibraryGetOutlineID(instanceID, Index);
}

std::wstring DebenuPDFLibraryDLL0916::GetOutlineJavaScript(int OutlineID)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetOutlineJavaScript(instanceID, OutlineID);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetOutlineObjectNumber(int OutlineID)
{
	return DebenuPDFLibraryGetOutlineObjectNumber(instanceID, OutlineID);
}

std::wstring DebenuPDFLibraryDLL0916::GetOutlineOpenFile(int OutlineID)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetOutlineOpenFile(instanceID, OutlineID);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetOutlinePage(int OutlineID)
{
	return DebenuPDFLibraryGetOutlinePage(instanceID, OutlineID);
}

int DebenuPDFLibraryDLL0916::GetOutlineStyle(int OutlineID)
{
	return DebenuPDFLibraryGetOutlineStyle(instanceID, OutlineID);
}

std::wstring DebenuPDFLibraryDLL0916::GetOutlineWebLink(int OutlineID)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetOutlineWebLink(instanceID, OutlineID);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

double DebenuPDFLibraryDLL0916::GetPageBox(int BoxType, int Dimension)
{
	return DebenuPDFLibraryGetPageBox(instanceID, BoxType, Dimension);
}

std::wstring DebenuPDFLibraryDLL0916::GetPageColorSpaces(int Options)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetPageColorSpaces(instanceID, Options);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::string DebenuPDFLibraryDLL0916::GetPageContentToString()
{
	char* result;
	result = DebenuPDFLibraryGetPageContentToString(instanceID);
	std::string resultStr(result, DebenuPDFLibraryAnsiStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetPageImageList(int Options)
{
	return DebenuPDFLibraryGetPageImageList(instanceID, Options);
}

std::wstring DebenuPDFLibraryDLL0916::GetPageJavaScript(const std::wstring& ActionType)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetPageJavaScript(instanceID, 
		WideStringParm(ActionType));
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::GetPageLGIDictContent(int DictIndex)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetPageLGIDictContent(instanceID, DictIndex);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetPageLGIDictCount()
{
	return DebenuPDFLibraryGetPageLGIDictCount(instanceID);
}

std::wstring DebenuPDFLibraryDLL0916::GetPageLabel(int Page)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetPageLabel(instanceID, Page);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetPageLayout()
{
	return DebenuPDFLibraryGetPageLayout(instanceID);
}

std::string DebenuPDFLibraryDLL0916::GetPageMetricsToString(int StartPage, int EndPage, int Options)
{
	char* result;
	result = DebenuPDFLibraryGetPageMetricsToString(instanceID, StartPage, 
		EndPage, Options);
	std::string resultStr(result, DebenuPDFLibraryAnsiStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetPageMode()
{
	return DebenuPDFLibraryGetPageMode(instanceID);
}

std::wstring DebenuPDFLibraryDLL0916::GetPageText(int ExtractOptions)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetPageText(instanceID, ExtractOptions);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetPageViewPortCount()
{
	return DebenuPDFLibraryGetPageViewPortCount(instanceID);
}

int DebenuPDFLibraryDLL0916::GetPageViewPortID(int Index)
{
	return DebenuPDFLibraryGetPageViewPortID(instanceID, Index);
}

int DebenuPDFLibraryDLL0916::GetParentOutline(int OutlineID)
{
	return DebenuPDFLibraryGetParentOutline(instanceID, OutlineID);
}

int DebenuPDFLibraryDLL0916::GetPrevOutline(int OutlineID)
{
	return DebenuPDFLibraryGetPrevOutline(instanceID, OutlineID);
}

std::string DebenuPDFLibraryDLL0916::GetPrintPreviewBitmapToString(const std::wstring& PrinterName, int PreviewPage, int PrintOptions, int MaxDimension, int PreviewOptions)
{
	char* result;
	result = DebenuPDFLibraryGetPrintPreviewBitmapToString(instanceID, 
		WideStringParm(PrinterName), PreviewPage, PrintOptions, MaxDimension, 
		PreviewOptions);
	std::string resultStr(result, DebenuPDFLibraryAnsiStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::GetPrinterBins(const std::wstring& PrinterName)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetPrinterBins(instanceID, 
		WideStringParm(PrinterName));
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::string DebenuPDFLibraryDLL0916::GetPrinterDevModeToString(const std::wstring& PrinterName)
{
	char* result;
	result = DebenuPDFLibraryGetPrinterDevModeToString(instanceID, 
		WideStringParm(PrinterName));
	std::string resultStr(result, DebenuPDFLibraryAnsiStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::GetPrinterMediaTypes(const std::wstring& PrinterName)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetPrinterMediaTypes(instanceID, 
		WideStringParm(PrinterName));
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::GetPrinterNames()
{
	wchar_t* result;
	result = DebenuPDFLibraryGetPrinterNames(instanceID);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

double DebenuPDFLibraryDLL0916::GetRenderScale()
{
	return DebenuPDFLibraryGetRenderScale(instanceID);
}

int DebenuPDFLibraryDLL0916::GetSignProcessByteRange(int SignProcessID, int ArrayPosition)
{
	return DebenuPDFLibraryGetSignProcessByteRange(instanceID, SignProcessID, 
		ArrayPosition);
}

int DebenuPDFLibraryDLL0916::GetSignProcessResult(int SignProcessID)
{
	return DebenuPDFLibraryGetSignProcessResult(instanceID, SignProcessID);
}

int DebenuPDFLibraryDLL0916::GetStringListCount(int StringListID)
{
	return DebenuPDFLibraryGetStringListCount(instanceID, StringListID);
}

std::wstring DebenuPDFLibraryDLL0916::GetStringListItem(int StringListID, int ItemIndex)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetStringListItem(instanceID, StringListID, 
		ItemIndex);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::GetTabOrderMode()
{
	wchar_t* result;
	result = DebenuPDFLibraryGetTabOrderMode(instanceID);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

double DebenuPDFLibraryDLL0916::GetTableCellDblProperty(int TableID, int RowNumber, int ColumnNumber, int Tag)
{
	return DebenuPDFLibraryGetTableCellDblProperty(instanceID, TableID, 
		RowNumber, ColumnNumber, Tag);
}

int DebenuPDFLibraryDLL0916::GetTableCellIntProperty(int TableID, int RowNumber, int ColumnNumber, int Tag)
{
	return DebenuPDFLibraryGetTableCellIntProperty(instanceID, TableID, 
		RowNumber, ColumnNumber, Tag);
}

std::wstring DebenuPDFLibraryDLL0916::GetTableCellStrProperty(int TableID, int RowNumber, int ColumnNumber, int Tag)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetTableCellStrProperty(instanceID, TableID, 
		RowNumber, ColumnNumber, Tag);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetTableColumnCount(int TableID)
{
	return DebenuPDFLibraryGetTableColumnCount(instanceID, TableID);
}

int DebenuPDFLibraryDLL0916::GetTableLastDrawnRow(int TableID)
{
	return DebenuPDFLibraryGetTableLastDrawnRow(instanceID, TableID);
}

int DebenuPDFLibraryDLL0916::GetTableRowCount(int TableID)
{
	return DebenuPDFLibraryGetTableRowCount(instanceID, TableID);
}

std::wstring DebenuPDFLibraryDLL0916::GetTempPath()
{
	wchar_t* result;
	result = DebenuPDFLibraryGetTempPath(instanceID);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

double DebenuPDFLibraryDLL0916::GetTextAscent()
{
	return DebenuPDFLibraryGetTextAscent(instanceID);
}

double DebenuPDFLibraryDLL0916::GetTextBlockBound(int TextBlockListID, int Index, int BoundIndex)
{
	return DebenuPDFLibraryGetTextBlockBound(instanceID, TextBlockListID, 
		Index, BoundIndex);
}

double DebenuPDFLibraryDLL0916::GetTextBlockCharWidth(int TextBlockListID, int Index, int CharIndex)
{
	return DebenuPDFLibraryGetTextBlockCharWidth(instanceID, TextBlockListID, 
		Index, CharIndex);
}

double DebenuPDFLibraryDLL0916::GetTextBlockColor(int TextBlockListID, int Index, int ColorComponent)
{
	return DebenuPDFLibraryGetTextBlockColor(instanceID, TextBlockListID, 
		Index, ColorComponent);
}

int DebenuPDFLibraryDLL0916::GetTextBlockColorType(int TextBlockListID, int Index)
{
	return DebenuPDFLibraryGetTextBlockColorType(instanceID, TextBlockListID, 
		Index);
}

int DebenuPDFLibraryDLL0916::GetTextBlockCount(int TextBlockListID)
{
	return DebenuPDFLibraryGetTextBlockCount(instanceID, TextBlockListID);
}

std::wstring DebenuPDFLibraryDLL0916::GetTextBlockFontName(int TextBlockListID, int Index)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetTextBlockFontName(instanceID, 
		TextBlockListID, Index);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

double DebenuPDFLibraryDLL0916::GetTextBlockFontSize(int TextBlockListID, int Index)
{
	return DebenuPDFLibraryGetTextBlockFontSize(instanceID, TextBlockListID, 
		Index);
}

std::wstring DebenuPDFLibraryDLL0916::GetTextBlockText(int TextBlockListID, int Index)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetTextBlockText(instanceID, TextBlockListID, 
		Index);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

double DebenuPDFLibraryDLL0916::GetTextBound(int Edge)
{
	return DebenuPDFLibraryGetTextBound(instanceID, Edge);
}

double DebenuPDFLibraryDLL0916::GetTextDescent()
{
	return DebenuPDFLibraryGetTextDescent(instanceID);
}

double DebenuPDFLibraryDLL0916::GetTextHeight()
{
	return DebenuPDFLibraryGetTextHeight(instanceID);
}

double DebenuPDFLibraryDLL0916::GetTextSize()
{
	return DebenuPDFLibraryGetTextSize(instanceID);
}

double DebenuPDFLibraryDLL0916::GetTextWidth(const std::wstring& Text)
{
	return DebenuPDFLibraryGetTextWidth(instanceID, WideStringParm(Text));
}

std::wstring DebenuPDFLibraryDLL0916::GetUnicodeCharactersFromEncoding(int Encoding)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetUnicodeCharactersFromEncoding(instanceID, 
		Encoding);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

double DebenuPDFLibraryDLL0916::GetViewPortBBox(int ViewPortID, int Dimension)
{
	return DebenuPDFLibraryGetViewPortBBox(instanceID, ViewPortID, Dimension);
}

int DebenuPDFLibraryDLL0916::GetViewPortMeasureDict(int ViewPortID)
{
	return DebenuPDFLibraryGetViewPortMeasureDict(instanceID, ViewPortID);
}

std::wstring DebenuPDFLibraryDLL0916::GetViewPortName(int ViewPortID)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetViewPortName(instanceID, ViewPortID);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GetViewPortPtDataDict(int ViewPortID)
{
	return DebenuPDFLibraryGetViewPortPtDataDict(instanceID, ViewPortID);
}

int DebenuPDFLibraryDLL0916::GetViewerPreferences(int Option)
{
	return DebenuPDFLibraryGetViewerPreferences(instanceID, Option);
}

std::wstring DebenuPDFLibraryDLL0916::GetWrappedText(double Width, const std::wstring& Delimiter, const std::wstring& Text)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetWrappedText(instanceID, Width, 
		WideStringParm(Delimiter), WideStringParm(Text));
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::GetWrappedTextBreakString(double Width, const std::wstring& Delimiter, const std::wstring& Text)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetWrappedTextBreakString(instanceID, Width, 
		WideStringParm(Delimiter), WideStringParm(Text));
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

double DebenuPDFLibraryDLL0916::GetWrappedTextHeight(double Width, const std::wstring& Text)
{
	return DebenuPDFLibraryGetWrappedTextHeight(instanceID, Width, 
		WideStringParm(Text));
}

int DebenuPDFLibraryDLL0916::GetWrappedTextLineCount(double Width, const std::wstring& Text)
{
	return DebenuPDFLibraryGetWrappedTextLineCount(instanceID, Width, 
		WideStringParm(Text));
}

int DebenuPDFLibraryDLL0916::GetXFAFormFieldCount()
{
	return DebenuPDFLibraryGetXFAFormFieldCount(instanceID);
}

std::wstring DebenuPDFLibraryDLL0916::GetXFAFormFieldName(int Index)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetXFAFormFieldName(instanceID, Index);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::GetXFAFormFieldNames(const std::wstring& Delimiter)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetXFAFormFieldNames(instanceID, 
		WideStringParm(Delimiter));
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::GetXFAFormFieldValue(const std::wstring& XFAFieldName)
{
	wchar_t* result;
	result = DebenuPDFLibraryGetXFAFormFieldValue(instanceID, 
		WideStringParm(XFAFieldName));
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::string DebenuPDFLibraryDLL0916::GetXFAToString(int Options)
{
	char* result;
	result = DebenuPDFLibraryGetXFAToString(instanceID, Options);
	std::string resultStr(result, DebenuPDFLibraryAnsiStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::GlobalJavaScriptCount()
{
	return DebenuPDFLibraryGlobalJavaScriptCount(instanceID);
}

std::wstring DebenuPDFLibraryDLL0916::GlobalJavaScriptPackageName(int Index)
{
	wchar_t* result;
	result = DebenuPDFLibraryGlobalJavaScriptPackageName(instanceID, Index);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::HasFontResources()
{
	return DebenuPDFLibraryHasFontResources(instanceID);
}

int DebenuPDFLibraryDLL0916::HasPageBox(int BoxType)
{
	return DebenuPDFLibraryHasPageBox(instanceID, BoxType);
}

int DebenuPDFLibraryDLL0916::HidePage()
{
	return DebenuPDFLibraryHidePage(instanceID);
}

int DebenuPDFLibraryDLL0916::ImageCount()
{
	return DebenuPDFLibraryImageCount(instanceID);
}

int DebenuPDFLibraryDLL0916::ImageFillColor()
{
	return DebenuPDFLibraryImageFillColor(instanceID);
}

int DebenuPDFLibraryDLL0916::ImageHeight()
{
	return DebenuPDFLibraryImageHeight(instanceID);
}

int DebenuPDFLibraryDLL0916::ImageHorizontalResolution()
{
	return DebenuPDFLibraryImageHorizontalResolution(instanceID);
}

int DebenuPDFLibraryDLL0916::ImageResolutionUnits()
{
	return DebenuPDFLibraryImageResolutionUnits(instanceID);
}

int DebenuPDFLibraryDLL0916::ImageType()
{
	return DebenuPDFLibraryImageType(instanceID);
}

int DebenuPDFLibraryDLL0916::ImageVerticalResolution()
{
	return DebenuPDFLibraryImageVerticalResolution(instanceID);
}

int DebenuPDFLibraryDLL0916::ImageWidth()
{
	return DebenuPDFLibraryImageWidth(instanceID);
}

int DebenuPDFLibraryDLL0916::ImportEMFFromFile(const std::wstring& FileName, int FontOptions, int GeneralOptions)
{
	return DebenuPDFLibraryImportEMFFromFile(instanceID, 
		WideStringParm(FileName), FontOptions, GeneralOptions);
}

int DebenuPDFLibraryDLL0916::InsertPages(int StartPage, int PageCount)
{
	return DebenuPDFLibraryInsertPages(instanceID, StartPage, PageCount);
}

int DebenuPDFLibraryDLL0916::InsertTableColumns(int TableID, int Position, int NewColumnCount)
{
	return DebenuPDFLibraryInsertTableColumns(instanceID, TableID, Position, 
		NewColumnCount);
}

int DebenuPDFLibraryDLL0916::InsertTableRows(int TableID, int Position, int NewRowCount)
{
	return DebenuPDFLibraryInsertTableRows(instanceID, TableID, Position, 
		NewRowCount);
}

int DebenuPDFLibraryDLL0916::IsAnnotFormField(int Index)
{
	return DebenuPDFLibraryIsAnnotFormField(instanceID, Index);
}

int DebenuPDFLibraryDLL0916::IsTaggedPDF()
{
	return DebenuPDFLibraryIsTaggedPDF(instanceID);
}

int DebenuPDFLibraryDLL0916::LastErrorCode()
{
	return DebenuPDFLibraryLastErrorCode(instanceID);
}

std::wstring DebenuPDFLibraryDLL0916::LastRenderError()
{
	wchar_t* result;
	result = DebenuPDFLibraryLastRenderError(instanceID);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::LibraryVersion()
{
	wchar_t* result;
	result = DebenuPDFLibraryLibraryVersion(instanceID);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

std::wstring DebenuPDFLibraryDLL0916::LicenseInfo()
{
	wchar_t* result;
	result = DebenuPDFLibraryLicenseInfo(instanceID);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::Linearized()
{
	return DebenuPDFLibraryLinearized(instanceID);
}

int DebenuPDFLibraryDLL0916::LoadFromCanvasDC(double DPI, int Options)
{
	return DebenuPDFLibraryLoadFromCanvasDC(instanceID, DPI, Options);
}

int DebenuPDFLibraryDLL0916::LoadFromFile(const std::wstring& FileName, const std::wstring& Password)
{
	return DebenuPDFLibraryLoadFromFile(instanceID, WideStringParm(FileName), 
		WideStringParm(Password));
}

int DebenuPDFLibraryDLL0916::LoadFromString(const std::string& Source, const std::wstring& Password)
{
	int sb1;
	char* sp1 = StringParm(Source, sb1);
	int result;
	result = DebenuPDFLibraryLoadFromString(instanceID, sp1, 
		WideStringParm(Password));
	if (sb1 == 1) DebenuPDFLibraryReleaseBuffer(instanceID, sp1);
	return result;
}

int DebenuPDFLibraryDLL0916::LoadState()
{
	return DebenuPDFLibraryLoadState(instanceID);
}

int DebenuPDFLibraryDLL0916::MergeDocument(int DocumentID)
{
	return DebenuPDFLibraryMergeDocument(instanceID, DocumentID);
}

int DebenuPDFLibraryDLL0916::MergeFileList(const std::wstring& ListName, const std::wstring& OutputFileName)
{
	return DebenuPDFLibraryMergeFileList(instanceID, 
		WideStringParm(ListName), WideStringParm(OutputFileName));
}

int DebenuPDFLibraryDLL0916::MergeFileListFast(const std::wstring& ListName, const std::wstring& OutputFileName)
{
	return DebenuPDFLibraryMergeFileListFast(instanceID, 
		WideStringParm(ListName), WideStringParm(OutputFileName));
}

int DebenuPDFLibraryDLL0916::MergeFiles(const std::wstring& FirstFileName, const std::wstring& SecondFileName, const std::wstring& OutputFileName)
{
	return DebenuPDFLibraryMergeFiles(instanceID, 
		WideStringParm(FirstFileName), WideStringParm(SecondFileName), 
		WideStringParm(OutputFileName));
}

int DebenuPDFLibraryDLL0916::MergeTableCells(int TableID, int FirstRow, int FirstColumn, int LastRow, int LastColumn)
{
	return DebenuPDFLibraryMergeTableCells(instanceID, TableID, FirstRow, 
		FirstColumn, LastRow, LastColumn);
}

int DebenuPDFLibraryDLL0916::MoveContentStream(int FromPosition, int ToPosition)
{
	return DebenuPDFLibraryMoveContentStream(instanceID, FromPosition, 
		ToPosition);
}

int DebenuPDFLibraryDLL0916::MoveOutlineAfter(int OutlineID, int SiblingID)
{
	return DebenuPDFLibraryMoveOutlineAfter(instanceID, OutlineID, SiblingID);
}

int DebenuPDFLibraryDLL0916::MoveOutlineBefore(int OutlineID, int SiblingID)
{
	return DebenuPDFLibraryMoveOutlineBefore(instanceID, OutlineID, 
		SiblingID);
}

int DebenuPDFLibraryDLL0916::MovePage(int NewPosition)
{
	return DebenuPDFLibraryMovePage(instanceID, NewPosition);
}

int DebenuPDFLibraryDLL0916::MovePath(double NewX, double NewY)
{
	return DebenuPDFLibraryMovePath(instanceID, NewX, NewY);
}

int DebenuPDFLibraryDLL0916::MultiplyScale(double MultScaleBy)
{
	return DebenuPDFLibraryMultiplyScale(instanceID, MultScaleBy);
}

int DebenuPDFLibraryDLL0916::NewChildFormField(int Index, const std::wstring& Title, int FieldType)
{
	return DebenuPDFLibraryNewChildFormField(instanceID, Index, 
		WideStringParm(Title), FieldType);
}

int DebenuPDFLibraryDLL0916::NewContentStream()
{
	return DebenuPDFLibraryNewContentStream(instanceID);
}

std::wstring DebenuPDFLibraryDLL0916::NewCustomPrinter(const std::wstring& OriginalPrinterName)
{
	wchar_t* result;
	result = DebenuPDFLibraryNewCustomPrinter(instanceID, 
		WideStringParm(OriginalPrinterName));
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::NewDestination(int DestPage, int Zoom, int DestType, double Left, double Top, double Right, double Bottom)
{
	return DebenuPDFLibraryNewDestination(instanceID, DestPage, Zoom, 
		DestType, Left, Top, Right, Bottom);
}

int DebenuPDFLibraryDLL0916::NewDocument()
{
	return DebenuPDFLibraryNewDocument(instanceID);
}

int DebenuPDFLibraryDLL0916::NewFormField(const std::wstring& Title, int FieldType)
{
	return DebenuPDFLibraryNewFormField(instanceID, WideStringParm(Title), 
		FieldType);
}

int DebenuPDFLibraryDLL0916::NewInternalPrinterObject(int Options)
{
	return DebenuPDFLibraryNewInternalPrinterObject(instanceID, Options);
}

int DebenuPDFLibraryDLL0916::NewNamedDestination(const std::wstring& DestName, int DestID)
{
	return DebenuPDFLibraryNewNamedDestination(instanceID, 
		WideStringParm(DestName), DestID);
}

int DebenuPDFLibraryDLL0916::NewOptionalContentGroup(const std::wstring& GroupName)
{
	return DebenuPDFLibraryNewOptionalContentGroup(instanceID, 
		WideStringParm(GroupName));
}

int DebenuPDFLibraryDLL0916::NewOutline(int Parent, const std::wstring& Title, int DestPage, double DestPosition)
{
	return DebenuPDFLibraryNewOutline(instanceID, Parent, 
		WideStringParm(Title), DestPage, DestPosition);
}

int DebenuPDFLibraryDLL0916::NewPage()
{
	return DebenuPDFLibraryNewPage(instanceID);
}

int DebenuPDFLibraryDLL0916::NewPageFromCanvasDC(int DPI, int Options)
{
	return DebenuPDFLibraryNewPageFromCanvasDC(instanceID, DPI, Options);
}

int DebenuPDFLibraryDLL0916::NewPages(int PageCount)
{
	return DebenuPDFLibraryNewPages(instanceID, PageCount);
}

int DebenuPDFLibraryDLL0916::NewPostScriptXObject(const std::wstring& PS)
{
	return DebenuPDFLibraryNewPostScriptXObject(instanceID, 
		WideStringParm(PS));
}

int DebenuPDFLibraryDLL0916::NewRGBAxialShader(const std::wstring& ShaderName, double StartX, double StartY, double StartRed, double StartGreen, double StartBlue, double EndX, double EndY, double EndRed, double EndGreen, double EndBlue, int Extend)
{
	return DebenuPDFLibraryNewRGBAxialShader(instanceID, 
		WideStringParm(ShaderName), StartX, StartY, StartRed, StartGreen, 
		StartBlue, EndX, EndY, EndRed, EndGreen, EndBlue, Extend);
}

int DebenuPDFLibraryDLL0916::NewSignProcessFromFile(const std::wstring& InputFile, const std::wstring& Password)
{
	return DebenuPDFLibraryNewSignProcessFromFile(instanceID, 
		WideStringParm(InputFile), WideStringParm(Password));
}

int DebenuPDFLibraryDLL0916::NewSignProcessFromString(const std::string& Source, const std::wstring& Password)
{
	int sb1;
	char* sp1 = StringParm(Source, sb1);
	int result;
	result = DebenuPDFLibraryNewSignProcessFromString(instanceID, sp1, 
		WideStringParm(Password));
	if (sb1 == 1) DebenuPDFLibraryReleaseBuffer(instanceID, sp1);
	return result;
}

int DebenuPDFLibraryDLL0916::NewStaticOutline(int Parent, const std::wstring& Title)
{
	return DebenuPDFLibraryNewStaticOutline(instanceID, Parent, 
		WideStringParm(Title));
}

int DebenuPDFLibraryDLL0916::NewTilingPatternFromCapturedPage(const std::wstring& PatternName, int CaptureID)
{
	return DebenuPDFLibraryNewTilingPatternFromCapturedPage(instanceID, 
		WideStringParm(PatternName), CaptureID);
}

int DebenuPDFLibraryDLL0916::NoEmbedFontListAdd(const std::wstring& FontName)
{
	return DebenuPDFLibraryNoEmbedFontListAdd(instanceID, 
		WideStringParm(FontName));
}

int DebenuPDFLibraryDLL0916::NoEmbedFontListCount()
{
	return DebenuPDFLibraryNoEmbedFontListCount(instanceID);
}

std::wstring DebenuPDFLibraryDLL0916::NoEmbedFontListGet(int Index)
{
	wchar_t* result;
	result = DebenuPDFLibraryNoEmbedFontListGet(instanceID, Index);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::NoEmbedFontListRemoveAll()
{
	return DebenuPDFLibraryNoEmbedFontListRemoveAll(instanceID);
}

int DebenuPDFLibraryDLL0916::NoEmbedFontListRemoveIndex(int Index)
{
	return DebenuPDFLibraryNoEmbedFontListRemoveIndex(instanceID, Index);
}

int DebenuPDFLibraryDLL0916::NoEmbedFontListRemoveName(const std::wstring& FontName)
{
	return DebenuPDFLibraryNoEmbedFontListRemoveName(instanceID, 
		WideStringParm(FontName));
}

int DebenuPDFLibraryDLL0916::NormalizePage(int NormalizeOptions)
{
	return DebenuPDFLibraryNormalizePage(instanceID, NormalizeOptions);
}

int DebenuPDFLibraryDLL0916::OpenOutline(int OutlineID)
{
	return DebenuPDFLibraryOpenOutline(instanceID, OutlineID);
}

int DebenuPDFLibraryDLL0916::OptionalContentGroupCount()
{
	return DebenuPDFLibraryOptionalContentGroupCount(instanceID);
}

int DebenuPDFLibraryDLL0916::OutlineCount()
{
	return DebenuPDFLibraryOutlineCount(instanceID);
}

std::wstring DebenuPDFLibraryDLL0916::OutlineTitle(int OutlineID)
{
	wchar_t* result;
	result = DebenuPDFLibraryOutlineTitle(instanceID, OutlineID);
	std::wstring resultStr(result, DebenuPDFLibraryStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::PageCount()
{
	return DebenuPDFLibraryPageCount(instanceID);
}

int DebenuPDFLibraryDLL0916::PageHasFontResources(int PageNumber)
{
	return DebenuPDFLibraryPageHasFontResources(instanceID, PageNumber);
}

double DebenuPDFLibraryDLL0916::PageHeight()
{
	return DebenuPDFLibraryPageHeight(instanceID);
}

int DebenuPDFLibraryDLL0916::PageJavaScriptAction(const std::wstring& ActionType, const std::wstring& JavaScript)
{
	return DebenuPDFLibraryPageJavaScriptAction(instanceID, 
		WideStringParm(ActionType), WideStringParm(JavaScript));
}

int DebenuPDFLibraryDLL0916::PageRotation()
{
	return DebenuPDFLibraryPageRotation(instanceID);
}

double DebenuPDFLibraryDLL0916::PageWidth()
{
	return DebenuPDFLibraryPageWidth(instanceID);
}

int DebenuPDFLibraryDLL0916::PrintDocument(const std::wstring& PrinterName, int StartPage, int EndPage, int Options)
{
	return DebenuPDFLibraryPrintDocument(instanceID, 
		WideStringParm(PrinterName), StartPage, EndPage, Options);
}

int DebenuPDFLibraryDLL0916::PrintDocumentToFile(const std::wstring& PrinterName, int StartPage, int EndPage, int Options, const std::wstring& FileName)
{
	return DebenuPDFLibraryPrintDocumentToFile(instanceID, 
		WideStringParm(PrinterName), StartPage, EndPage, Options, 
		WideStringParm(FileName));
}

int DebenuPDFLibraryDLL0916::PrintOptions(int PageScaling, int AutoRotateCenter, const std::wstring& Title)
{
	return DebenuPDFLibraryPrintOptions(instanceID, PageScaling, 
		AutoRotateCenter, WideStringParm(Title));
}

int DebenuPDFLibraryDLL0916::PrintPages(const std::wstring& PrinterName, const std::wstring& PageRanges, int Options)
{
	return DebenuPDFLibraryPrintPages(instanceID, 
		WideStringParm(PrinterName), WideStringParm(PageRanges), Options);
}

int DebenuPDFLibraryDLL0916::PrintPagesToFile(const std::wstring& PrinterName, const std::wstring& PageRanges, int Options, const std::wstring& FileName)
{
	return DebenuPDFLibraryPrintPagesToFile(instanceID, 
		WideStringParm(PrinterName), WideStringParm(PageRanges), Options, 
		WideStringParm(FileName));
}

int DebenuPDFLibraryDLL0916::ReleaseImage(int ImageID)
{
	return DebenuPDFLibraryReleaseImage(instanceID, ImageID);
}

int DebenuPDFLibraryDLL0916::ReleaseImageList(int ImageListID)
{
	return DebenuPDFLibraryReleaseImageList(instanceID, ImageListID);
}

int DebenuPDFLibraryDLL0916::ReleaseSignProcess(int SignProcessID)
{
	return DebenuPDFLibraryReleaseSignProcess(instanceID, SignProcessID);
}

int DebenuPDFLibraryDLL0916::ReleaseStringList(int StringListID)
{
	return DebenuPDFLibraryReleaseStringList(instanceID, StringListID);
}

int DebenuPDFLibraryDLL0916::ReleaseTextBlocks(int TextBlockListID)
{
	return DebenuPDFLibraryReleaseTextBlocks(instanceID, TextBlockListID);
}

int DebenuPDFLibraryDLL0916::RemoveAppearanceStream(int Index)
{
	return DebenuPDFLibraryRemoveAppearanceStream(instanceID, Index);
}

int DebenuPDFLibraryDLL0916::RemoveCustomInformation(const std::wstring& Key)
{
	return DebenuPDFLibraryRemoveCustomInformation(instanceID, 
		WideStringParm(Key));
}

int DebenuPDFLibraryDLL0916::RemoveDocument(int DocumentID)
{
	return DebenuPDFLibraryRemoveDocument(instanceID, DocumentID);
}

int DebenuPDFLibraryDLL0916::RemoveEmbeddedFile(int Index)
{
	return DebenuPDFLibraryRemoveEmbeddedFile(instanceID, Index);
}

int DebenuPDFLibraryDLL0916::RemoveFormFieldBackgroundColor(int Index)
{
	return DebenuPDFLibraryRemoveFormFieldBackgroundColor(instanceID, Index);
}

int DebenuPDFLibraryDLL0916::RemoveFormFieldBorderColor(int Index)
{
	return DebenuPDFLibraryRemoveFormFieldBorderColor(instanceID, Index);
}

int DebenuPDFLibraryDLL0916::RemoveGlobalJavaScript(const std::wstring& PackageName)
{
	return DebenuPDFLibraryRemoveGlobalJavaScript(instanceID, 
		WideStringParm(PackageName));
}

int DebenuPDFLibraryDLL0916::RemoveOpenAction()
{
	return DebenuPDFLibraryRemoveOpenAction(instanceID);
}

int DebenuPDFLibraryDLL0916::RemoveOutline(int OutlineID)
{
	return DebenuPDFLibraryRemoveOutline(instanceID, OutlineID);
}

int DebenuPDFLibraryDLL0916::RemoveSharedContentStreams()
{
	return DebenuPDFLibraryRemoveSharedContentStreams(instanceID);
}

int DebenuPDFLibraryDLL0916::RemoveStyle(const std::wstring& StyleName)
{
	return DebenuPDFLibraryRemoveStyle(instanceID, WideStringParm(StyleName));
}

int DebenuPDFLibraryDLL0916::RemoveUsageRights()
{
	return DebenuPDFLibraryRemoveUsageRights(instanceID);
}

int DebenuPDFLibraryDLL0916::RemoveXFAEntries(int Options)
{
	return DebenuPDFLibraryRemoveXFAEntries(instanceID, Options);
}

int DebenuPDFLibraryDLL0916::RenderDocumentToFile(int DPI, int StartPage, int EndPage, int Options, const std::wstring& FileName)
{
	return DebenuPDFLibraryRenderDocumentToFile(instanceID, DPI, StartPage, 
		EndPage, Options, WideStringParm(FileName));
}

int DebenuPDFLibraryDLL0916::RenderPageToDC(int DPI, int Page, HDC DC)
{
	return DebenuPDFLibraryRenderPageToDC(instanceID, DPI, Page, DC);
}

int DebenuPDFLibraryDLL0916::RenderPageToFile(int DPI, int Page, int Options, const std::wstring& FileName)
{
	return DebenuPDFLibraryRenderPageToFile(instanceID, DPI, Page, Options, 
		WideStringParm(FileName));
}

std::string DebenuPDFLibraryDLL0916::RenderPageToString(int DPI, int Page, int Options)
{
	char* result;
	result = DebenuPDFLibraryRenderPageToString(instanceID, DPI, Page, 
		Options);
	std::string resultStr(result, DebenuPDFLibraryAnsiStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::ReplaceFonts()
{
	return DebenuPDFLibraryReplaceFonts(instanceID);
}

int DebenuPDFLibraryDLL0916::ReplaceImage(int OriginalImageID, int NewImageID)
{
	return DebenuPDFLibraryReplaceImage(instanceID, OriginalImageID, 
		NewImageID);
}

int DebenuPDFLibraryDLL0916::ReplaceTag(const std::wstring& Tag, const std::wstring& NewValue)
{
	return DebenuPDFLibraryReplaceTag(instanceID, WideStringParm(Tag), 
		WideStringParm(NewValue));
}

int DebenuPDFLibraryDLL0916::RequestPrinterStatus(int StatusCommand)
{
	return DebenuPDFLibraryRequestPrinterStatus(instanceID, StatusCommand);
}

int DebenuPDFLibraryDLL0916::RetrieveCustomDataToFile(const std::wstring& Key, const std::wstring& FileName, int Location)
{
	return DebenuPDFLibraryRetrieveCustomDataToFile(instanceID, 
		WideStringParm(Key), WideStringParm(FileName), Location);
}

std::string DebenuPDFLibraryDLL0916::RetrieveCustomDataToString(const std::string& Key, int Location)
{
	int sb1;
	char* sp1 = StringParm(Key, sb1);
	char* result;
	result = DebenuPDFLibraryRetrieveCustomDataToString(instanceID, sp1, 
		Location);
	if (sb1 == 1) DebenuPDFLibraryReleaseBuffer(instanceID, sp1);
	std::string resultStr(result, DebenuPDFLibraryAnsiStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::ReverseImage(int Reset)
{
	return DebenuPDFLibraryReverseImage(instanceID, Reset);
}

int DebenuPDFLibraryDLL0916::RotatePage(int PageRotation)
{
	return DebenuPDFLibraryRotatePage(instanceID, PageRotation);
}

int DebenuPDFLibraryDLL0916::SaveFontToFile(const std::wstring& FileName)
{
	return DebenuPDFLibrarySaveFontToFile(instanceID, 
		WideStringParm(FileName));
}

int DebenuPDFLibraryDLL0916::SaveImageListItemDataToFile(int ImageListID, int ImageIndex, int Options, const std::wstring& ImageFileName)
{
	return DebenuPDFLibrarySaveImageListItemDataToFile(instanceID, 
		ImageListID, ImageIndex, Options, WideStringParm(ImageFileName));
}

int DebenuPDFLibraryDLL0916::SaveImageToFile(const std::wstring& FileName)
{
	return DebenuPDFLibrarySaveImageToFile(instanceID, 
		WideStringParm(FileName));
}

std::string DebenuPDFLibraryDLL0916::SaveImageToString()
{
	char* result;
	result = DebenuPDFLibrarySaveImageToString(instanceID);
	std::string resultStr(result, DebenuPDFLibraryAnsiStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::SaveState()
{
	return DebenuPDFLibrarySaveState(instanceID);
}

int DebenuPDFLibraryDLL0916::SaveStyle(const std::wstring& StyleName)
{
	return DebenuPDFLibrarySaveStyle(instanceID, WideStringParm(StyleName));
}

int DebenuPDFLibraryDLL0916::SaveToFile(const std::wstring& FileName)
{
	return DebenuPDFLibrarySaveToFile(instanceID, WideStringParm(FileName));
}

std::string DebenuPDFLibraryDLL0916::SaveToString()
{
	char* result;
	result = DebenuPDFLibrarySaveToString(instanceID);
	std::string resultStr(result, DebenuPDFLibraryAnsiStringResultLength(instanceID));
	return resultStr;
}

int DebenuPDFLibraryDLL0916::SecurityInfo(int SecurityItem)
{
	return DebenuPDFLibrarySecurityInfo(instanceID, SecurityItem);
}

int DebenuPDFLibraryDLL0916::SelectContentStream(int NewIndex)
{
	return DebenuPDFLibrarySelectContentStream(instanceID, NewIndex);
}

int DebenuPDFLibraryDLL0916::SelectDocument(int DocumentID)
{
	return DebenuPDFLibrarySelectDocument(instanceID, DocumentID);
}

int DebenuPDFLibraryDLL0916::SelectFont(int FontID)
{
	return DebenuPDFLibrarySelectFont(instanceID, FontID);
}

int DebenuPDFLibraryDLL0916::SelectImage(int ImageID)
{
	return DebenuPDFLibrarySelectImage(instanceID, ImageID);
}

int DebenuPDFLibraryDLL0916::SelectPage(int PageNumber)
{
	return DebenuPDFLibrarySelectPage(instanceID, PageNumber);
}

int DebenuPDFLibraryDLL0916::SelectRenderer(int RendererID)
{
	return DebenuPDFLibrarySelectRenderer(instanceID, RendererID);
}

int DebenuPDFLibraryDLL0916::SelectedDocument()
{
	return DebenuPDFLibrarySelectedDocument(instanceID);
}

int DebenuPDFLibraryDLL0916::SelectedFont()
{
	return DebenuPDFLibrarySelectedFont(instanceID);
}

int DebenuPDFLibraryDLL0916::SelectedImage()
{
	return DebenuPDFLibrarySelectedImage(instanceID);
}

int DebenuPDFLibraryDLL0916::SelectedPage()
{
	return DebenuPDFLibrarySelectedPage(instanceID);
}

int DebenuPDFLibraryDLL0916::SetActionURL(int ActionID, const std::wstring& NewURL)
{
	return DebenuPDFLibrarySetActionURL(instanceID, ActionID, 
		WideStringParm(NewURL));
}

int DebenuPDFLibraryDLL0916::SetAnnotBorderColor(int Index, double Red, double Green, double Blue)
{
	return DebenuPDFLibrarySetAnnotBorderColor(instanceID, Index, Red, Green, 
		Blue);
}

int DebenuPDFLibraryDLL0916::SetAnnotBorderStyle(int Index, double Width, int Style, double DashOn, double DashOff)
{
	return DebenuPDFLibrarySetAnnotBorderStyle(instanceID, Index, Width, 
		Style, DashOn, DashOff);
}

int DebenuPDFLibraryDLL0916::SetAnnotContents(int Index, const std::wstring& NewContents)
{
	return DebenuPDFLibrarySetAnnotContents(instanceID, Index, 
		WideStringParm(NewContents));
}

int DebenuPDFLibraryDLL0916::SetAnnotDblProperty(int Index, int Tag, double NewValue)
{
	return DebenuPDFLibrarySetAnnotDblProperty(instanceID, Index, Tag, 
		NewValue);
}

int DebenuPDFLibraryDLL0916::SetAnnotIntProperty(int Index, int Tag, int NewValue)
{
	return DebenuPDFLibrarySetAnnotIntProperty(instanceID, Index, Tag, 
		NewValue);
}

int DebenuPDFLibraryDLL0916::SetAnnotQuadPoints(int Index, int QuadNumber, double X1, double Y1, double X2, double Y2, double X3, double Y3, double X4, double Y4)
{
	return DebenuPDFLibrarySetAnnotQuadPoints(instanceID, Index, QuadNumber, 
		X1, Y1, X2, Y2, X3, Y3, X4, Y4);
}

int DebenuPDFLibraryDLL0916::SetAnnotRect(int Index, double Left, double Top, double Width, double Height)
{
	return DebenuPDFLibrarySetAnnotRect(instanceID, Index, Left, Top, Width, 
		Height);
}

int DebenuPDFLibraryDLL0916::SetAnnotStrProperty(int Index, int Tag, const std::wstring& NewValue)
{
	return DebenuPDFLibrarySetAnnotStrProperty(instanceID, Index, Tag, 
		WideStringParm(NewValue));
}

int DebenuPDFLibraryDLL0916::SetAnsiMode(int NewAnsiMode)
{
	return DebenuPDFLibrarySetAnsiMode(instanceID, NewAnsiMode);
}

int DebenuPDFLibraryDLL0916::SetBaseURL(const std::wstring& NewBaseURL)
{
	return DebenuPDFLibrarySetBaseURL(instanceID, WideStringParm(NewBaseURL));
}

int DebenuPDFLibraryDLL0916::SetBlendMode(int BlendMode)
{
	return DebenuPDFLibrarySetBlendMode(instanceID, BlendMode);
}

int DebenuPDFLibraryDLL0916::SetBreakString(const std::wstring& NewBreakString)
{
	return DebenuPDFLibrarySetBreakString(instanceID, 
		WideStringParm(NewBreakString));
}

int DebenuPDFLibraryDLL0916::SetCSDictEPSG(int CSDictID, int NewEPSG)
{
	return DebenuPDFLibrarySetCSDictEPSG(instanceID, CSDictID, NewEPSG);
}

int DebenuPDFLibraryDLL0916::SetCSDictType(int CSDictID, int NewDictType)
{
	return DebenuPDFLibrarySetCSDictType(instanceID, CSDictID, NewDictType);
}

int DebenuPDFLibraryDLL0916::SetCSDictWKT(int CSDictID, const std::wstring& NewWKT)
{
	return DebenuPDFLibrarySetCSDictWKT(instanceID, CSDictID, 
		WideStringParm(NewWKT));
}

int DebenuPDFLibraryDLL0916::SetCairoFileName(const std::wstring& FileName)
{
	return DebenuPDFLibrarySetCairoFileName(instanceID, 
		WideStringParm(FileName));
}

int DebenuPDFLibraryDLL0916::SetCapturedPageOptional(int CaptureID, int OptionalContentGroupID)
{
	return DebenuPDFLibrarySetCapturedPageOptional(instanceID, CaptureID, 
		OptionalContentGroupID);
}

int DebenuPDFLibraryDLL0916::SetCapturedPageTransparencyGroup(int CaptureID, int CS, int Isolate, int Knockout)
{
	return DebenuPDFLibrarySetCapturedPageTransparencyGroup(instanceID, 
		CaptureID, CS, Isolate, Knockout);
}

int DebenuPDFLibraryDLL0916::SetCatalogInformation(const std::wstring& Key, const std::wstring& NewValue)
{
	return DebenuPDFLibrarySetCatalogInformation(instanceID, 
		WideStringParm(Key), WideStringParm(NewValue));
}

int DebenuPDFLibraryDLL0916::SetCharWidth(int CharCode, int NewWidth)
{
	return DebenuPDFLibrarySetCharWidth(instanceID, CharCode, NewWidth);
}

int DebenuPDFLibraryDLL0916::SetClippingPath()
{
	return DebenuPDFLibrarySetClippingPath(instanceID);
}

int DebenuPDFLibraryDLL0916::SetClippingPathEvenOdd()
{
	return DebenuPDFLibrarySetClippingPathEvenOdd(instanceID);
}

int DebenuPDFLibraryDLL0916::SetCompatibility(int CompatibilityItem, int CompatibilityMode)
{
	return DebenuPDFLibrarySetCompatibility(instanceID, CompatibilityItem, 
		CompatibilityMode);
}

int DebenuPDFLibraryDLL0916::SetContentStreamFromString(const std::string& Source)
{
	int sb1;
	char* sp1 = StringParm(Source, sb1);
	int result;
	result = DebenuPDFLibrarySetContentStreamFromString(instanceID, sp1);
	if (sb1 == 1) DebenuPDFLibraryReleaseBuffer(instanceID, sp1);
	return result;
}

int DebenuPDFLibraryDLL0916::SetContentStreamOptional(int OptionalContentGroupID)
{
	return DebenuPDFLibrarySetContentStreamOptional(instanceID, 
		OptionalContentGroupID);
}

int DebenuPDFLibraryDLL0916::SetCropBox(double Left, double Top, double Width, double Height)
{
	return DebenuPDFLibrarySetCropBox(instanceID, Left, Top, Width, Height);
}

int DebenuPDFLibraryDLL0916::SetCustomInformation(const std::wstring& Key, const std::wstring& NewValue)
{
	return DebenuPDFLibrarySetCustomInformation(instanceID, 
		WideStringParm(Key), WideStringParm(NewValue));
}

int DebenuPDFLibraryDLL0916::SetCustomLineDash(const std::wstring& DashPattern, double DashPhase)
{
	return DebenuPDFLibrarySetCustomLineDash(instanceID, 
		WideStringParm(DashPattern), DashPhase);
}

int DebenuPDFLibraryDLL0916::SetDestProperties(int DestID, int Zoom, int DestType, double Left, double Top, double Right, double Bottom)
{
	return DebenuPDFLibrarySetDestProperties(instanceID, DestID, Zoom, 
		DestType, Left, Top, Right, Bottom);
}

int DebenuPDFLibraryDLL0916::SetDestValue(int DestID, int ValueKey, double NewValue)
{
	return DebenuPDFLibrarySetDestValue(instanceID, DestID, ValueKey, 
		NewValue);
}

int DebenuPDFLibraryDLL0916::SetDocumentMetadata(const std::wstring& XMP)
{
	return DebenuPDFLibrarySetDocumentMetadata(instanceID, 
		WideStringParm(XMP));
}

int DebenuPDFLibraryDLL0916::SetEmbeddedFileStrProperty(int Index, int Tag, const std::wstring& NewValue)
{
	return DebenuPDFLibrarySetEmbeddedFileStrProperty(instanceID, Index, Tag, 
		WideStringParm(NewValue));
}

int DebenuPDFLibraryDLL0916::SetFillColor(double Red, double Green, double Blue)
{
	return DebenuPDFLibrarySetFillColor(instanceID, Red, Green, Blue);
}

int DebenuPDFLibraryDLL0916::SetFillColorCMYK(double C, double M, double Y, double K)
{
	return DebenuPDFLibrarySetFillColorCMYK(instanceID, C, M, Y, K);
}

int DebenuPDFLibraryDLL0916::SetFillColorSep(const std::wstring& ColorName, double Tint)
{
	return DebenuPDFLibrarySetFillColorSep(instanceID, 
		WideStringParm(ColorName), Tint);
}

int DebenuPDFLibraryDLL0916::SetFillShader(const std::wstring& ShaderName)
{
	return DebenuPDFLibrarySetFillShader(instanceID, 
		WideStringParm(ShaderName));
}

int DebenuPDFLibraryDLL0916::SetFillTilingPattern(const std::wstring& PatternName)
{
	return DebenuPDFLibrarySetFillTilingPattern(instanceID, 
		WideStringParm(PatternName));
}

int DebenuPDFLibraryDLL0916::SetFindImagesMode(int NewFindImagesMode)
{
	return DebenuPDFLibrarySetFindImagesMode(instanceID, NewFindImagesMode);
}

int DebenuPDFLibraryDLL0916::SetFontEncoding(int Encoding)
{
	return DebenuPDFLibrarySetFontEncoding(instanceID, Encoding);
}

int DebenuPDFLibraryDLL0916::SetFontFlags(int Fixed, int Serif, int Symbolic, int Script, int Italic, int AllCap, int SmallCap, int ForceBold)
{
	return DebenuPDFLibrarySetFontFlags(instanceID, Fixed, Serif, Symbolic, 
		Script, Italic, AllCap, SmallCap, ForceBold);
}

int DebenuPDFLibraryDLL0916::SetFormFieldAlignment(int Index, int Alignment)
{
	return DebenuPDFLibrarySetFormFieldAlignment(instanceID, Index, 
		Alignment);
}

int DebenuPDFLibraryDLL0916::SetFormFieldAnnotFlags(int Index, int NewFlags)
{
	return DebenuPDFLibrarySetFormFieldAnnotFlags(instanceID, Index, 
		NewFlags);
}

int DebenuPDFLibraryDLL0916::SetFormFieldBackgroundColor(int Index, double Red, double Green, double Blue)
{
	return DebenuPDFLibrarySetFormFieldBackgroundColor(instanceID, Index, 
		Red, Green, Blue);
}

int DebenuPDFLibraryDLL0916::SetFormFieldBackgroundColorCMYK(int Index, double C, double M, double Y, double K)
{
	return DebenuPDFLibrarySetFormFieldBackgroundColorCMYK(instanceID, Index, 
		C, M, Y, K);
}

int DebenuPDFLibraryDLL0916::SetFormFieldBackgroundColorGray(int Index, double Gray)
{
	return DebenuPDFLibrarySetFormFieldBackgroundColorGray(instanceID, Index, 
		Gray);
}

int DebenuPDFLibraryDLL0916::SetFormFieldBackgroundColorSep(int Index, const std::wstring& ColorName, double Tint)
{
	return DebenuPDFLibrarySetFormFieldBackgroundColorSep(instanceID, Index, 
		WideStringParm(ColorName), Tint);
}

int DebenuPDFLibraryDLL0916::SetFormFieldBorderColor(int Index, double Red, double Green, double Blue)
{
	return DebenuPDFLibrarySetFormFieldBorderColor(instanceID, Index, Red, 
		Green, Blue);
}

int DebenuPDFLibraryDLL0916::SetFormFieldBorderColorCMYK(int Index, double C, double M, double Y, double K)
{
	return DebenuPDFLibrarySetFormFieldBorderColorCMYK(instanceID, Index, C, 
		M, Y, K);
}

int DebenuPDFLibraryDLL0916::SetFormFieldBorderColorGray(int Index, double Gray)
{
	return DebenuPDFLibrarySetFormFieldBorderColorGray(instanceID, Index, 
		Gray);
}

int DebenuPDFLibraryDLL0916::SetFormFieldBorderColorSep(int Index, const std::wstring& ColorName, double Tint)
{
	return DebenuPDFLibrarySetFormFieldBorderColorSep(instanceID, Index, 
		WideStringParm(ColorName), Tint);
}

int DebenuPDFLibraryDLL0916::SetFormFieldBorderStyle(int Index, double Width, int Style, double DashOn, double DashOff)
{
	return DebenuPDFLibrarySetFormFieldBorderStyle(instanceID, Index, Width, 
		Style, DashOn, DashOff);
}

int DebenuPDFLibraryDLL0916::SetFormFieldBounds(int Index, double Left, double Top, double Width, double Height)
{
	return DebenuPDFLibrarySetFormFieldBounds(instanceID, Index, Left, Top, 
		Width, Height);
}

int DebenuPDFLibraryDLL0916::SetFormFieldCalcOrder(int Index, int Order)
{
	return DebenuPDFLibrarySetFormFieldCalcOrder(instanceID, Index, Order);
}

int DebenuPDFLibraryDLL0916::SetFormFieldCaption(int Index, const std::wstring& NewCaption)
{
	return DebenuPDFLibrarySetFormFieldCaption(instanceID, Index, 
		WideStringParm(NewCaption));
}

int DebenuPDFLibraryDLL0916::SetFormFieldCheckStyle(int Index, int CheckStyle, int Position)
{
	return DebenuPDFLibrarySetFormFieldCheckStyle(instanceID, Index, 
		CheckStyle, Position);
}

int DebenuPDFLibraryDLL0916::SetFormFieldChildTitle(int Index, const std::wstring& NewTitle)
{
	return DebenuPDFLibrarySetFormFieldChildTitle(instanceID, Index, 
		WideStringParm(NewTitle));
}

int DebenuPDFLibraryDLL0916::SetFormFieldChoiceSub(int Index, int SubIndex, const std::wstring& SubName, const std::wstring& DisplayName)
{
	return DebenuPDFLibrarySetFormFieldChoiceSub(instanceID, Index, SubIndex, 
		WideStringParm(SubName), WideStringParm(DisplayName));
}

int DebenuPDFLibraryDLL0916::SetFormFieldChoiceType(int Index, int ChoiceType)
{
	return DebenuPDFLibrarySetFormFieldChoiceType(instanceID, Index, 
		ChoiceType);
}

int DebenuPDFLibraryDLL0916::SetFormFieldColor(int Index, double Red, double Green, double Blue)
{
	return DebenuPDFLibrarySetFormFieldColor(instanceID, Index, Red, Green, 
		Blue);
}

int DebenuPDFLibraryDLL0916::SetFormFieldColorCMYK(int Index, double C, double M, double Y, double K)
{
	return DebenuPDFLibrarySetFormFieldColorCMYK(instanceID, Index, C, M, Y, 
		K);
}

int DebenuPDFLibraryDLL0916::SetFormFieldColorSep(int Index, const std::wstring& ColorName, double Tint)
{
	return DebenuPDFLibrarySetFormFieldColorSep(instanceID, Index, 
		WideStringParm(ColorName), Tint);
}

int DebenuPDFLibraryDLL0916::SetFormFieldComb(int Index, int Comb)
{
	return DebenuPDFLibrarySetFormFieldComb(instanceID, Index, Comb);
}

int DebenuPDFLibraryDLL0916::SetFormFieldDefaultValue(int Index, const std::wstring& NewDefaultValue)
{
	return DebenuPDFLibrarySetFormFieldDefaultValue(instanceID, Index, 
		WideStringParm(NewDefaultValue));
}

int DebenuPDFLibraryDLL0916::SetFormFieldDescription(int Index, const std::wstring& NewDescription)
{
	return DebenuPDFLibrarySetFormFieldDescription(instanceID, Index, 
		WideStringParm(NewDescription));
}

int DebenuPDFLibraryDLL0916::SetFormFieldFlags(int Index, int NewFlags)
{
	return DebenuPDFLibrarySetFormFieldFlags(instanceID, Index, NewFlags);
}

int DebenuPDFLibraryDLL0916::SetFormFieldFont(int Index, int FontIndex)
{
	return DebenuPDFLibrarySetFormFieldFont(instanceID, Index, FontIndex);
}

int DebenuPDFLibraryDLL0916::SetFormFieldHighlightMode(int Index, int NewMode)
{
	return DebenuPDFLibrarySetFormFieldHighlightMode(instanceID, Index, 
		NewMode);
}

int DebenuPDFLibraryDLL0916::SetFormFieldIcon(int Index, int IconType, int CaptureID)
{
	return DebenuPDFLibrarySetFormFieldIcon(instanceID, Index, IconType, 
		CaptureID);
}

int DebenuPDFLibraryDLL0916::SetFormFieldIconStyle(int Index, int Placement, int Scale, int ScaleType, int HorizontalShift, int VerticalShift)
{
	return DebenuPDFLibrarySetFormFieldIconStyle(instanceID, Index, 
		Placement, Scale, ScaleType, HorizontalShift, VerticalShift);
}

int DebenuPDFLibraryDLL0916::SetFormFieldMaxLen(int Index, int NewMaxLen)
{
	return DebenuPDFLibrarySetFormFieldMaxLen(instanceID, Index, NewMaxLen);
}

int DebenuPDFLibraryDLL0916::SetFormFieldNoExport(int Index, int NoExport)
{
	return DebenuPDFLibrarySetFormFieldNoExport(instanceID, Index, NoExport);
}

int DebenuPDFLibraryDLL0916::SetFormFieldOptional(int Index, int OptionalContentGroupID)
{
	return DebenuPDFLibrarySetFormFieldOptional(instanceID, Index, 
		OptionalContentGroupID);
}

int DebenuPDFLibraryDLL0916::SetFormFieldPage(int Index, int NewPage)
{
	return DebenuPDFLibrarySetFormFieldPage(instanceID, Index, NewPage);
}

int DebenuPDFLibraryDLL0916::SetFormFieldPrintable(int Index, int Printable)
{
	return DebenuPDFLibrarySetFormFieldPrintable(instanceID, Index, 
		Printable);
}

int DebenuPDFLibraryDLL0916::SetFormFieldReadOnly(int Index, int ReadOnly)
{
	return DebenuPDFLibrarySetFormFieldReadOnly(instanceID, Index, ReadOnly);
}

int DebenuPDFLibraryDLL0916::SetFormFieldRequired(int Index, int Required)
{
	return DebenuPDFLibrarySetFormFieldRequired(instanceID, Index, Required);
}

int DebenuPDFLibraryDLL0916::SetFormFieldResetAction(int Index, const std::wstring& ActionType)
{
	return DebenuPDFLibrarySetFormFieldResetAction(instanceID, Index, 
		WideStringParm(ActionType));
}

int DebenuPDFLibraryDLL0916::SetFormFieldRichTextString(int Index, const std::wstring& Key, const std::wstring& NewValue)
{
	return DebenuPDFLibrarySetFormFieldRichTextString(instanceID, Index, 
		WideStringParm(Key), WideStringParm(NewValue));
}

int DebenuPDFLibraryDLL0916::SetFormFieldRotation(int Index, int Angle)
{
	return DebenuPDFLibrarySetFormFieldRotation(instanceID, Index, Angle);
}

int DebenuPDFLibraryDLL0916::SetFormFieldSignatureImage(int Index, int ImageID, int Options)
{
	return DebenuPDFLibrarySetFormFieldSignatureImage(instanceID, Index, 
		ImageID, Options);
}

int DebenuPDFLibraryDLL0916::SetFormFieldStandardFont(int Index, int StandardFontID)
{
	return DebenuPDFLibrarySetFormFieldStandardFont(instanceID, Index, 
		StandardFontID);
}

int DebenuPDFLibraryDLL0916::SetFormFieldSubmitAction(int Index, const std::wstring& ActionType, const std::wstring& Link)
{
	return DebenuPDFLibrarySetFormFieldSubmitAction(instanceID, Index, 
		WideStringParm(ActionType), WideStringParm(Link));
}

int DebenuPDFLibraryDLL0916::SetFormFieldSubmitActionEx(int Index, const std::wstring& ActionType, const std::wstring& Link, int Flags)
{
	return DebenuPDFLibrarySetFormFieldSubmitActionEx(instanceID, Index, 
		WideStringParm(ActionType), WideStringParm(Link), Flags);
}

int DebenuPDFLibraryDLL0916::SetFormFieldTabOrder(int Index, int Order)
{
	return DebenuPDFLibrarySetFormFieldTabOrder(instanceID, Index, Order);
}

int DebenuPDFLibraryDLL0916::SetFormFieldTextFlags(int Index, int Multiline, int Password, int FileSelect, int DoNotSpellCheck, int DoNotScroll)
{
	return DebenuPDFLibrarySetFormFieldTextFlags(instanceID, Index, 
		Multiline, Password, FileSelect, DoNotSpellCheck, DoNotScroll);
}

int DebenuPDFLibraryDLL0916::SetFormFieldTextSize(int Index, double NewTextSize)
{
	return DebenuPDFLibrarySetFormFieldTextSize(instanceID, Index, 
		NewTextSize);
}

int DebenuPDFLibraryDLL0916::SetFormFieldValue(int Index, const std::wstring& NewValue)
{
	return DebenuPDFLibrarySetFormFieldValue(instanceID, Index, 
		WideStringParm(NewValue));
}

int DebenuPDFLibraryDLL0916::SetFormFieldValueByTitle(const std::wstring& Title, const std::wstring& NewValue)
{
	return DebenuPDFLibrarySetFormFieldValueByTitle(instanceID, 
		WideStringParm(Title), WideStringParm(NewValue));
}

int DebenuPDFLibraryDLL0916::SetFormFieldVisible(int Index, int Visible)
{
	return DebenuPDFLibrarySetFormFieldVisible(instanceID, Index, Visible);
}

int DebenuPDFLibraryDLL0916::SetGDIPlusFileName(const std::wstring& DLLFileName)
{
	return DebenuPDFLibrarySetGDIPlusFileName(instanceID, 
		WideStringParm(DLLFileName));
}

int DebenuPDFLibraryDLL0916::SetGDIPlusOptions(int OptionID, int NewValue)
{
	return DebenuPDFLibrarySetGDIPlusOptions(instanceID, OptionID, NewValue);
}

int DebenuPDFLibraryDLL0916::SetHTMLBoldFont(const std::wstring& FontSet, int FontID)
{
	return DebenuPDFLibrarySetHTMLBoldFont(instanceID, 
		WideStringParm(FontSet), FontID);
}

int DebenuPDFLibraryDLL0916::SetHTMLBoldItalicFont(const std::wstring& FontSet, int FontID)
{
	return DebenuPDFLibrarySetHTMLBoldItalicFont(instanceID, 
		WideStringParm(FontSet), FontID);
}

int DebenuPDFLibraryDLL0916::SetHTMLItalicFont(const std::wstring& FontSet, int FontID)
{
	return DebenuPDFLibrarySetHTMLItalicFont(instanceID, 
		WideStringParm(FontSet), FontID);
}

int DebenuPDFLibraryDLL0916::SetHTMLNormalFont(const std::wstring& FontSet, int FontID)
{
	return DebenuPDFLibrarySetHTMLNormalFont(instanceID, 
		WideStringParm(FontSet), FontID);
}

int DebenuPDFLibraryDLL0916::SetHeaderCommentsFromString(const std::string& Source)
{
	int sb1;
	char* sp1 = StringParm(Source, sb1);
	int result;
	result = DebenuPDFLibrarySetHeaderCommentsFromString(instanceID, sp1);
	if (sb1 == 1) DebenuPDFLibraryReleaseBuffer(instanceID, sp1);
	return result;
}

int DebenuPDFLibraryDLL0916::SetImageAsMask(int MaskType)
{
	return DebenuPDFLibrarySetImageAsMask(instanceID, MaskType);
}

int DebenuPDFLibraryDLL0916::SetImageMask(double FromRed, double FromGreen, double FromBlue, double ToRed, double ToGreen, double ToBlue)
{
	return DebenuPDFLibrarySetImageMask(instanceID, FromRed, FromGreen, 
		FromBlue, ToRed, ToGreen, ToBlue);
}

int DebenuPDFLibraryDLL0916::SetImageMaskCMYK(double FromC, double FromM, double FromY, double FromK, double ToC, double ToM, double ToY, double ToK)
{
	return DebenuPDFLibrarySetImageMaskCMYK(instanceID, FromC, FromM, FromY, 
		FromK, ToC, ToM, ToY, ToK);
}

int DebenuPDFLibraryDLL0916::SetImageMaskFromImage(int ImageID)
{
	return DebenuPDFLibrarySetImageMaskFromImage(instanceID, ImageID);
}

int DebenuPDFLibraryDLL0916::SetImageOptional(int OptionalContentGroupID)
{
	return DebenuPDFLibrarySetImageOptional(instanceID, 
		OptionalContentGroupID);
}

int DebenuPDFLibraryDLL0916::SetImageResolution(int Horizontal, int Vertical, int Units)
{
	return DebenuPDFLibrarySetImageResolution(instanceID, Horizontal, 
		Vertical, Units);
}

int DebenuPDFLibraryDLL0916::SetInformation(int Key, const std::wstring& NewValue)
{
	return DebenuPDFLibrarySetInformation(instanceID, Key, 
		WideStringParm(NewValue));
}

int DebenuPDFLibraryDLL0916::SetJPEGQuality(int Quality)
{
	return DebenuPDFLibrarySetJPEGQuality(instanceID, Quality);
}

int DebenuPDFLibraryDLL0916::SetJavaScriptMode(int JSMode)
{
	return DebenuPDFLibrarySetJavaScriptMode(instanceID, JSMode);
}

int DebenuPDFLibraryDLL0916::SetKerning(const std::wstring& CharPair, int Adjustment)
{
	return DebenuPDFLibrarySetKerning(instanceID, WideStringParm(CharPair), 
		Adjustment);
}

int DebenuPDFLibraryDLL0916::SetLineCap(int LineCap)
{
	return DebenuPDFLibrarySetLineCap(instanceID, LineCap);
}

int DebenuPDFLibraryDLL0916::SetLineColor(double Red, double Green, double Blue)
{
	return DebenuPDFLibrarySetLineColor(instanceID, Red, Green, Blue);
}

int DebenuPDFLibraryDLL0916::SetLineColorCMYK(double C, double M, double Y, double K)
{
	return DebenuPDFLibrarySetLineColorCMYK(instanceID, C, M, Y, K);
}

int DebenuPDFLibraryDLL0916::SetLineColorSep(const std::wstring& ColorName, double Tint)
{
	return DebenuPDFLibrarySetLineColorSep(instanceID, 
		WideStringParm(ColorName), Tint);
}

int DebenuPDFLibraryDLL0916::SetLineDash(double DashOn, double DashOff)
{
	return DebenuPDFLibrarySetLineDash(instanceID, DashOn, DashOff);
}

int DebenuPDFLibraryDLL0916::SetLineDashEx(const std::wstring& DashValues)
{
	return DebenuPDFLibrarySetLineDashEx(instanceID, 
		WideStringParm(DashValues));
}

int DebenuPDFLibraryDLL0916::SetLineJoin(int LineJoin)
{
	return DebenuPDFLibrarySetLineJoin(instanceID, LineJoin);
}

int DebenuPDFLibraryDLL0916::SetLineShader(const std::wstring& ShaderName)
{
	return DebenuPDFLibrarySetLineShader(instanceID, 
		WideStringParm(ShaderName));
}

int DebenuPDFLibraryDLL0916::SetLineWidth(double LineWidth)
{
	return DebenuPDFLibrarySetLineWidth(instanceID, LineWidth);
}

int DebenuPDFLibraryDLL0916::SetMarkupAnnotStyle(int Index, double Red, double Green, double Blue, double Transparency)
{
	return DebenuPDFLibrarySetMarkupAnnotStyle(instanceID, Index, Red, Green, 
		Blue, Transparency);
}

int DebenuPDFLibraryDLL0916::SetMeasureDictBoundsCount(int MeasureDictID, int NewCount)
{
	return DebenuPDFLibrarySetMeasureDictBoundsCount(instanceID, 
		MeasureDictID, NewCount);
}

int DebenuPDFLibraryDLL0916::SetMeasureDictBoundsItem(int MeasureDictID, int ItemIndex, double NewValue)
{
	return DebenuPDFLibrarySetMeasureDictBoundsItem(instanceID, 
		MeasureDictID, ItemIndex, NewValue);
}

int DebenuPDFLibraryDLL0916::SetMeasureDictCoordinateSystem(int MeasureDictID, int CoordinateSystemID)
{
	return DebenuPDFLibrarySetMeasureDictCoordinateSystem(instanceID, 
		MeasureDictID, CoordinateSystemID);
}

int DebenuPDFLibraryDLL0916::SetMeasureDictGPTSCount(int MeasureDictID, int NewCount)
{
	return DebenuPDFLibrarySetMeasureDictGPTSCount(instanceID, MeasureDictID, 
		NewCount);
}

int DebenuPDFLibraryDLL0916::SetMeasureDictGPTSItem(int MeasureDictID, int ItemIndex, double NewValue)
{
	return DebenuPDFLibrarySetMeasureDictGPTSItem(instanceID, MeasureDictID, 
		ItemIndex, NewValue);
}

int DebenuPDFLibraryDLL0916::SetMeasureDictLPTSCount(int MeasureDictID, int NewCount)
{
	return DebenuPDFLibrarySetMeasureDictLPTSCount(instanceID, MeasureDictID, 
		NewCount);
}

int DebenuPDFLibraryDLL0916::SetMeasureDictLPTSItem(int MeasureDictID, int ItemIndex, double NewValue)
{
	return DebenuPDFLibrarySetMeasureDictLPTSItem(instanceID, MeasureDictID, 
		ItemIndex, NewValue);
}

int DebenuPDFLibraryDLL0916::SetMeasureDictPDU(int MeasureDictID, int LinearUnit, int AreaUnit, int AngularUnit)
{
	return DebenuPDFLibrarySetMeasureDictPDU(instanceID, MeasureDictID, 
		LinearUnit, AreaUnit, AngularUnit);
}

int DebenuPDFLibraryDLL0916::SetMeasurementUnits(int MeasurementUnits)
{
	return DebenuPDFLibrarySetMeasurementUnits(instanceID, MeasurementUnits);
}

int DebenuPDFLibraryDLL0916::SetNeedAppearances(int NewValue)
{
	return DebenuPDFLibrarySetNeedAppearances(instanceID, NewValue);
}

int DebenuPDFLibraryDLL0916::SetObjectFromString(int ObjectNumber, const std::string& Source)
{
	int sb1;
	char* sp1 = StringParm(Source, sb1);
	int result;
	result = DebenuPDFLibrarySetObjectFromString(instanceID, ObjectNumber, 
		sp1);
	if (sb1 == 1) DebenuPDFLibraryReleaseBuffer(instanceID, sp1);
	return result;
}

int DebenuPDFLibraryDLL0916::SetOpenActionDestination(int OpenPage, int Zoom)
{
	return DebenuPDFLibrarySetOpenActionDestination(instanceID, OpenPage, 
		Zoom);
}

int DebenuPDFLibraryDLL0916::SetOpenActionDestinationFull(int OpenPage, int Zoom, int DestType, double Left, double Top, double Right, double Bottom)
{
	return DebenuPDFLibrarySetOpenActionDestinationFull(instanceID, OpenPage, 
		Zoom, DestType, Left, Top, Right, Bottom);
}

int DebenuPDFLibraryDLL0916::SetOpenActionJavaScript(const std::wstring& JavaScript)
{
	return DebenuPDFLibrarySetOpenActionJavaScript(instanceID, 
		WideStringParm(JavaScript));
}

int DebenuPDFLibraryDLL0916::SetOpenActionMenu(const std::wstring& MenuItem)
{
	return DebenuPDFLibrarySetOpenActionMenu(instanceID, 
		WideStringParm(MenuItem));
}

int DebenuPDFLibraryDLL0916::SetOptionalContentConfigLocked(int OptionalContentConfigID, int OptionalContentGroupID, int NewLocked)
{
	return DebenuPDFLibrarySetOptionalContentConfigLocked(instanceID, 
		OptionalContentConfigID, OptionalContentGroupID, NewLocked);
}

int DebenuPDFLibraryDLL0916::SetOptionalContentConfigState(int OptionalContentConfigID, int OptionalContentGroupID, int NewState)
{
	return DebenuPDFLibrarySetOptionalContentConfigState(instanceID, 
		OptionalContentConfigID, OptionalContentGroupID, NewState);
}

int DebenuPDFLibraryDLL0916::SetOptionalContentGroupName(int OptionalContentGroupID, const std::wstring& NewGroupName)
{
	return DebenuPDFLibrarySetOptionalContentGroupName(instanceID, 
		OptionalContentGroupID, WideStringParm(NewGroupName));
}

int DebenuPDFLibraryDLL0916::SetOptionalContentGroupPrintable(int OptionalContentGroupID, int Printable)
{
	return DebenuPDFLibrarySetOptionalContentGroupPrintable(instanceID, 
		OptionalContentGroupID, Printable);
}

int DebenuPDFLibraryDLL0916::SetOptionalContentGroupVisible(int OptionalContentGroupID, int Visible)
{
	return DebenuPDFLibrarySetOptionalContentGroupVisible(instanceID, 
		OptionalContentGroupID, Visible);
}

int DebenuPDFLibraryDLL0916::SetOrigin(int Origin)
{
	return DebenuPDFLibrarySetOrigin(instanceID, Origin);
}

int DebenuPDFLibraryDLL0916::SetOutlineColor(int OutlineID, double Red, double Green, double Blue)
{
	return DebenuPDFLibrarySetOutlineColor(instanceID, OutlineID, Red, Green, 
		Blue);
}

int DebenuPDFLibraryDLL0916::SetOutlineDestination(int OutlineID, int DestPage, double DestPosition)
{
	return DebenuPDFLibrarySetOutlineDestination(instanceID, OutlineID, 
		DestPage, DestPosition);
}

int DebenuPDFLibraryDLL0916::SetOutlineDestinationFull(int OutlineID, int DestPage, int Zoom, int DestType, double Left, double Top, double Right, double Bottom)
{
	return DebenuPDFLibrarySetOutlineDestinationFull(instanceID, OutlineID, 
		DestPage, Zoom, DestType, Left, Top, Right, Bottom);
}

int DebenuPDFLibraryDLL0916::SetOutlineDestinationZoom(int OutlineID, int DestPage, double DestPosition, int Zoom)
{
	return DebenuPDFLibrarySetOutlineDestinationZoom(instanceID, OutlineID, 
		DestPage, DestPosition, Zoom);
}

int DebenuPDFLibraryDLL0916::SetOutlineJavaScript(int OutlineID, const std::wstring& JavaScript)
{
	return DebenuPDFLibrarySetOutlineJavaScript(instanceID, OutlineID, 
		WideStringParm(JavaScript));
}

int DebenuPDFLibraryDLL0916::SetOutlineNamedDestination(int OutlineID, const std::wstring& DestName)
{
	return DebenuPDFLibrarySetOutlineNamedDestination(instanceID, OutlineID, 
		WideStringParm(DestName));
}

int DebenuPDFLibraryDLL0916::SetOutlineOpenFile(int OutlineID, const std::wstring& FileName)
{
	return DebenuPDFLibrarySetOutlineOpenFile(instanceID, OutlineID, 
		WideStringParm(FileName));
}

int DebenuPDFLibraryDLL0916::SetOutlineRemoteDestination(int OutlineID, const std::wstring& FileName, int OpenPage, int Zoom, int DestType, double PntLeft, double PntTop, double PntRight, double PntBottom, int NewWindow)
{
	return DebenuPDFLibrarySetOutlineRemoteDestination(instanceID, OutlineID, 
		WideStringParm(FileName), OpenPage, Zoom, DestType, PntLeft, PntTop, 
		PntRight, PntBottom, NewWindow);
}

int DebenuPDFLibraryDLL0916::SetOutlineStyle(int OutlineID, int SetItalic, int SetBold)
{
	return DebenuPDFLibrarySetOutlineStyle(instanceID, OutlineID, SetItalic, 
		SetBold);
}

int DebenuPDFLibraryDLL0916::SetOutlineTitle(int OutlineID, const std::wstring& NewTitle)
{
	return DebenuPDFLibrarySetOutlineTitle(instanceID, OutlineID, 
		WideStringParm(NewTitle));
}

int DebenuPDFLibraryDLL0916::SetOutlineWebLink(int OutlineID, const std::wstring& Link)
{
	return DebenuPDFLibrarySetOutlineWebLink(instanceID, OutlineID, 
		WideStringParm(Link));
}

int DebenuPDFLibraryDLL0916::SetOverprint(int StrokingOverprint, int OtherOverprint, int OverprintMode)
{
	return DebenuPDFLibrarySetOverprint(instanceID, StrokingOverprint, 
		OtherOverprint, OverprintMode);
}

int DebenuPDFLibraryDLL0916::SetPDFAMode(int NewMode)
{
	return DebenuPDFLibrarySetPDFAMode(instanceID, NewMode);
}

int DebenuPDFLibraryDLL0916::SetPNGTransparencyColor(int RedByte, int GreenByte, int BlueByte)
{
	return DebenuPDFLibrarySetPNGTransparencyColor(instanceID, RedByte, 
		GreenByte, BlueByte);
}

int DebenuPDFLibraryDLL0916::SetPageActionMenu(const std::wstring& MenuItem)
{
	return DebenuPDFLibrarySetPageActionMenu(instanceID, 
		WideStringParm(MenuItem));
}

int DebenuPDFLibraryDLL0916::SetPageBox(int BoxType, double Left, double Top, double Width, double Height)
{
	return DebenuPDFLibrarySetPageBox(instanceID, BoxType, Left, Top, Width, 
		Height);
}

int DebenuPDFLibraryDLL0916::SetPageContentFromString(const std::string& Source)
{
	int sb1;
	char* sp1 = StringParm(Source, sb1);
	int result;
	result = DebenuPDFLibrarySetPageContentFromString(instanceID, sp1);
	if (sb1 == 1) DebenuPDFLibraryReleaseBuffer(instanceID, sp1);
	return result;
}

int DebenuPDFLibraryDLL0916::SetPageDimensions(double NewPageWidth, double NewPageHeight)
{
	return DebenuPDFLibrarySetPageDimensions(instanceID, NewPageWidth, 
		NewPageHeight);
}

int DebenuPDFLibraryDLL0916::SetPageLayout(int NewPageLayout)
{
	return DebenuPDFLibrarySetPageLayout(instanceID, NewPageLayout);
}

int DebenuPDFLibraryDLL0916::SetPageMode(int NewPageMode)
{
	return DebenuPDFLibrarySetPageMode(instanceID, NewPageMode);
}

int DebenuPDFLibraryDLL0916::SetPageSize(const std::wstring& PaperName)
{
	return DebenuPDFLibrarySetPageSize(instanceID, WideStringParm(PaperName));
}

int DebenuPDFLibraryDLL0916::SetPageThumbnail()
{
	return DebenuPDFLibrarySetPageThumbnail(instanceID);
}

int DebenuPDFLibraryDLL0916::SetPageTransparencyGroup(int CS, int Isolate, int Knockout)
{
	return DebenuPDFLibrarySetPageTransparencyGroup(instanceID, CS, Isolate, 
		Knockout);
}

int DebenuPDFLibraryDLL0916::SetPrecision(int NewPrecision)
{
	return DebenuPDFLibrarySetPrecision(instanceID, NewPrecision);
}

int DebenuPDFLibraryDLL0916::SetPrinterDevModeFromString(const std::string& Source)
{
	int sb1;
	char* sp1 = StringParm(Source, sb1);
	int result;
	result = DebenuPDFLibrarySetPrinterDevModeFromString(instanceID, sp1);
	if (sb1 == 1) DebenuPDFLibraryReleaseBuffer(instanceID, sp1);
	return result;
}

int DebenuPDFLibraryDLL0916::SetRenderCropType(int NewCropType)
{
	return DebenuPDFLibrarySetRenderCropType(instanceID, NewCropType);
}

int DebenuPDFLibraryDLL0916::SetRenderDCErasePage(int NewErasePage)
{
	return DebenuPDFLibrarySetRenderDCErasePage(instanceID, NewErasePage);
}

int DebenuPDFLibraryDLL0916::SetRenderDCOffset(int NewOffsetX, int NewOffsetY)
{
	return DebenuPDFLibrarySetRenderDCOffset(instanceID, NewOffsetX, 
		NewOffsetY);
}

int DebenuPDFLibraryDLL0916::SetRenderOptions(int OptionID, int NewValue)
{
	return DebenuPDFLibrarySetRenderOptions(instanceID, OptionID, NewValue);
}

int DebenuPDFLibraryDLL0916::SetRenderScale(double NewScale)
{
	return DebenuPDFLibrarySetRenderScale(instanceID, NewScale);
}

int DebenuPDFLibraryDLL0916::SetScale(double NewScale)
{
	return DebenuPDFLibrarySetScale(instanceID, NewScale);
}

int DebenuPDFLibraryDLL0916::SetSignProcessField(int SignProcessID, const std::wstring& SignatureFieldName)
{
	return DebenuPDFLibrarySetSignProcessField(instanceID, SignProcessID, 
		WideStringParm(SignatureFieldName));
}

int DebenuPDFLibraryDLL0916::SetSignProcessFieldBounds(int SignProcessID, double Left, double Top, double Width, double Height)
{
	return DebenuPDFLibrarySetSignProcessFieldBounds(instanceID, 
		SignProcessID, Left, Top, Width, Height);
}

int DebenuPDFLibraryDLL0916::SetSignProcessFieldImageFromFile(int SignProcessID, const std::wstring& ImageFileName, int Options)
{
	return DebenuPDFLibrarySetSignProcessFieldImageFromFile(instanceID, 
		SignProcessID, WideStringParm(ImageFileName), Options);
}

int DebenuPDFLibraryDLL0916::SetSignProcessFieldPage(int SignProcessID, int SignaturePage)
{
	return DebenuPDFLibrarySetSignProcessFieldPage(instanceID, SignProcessID, 
		SignaturePage);
}

int DebenuPDFLibraryDLL0916::SetSignProcessInfo(int SignProcessID, const std::wstring& Reason, const std::wstring& Location, const std::wstring& ContactInfo)
{
	return DebenuPDFLibrarySetSignProcessInfo(instanceID, SignProcessID, 
		WideStringParm(Reason), WideStringParm(Location), 
		WideStringParm(ContactInfo));
}

int DebenuPDFLibraryDLL0916::SetSignProcessKeyset(int SignProcessID, int KeysetID)
{
	return DebenuPDFLibrarySetSignProcessKeyset(instanceID, SignProcessID, 
		KeysetID);
}

int DebenuPDFLibraryDLL0916::SetSignProcessPFXFromFile(int SignProcessID, const std::wstring& PFXFileName, const std::wstring& PFXPassword)
{
	return DebenuPDFLibrarySetSignProcessPFXFromFile(instanceID, 
		SignProcessID, WideStringParm(PFXFileName), WideStringParm(PFXPassword));
}

int DebenuPDFLibraryDLL0916::SetSignProcessPassthrough(int SignProcessID, int SignatureLength)
{
	return DebenuPDFLibrarySetSignProcessPassthrough(instanceID, 
		SignProcessID, SignatureLength);
}

int DebenuPDFLibraryDLL0916::SetSignProcessSubFilter(int SignProcessID, int SubFilter)
{
	return DebenuPDFLibrarySetSignProcessSubFilter(instanceID, SignProcessID, 
		SubFilter);
}

int DebenuPDFLibraryDLL0916::SetTabOrderMode(const std::wstring& Mode)
{
	return DebenuPDFLibrarySetTabOrderMode(instanceID, WideStringParm(Mode));
}

int DebenuPDFLibraryDLL0916::SetTableBorderColor(int TableID, int BorderIndex, double Red, double Green, double Blue)
{
	return DebenuPDFLibrarySetTableBorderColor(instanceID, TableID, 
		BorderIndex, Red, Green, Blue);
}

int DebenuPDFLibraryDLL0916::SetTableBorderColorCMYK(int TableID, int BorderIndex, double C, double M, double Y, double K)
{
	return DebenuPDFLibrarySetTableBorderColorCMYK(instanceID, TableID, 
		BorderIndex, C, M, Y, K);
}

int DebenuPDFLibraryDLL0916::SetTableBorderWidth(int TableID, int BorderIndex, double NewWidth)
{
	return DebenuPDFLibrarySetTableBorderWidth(instanceID, TableID, 
		BorderIndex, NewWidth);
}

int DebenuPDFLibraryDLL0916::SetTableCellAlignment(int TableID, int FirstRow, int FirstColumn, int LastRow, int LastColumn, int NewCellAlignment)
{
	return DebenuPDFLibrarySetTableCellAlignment(instanceID, TableID, 
		FirstRow, FirstColumn, LastRow, LastColumn, NewCellAlignment);
}

int DebenuPDFLibraryDLL0916::SetTableCellBackgroundColor(int TableID, int FirstRow, int FirstColumn, int LastRow, int LastColumn, double Red, double Green, double Blue)
{
	return DebenuPDFLibrarySetTableCellBackgroundColor(instanceID, TableID, 
		FirstRow, FirstColumn, LastRow, LastColumn, Red, Green, Blue);
}

int DebenuPDFLibraryDLL0916::SetTableCellBackgroundColorCMYK(int TableID, int FirstRow, int FirstColumn, int LastRow, int LastColumn, double C, double M, double Y, double K)
{
	return DebenuPDFLibrarySetTableCellBackgroundColorCMYK(instanceID, 
		TableID, FirstRow, FirstColumn, LastRow, LastColumn, C, M, Y, K);
}

int DebenuPDFLibraryDLL0916::SetTableCellBorderColor(int TableID, int FirstRow, int FirstColumn, int LastRow, int LastColumn, int BorderIndex, double Red, double Green, double Blue)
{
	return DebenuPDFLibrarySetTableCellBorderColor(instanceID, TableID, 
		FirstRow, FirstColumn, LastRow, LastColumn, BorderIndex, Red, Green, 
		Blue);
}

int DebenuPDFLibraryDLL0916::SetTableCellBorderColorCMYK(int TableID, int FirstRow, int FirstColumn, int LastRow, int LastColumn, int BorderIndex, double C, double M, double Y, double K)
{
	return DebenuPDFLibrarySetTableCellBorderColorCMYK(instanceID, TableID, 
		FirstRow, FirstColumn, LastRow, LastColumn, BorderIndex, C, M, Y, K);
}

int DebenuPDFLibraryDLL0916::SetTableCellBorderWidth(int TableID, int FirstRow, int FirstColumn, int LastRow, int LastColumn, int BorderIndex, double NewWidth)
{
	return DebenuPDFLibrarySetTableCellBorderWidth(instanceID, TableID, 
		FirstRow, FirstColumn, LastRow, LastColumn, BorderIndex, NewWidth);
}

int DebenuPDFLibraryDLL0916::SetTableCellContent(int TableID, int RowNumber, int ColumnNumber, const std::wstring& HTMLText)
{
	return DebenuPDFLibrarySetTableCellContent(instanceID, TableID, 
		RowNumber, ColumnNumber, WideStringParm(HTMLText));
}

int DebenuPDFLibraryDLL0916::SetTableCellPadding(int TableID, int FirstRow, int FirstColumn, int LastRow, int LastColumn, int BorderIndex, double NewPadding)
{
	return DebenuPDFLibrarySetTableCellPadding(instanceID, TableID, FirstRow, 
		FirstColumn, LastRow, LastColumn, BorderIndex, NewPadding);
}

int DebenuPDFLibraryDLL0916::SetTableCellTextColor(int TableID, int FirstRow, int FirstColumn, int LastRow, int LastColumn, double Red, double Green, double Blue)
{
	return DebenuPDFLibrarySetTableCellTextColor(instanceID, TableID, 
		FirstRow, FirstColumn, LastRow, LastColumn, Red, Green, Blue);
}

int DebenuPDFLibraryDLL0916::SetTableCellTextColorCMYK(int TableID, int FirstRow, int FirstColumn, int LastRow, int LastColumn, double C, double M, double Y, double K)
{
	return DebenuPDFLibrarySetTableCellTextColorCMYK(instanceID, TableID, 
		FirstRow, FirstColumn, LastRow, LastColumn, C, M, Y, K);
}

int DebenuPDFLibraryDLL0916::SetTableCellTextSize(int TableID, int FirstRow, int FirstColumn, int LastRow, int LastColumn, double NewTextSize)
{
	return DebenuPDFLibrarySetTableCellTextSize(instanceID, TableID, 
		FirstRow, FirstColumn, LastRow, LastColumn, NewTextSize);
}

int DebenuPDFLibraryDLL0916::SetTableColumnWidth(int TableID, int FirstColumn, int LastColumn, double NewWidth)
{
	return DebenuPDFLibrarySetTableColumnWidth(instanceID, TableID, 
		FirstColumn, LastColumn, NewWidth);
}

int DebenuPDFLibraryDLL0916::SetTableRowHeight(int TableID, int FirstRow, int LastRow, double NewHeight)
{
	return DebenuPDFLibrarySetTableRowHeight(instanceID, TableID, FirstRow, 
		LastRow, NewHeight);
}

int DebenuPDFLibraryDLL0916::SetTableThinBorders(int TableID, int ThinBorders, double Red, double Green, double Blue)
{
	return DebenuPDFLibrarySetTableThinBorders(instanceID, TableID, 
		ThinBorders, Red, Green, Blue);
}

int DebenuPDFLibraryDLL0916::SetTableThinBordersCMYK(int TableID, int ThinBorders, double C, double M, double Y, double K)
{
	return DebenuPDFLibrarySetTableThinBordersCMYK(instanceID, TableID, 
		ThinBorders, C, M, Y, K);
}

int DebenuPDFLibraryDLL0916::SetTempFile(const std::wstring& FileName)
{
	return DebenuPDFLibrarySetTempFile(instanceID, WideStringParm(FileName));
}

int DebenuPDFLibraryDLL0916::SetTempPath(const std::wstring& NewPath)
{
	return DebenuPDFLibrarySetTempPath(instanceID, WideStringParm(NewPath));
}

int DebenuPDFLibraryDLL0916::SetTextAlign(int TextAlign)
{
	return DebenuPDFLibrarySetTextAlign(instanceID, TextAlign);
}

int DebenuPDFLibraryDLL0916::SetTextCharSpacing(double CharSpacing)
{
	return DebenuPDFLibrarySetTextCharSpacing(instanceID, CharSpacing);
}

int DebenuPDFLibraryDLL0916::SetTextColor(double Red, double Green, double Blue)
{
	return DebenuPDFLibrarySetTextColor(instanceID, Red, Green, Blue);
}

int DebenuPDFLibraryDLL0916::SetTextColorCMYK(double C, double M, double Y, double K)
{
	return DebenuPDFLibrarySetTextColorCMYK(instanceID, C, M, Y, K);
}

int DebenuPDFLibraryDLL0916::SetTextColorSep(const std::wstring& ColorName, double Tint)
{
	return DebenuPDFLibrarySetTextColorSep(instanceID, 
		WideStringParm(ColorName), Tint);
}

int DebenuPDFLibraryDLL0916::SetTextExtractionArea(double Left, double Top, double Width, double Height)
{
	return DebenuPDFLibrarySetTextExtractionArea(instanceID, Left, Top, 
		Width, Height);
}

int DebenuPDFLibraryDLL0916::SetTextExtractionOptions(int OptionID, int NewValue)
{
	return DebenuPDFLibrarySetTextExtractionOptions(instanceID, OptionID, 
		NewValue);
}

int DebenuPDFLibraryDLL0916::SetTextExtractionScaling(int Options, double Horizontal, double Vertical)
{
	return DebenuPDFLibrarySetTextExtractionScaling(instanceID, Options, 
		Horizontal, Vertical);
}

int DebenuPDFLibraryDLL0916::SetTextExtractionWordGap(double NewWordGap)
{
	return DebenuPDFLibrarySetTextExtractionWordGap(instanceID, NewWordGap);
}

int DebenuPDFLibraryDLL0916::SetTextHighlight(int Highlight)
{
	return DebenuPDFLibrarySetTextHighlight(instanceID, Highlight);
}

int DebenuPDFLibraryDLL0916::SetTextHighlightColor(double Red, double Green, double Blue)
{
	return DebenuPDFLibrarySetTextHighlightColor(instanceID, Red, Green, 
		Blue);
}

int DebenuPDFLibraryDLL0916::SetTextHighlightColorCMYK(double C, double M, double Y, double K)
{
	return DebenuPDFLibrarySetTextHighlightColorCMYK(instanceID, C, M, Y, K);
}

int DebenuPDFLibraryDLL0916::SetTextHighlightColorSep(const std::wstring& ColorName, double Tint)
{
	return DebenuPDFLibrarySetTextHighlightColorSep(instanceID, 
		WideStringParm(ColorName), Tint);
}

int DebenuPDFLibraryDLL0916::SetTextMode(int TextMode)
{
	return DebenuPDFLibrarySetTextMode(instanceID, TextMode);
}

int DebenuPDFLibraryDLL0916::SetTextRise(double Rise)
{
	return DebenuPDFLibrarySetTextRise(instanceID, Rise);
}

int DebenuPDFLibraryDLL0916::SetTextScaling(double ScalePercentage)
{
	return DebenuPDFLibrarySetTextScaling(instanceID, ScalePercentage);
}

int DebenuPDFLibraryDLL0916::SetTextShader(const std::wstring& ShaderName)
{
	return DebenuPDFLibrarySetTextShader(instanceID, 
		WideStringParm(ShaderName));
}

int DebenuPDFLibraryDLL0916::SetTextSize(double TextSize)
{
	return DebenuPDFLibrarySetTextSize(instanceID, TextSize);
}

int DebenuPDFLibraryDLL0916::SetTextSpacing(double Spacing)
{
	return DebenuPDFLibrarySetTextSpacing(instanceID, Spacing);
}

int DebenuPDFLibraryDLL0916::SetTextUnderline(int Underline)
{
	return DebenuPDFLibrarySetTextUnderline(instanceID, Underline);
}

int DebenuPDFLibraryDLL0916::SetTextUnderlineColor(double Red, double Green, double Blue)
{
	return DebenuPDFLibrarySetTextUnderlineColor(instanceID, Red, Green, 
		Blue);
}

int DebenuPDFLibraryDLL0916::SetTextUnderlineColorCMYK(double C, double M, double Y, double K)
{
	return DebenuPDFLibrarySetTextUnderlineColorCMYK(instanceID, C, M, Y, K);
}

int DebenuPDFLibraryDLL0916::SetTextUnderlineColorSep(const std::wstring& ColorName, double Tint)
{
	return DebenuPDFLibrarySetTextUnderlineColorSep(instanceID, 
		WideStringParm(ColorName), Tint);
}

int DebenuPDFLibraryDLL0916::SetTextUnderlineCustomDash(const std::wstring& DashPattern, double DashPhase)
{
	return DebenuPDFLibrarySetTextUnderlineCustomDash(instanceID, 
		WideStringParm(DashPattern), DashPhase);
}

int DebenuPDFLibraryDLL0916::SetTextUnderlineDash(double DashOn, double DashOff)
{
	return DebenuPDFLibrarySetTextUnderlineDash(instanceID, DashOn, DashOff);
}

int DebenuPDFLibraryDLL0916::SetTextUnderlineDistance(double UnderlineDistance)
{
	return DebenuPDFLibrarySetTextUnderlineDistance(instanceID, 
		UnderlineDistance);
}

int DebenuPDFLibraryDLL0916::SetTextUnderlineWidth(double UnderlineWidth)
{
	return DebenuPDFLibrarySetTextUnderlineWidth(instanceID, UnderlineWidth);
}

int DebenuPDFLibraryDLL0916::SetTextWordSpacing(double WordSpacing)
{
	return DebenuPDFLibrarySetTextWordSpacing(instanceID, WordSpacing);
}

int DebenuPDFLibraryDLL0916::SetTransparency(int Transparency)
{
	return DebenuPDFLibrarySetTransparency(instanceID, Transparency);
}

int DebenuPDFLibraryDLL0916::SetViewerPreferences(int Option, int NewValue)
{
	return DebenuPDFLibrarySetViewerPreferences(instanceID, Option, NewValue);
}

int DebenuPDFLibraryDLL0916::SetXFAFormFieldAccess(const std::wstring& XFAFieldName, int NewAccess)
{
	return DebenuPDFLibrarySetXFAFormFieldAccess(instanceID, 
		WideStringParm(XFAFieldName), NewAccess);
}

int DebenuPDFLibraryDLL0916::SetXFAFormFieldBorderColor(const std::wstring& XFAFieldName, double Red, double Green, double Blue)
{
	return DebenuPDFLibrarySetXFAFormFieldBorderColor(instanceID, 
		WideStringParm(XFAFieldName), Red, Green, Blue);
}

int DebenuPDFLibraryDLL0916::SetXFAFormFieldBorderPresence(const std::wstring& XFAFieldName, int NewPresence)
{
	return DebenuPDFLibrarySetXFAFormFieldBorderPresence(instanceID, 
		WideStringParm(XFAFieldName), NewPresence);
}

int DebenuPDFLibraryDLL0916::SetXFAFormFieldBorderWidth(const std::wstring& XFAFieldName, double BorderWidth)
{
	return DebenuPDFLibrarySetXFAFormFieldBorderWidth(instanceID, 
		WideStringParm(XFAFieldName), BorderWidth);
}

int DebenuPDFLibraryDLL0916::SetXFAFormFieldValue(const std::wstring& XFAFieldName, const std::wstring& NewValue)
{
	return DebenuPDFLibrarySetXFAFormFieldValue(instanceID, 
		WideStringParm(XFAFieldName), WideStringParm(NewValue));
}

int DebenuPDFLibraryDLL0916::SetXFAFromString(const std::string& Source, int Options)
{
	int sb1;
	char* sp1 = StringParm(Source, sb1);
	int result;
	result = DebenuPDFLibrarySetXFAFromString(instanceID, sp1, Options);
	if (sb1 == 1) DebenuPDFLibraryReleaseBuffer(instanceID, sp1);
	return result;
}

int DebenuPDFLibraryDLL0916::SetupCustomPrinter(const std::wstring& CustomPrinterName, int Setting, int NewValue)
{
	return DebenuPDFLibrarySetupCustomPrinter(instanceID, 
		WideStringParm(CustomPrinterName), Setting, NewValue);
}

int DebenuPDFLibraryDLL0916::SignFile(const std::wstring& InputFileName, const std::wstring& OpenPassword, const std::wstring& SignatureFieldName, const std::wstring& OutputFileName, const std::wstring& PFXFileName, const std::wstring& PFXPassword, const std::wstring& Reason, const std::wstring& Location, const std::wstring& ContactInfo)
{
	return DebenuPDFLibrarySignFile(instanceID, 
		WideStringParm(InputFileName), WideStringParm(OpenPassword), 
		WideStringParm(SignatureFieldName), WideStringParm(OutputFileName), 
		WideStringParm(PFXFileName), WideStringParm(PFXPassword), 
		WideStringParm(Reason), WideStringParm(Location), 
		WideStringParm(ContactInfo));
}

int DebenuPDFLibraryDLL0916::SplitPageText(int Options)
{
	return DebenuPDFLibrarySplitPageText(instanceID, Options);
}

int DebenuPDFLibraryDLL0916::StartPath(double StartX, double StartY)
{
	return DebenuPDFLibraryStartPath(instanceID, StartX, StartY);
}

int DebenuPDFLibraryDLL0916::StoreCustomDataFromFile(const std::wstring& Key, const std::wstring& FileName, int Location, int Options)
{
	return DebenuPDFLibraryStoreCustomDataFromFile(instanceID, 
		WideStringParm(Key), WideStringParm(FileName), Location, Options);
}

int DebenuPDFLibraryDLL0916::StoreCustomDataFromString(const std::string& Key, const std::string& NewValue, int Location, int Options)
{
	int sb1;
	char* sp1 = StringParm(Key, sb1);
	int sb2;
	char* sp2 = StringParm(NewValue, sb2);
	int result;
	result = DebenuPDFLibraryStoreCustomDataFromString(instanceID, sp1, sp2, 
		Location, Options);
	if (sb1 == 1) DebenuPDFLibraryReleaseBuffer(instanceID, sp1);
	if (sb2 == 1) DebenuPDFLibraryReleaseBuffer(instanceID, sp2);
	return result;
}

int DebenuPDFLibraryDLL0916::TestTempPath()
{
	return DebenuPDFLibraryTestTempPath(instanceID);
}

int DebenuPDFLibraryDLL0916::TransformFile(const std::wstring& InputFileName, const std::wstring& Password, const std::wstring& OutputFileName, int TransformType, int Options)
{
	return DebenuPDFLibraryTransformFile(instanceID, 
		WideStringParm(InputFileName), WideStringParm(Password), 
		WideStringParm(OutputFileName), TransformType, Options);
}

int DebenuPDFLibraryDLL0916::UnlockKey(const std::wstring& LicenseKey)
{
	return DebenuPDFLibraryUnlockKey(instanceID, WideStringParm(LicenseKey));
}

int DebenuPDFLibraryDLL0916::Unlocked()
{
	return DebenuPDFLibraryUnlocked(instanceID);
}

int DebenuPDFLibraryDLL0916::UpdateAndFlattenFormField(int Index)
{
	return DebenuPDFLibraryUpdateAndFlattenFormField(instanceID, Index);
}

int DebenuPDFLibraryDLL0916::UpdateAppearanceStream(int Index)
{
	return DebenuPDFLibraryUpdateAppearanceStream(instanceID, Index);
}

int DebenuPDFLibraryDLL0916::UseKerning(int Kern)
{
	return DebenuPDFLibraryUseKerning(instanceID, Kern);
}

int DebenuPDFLibraryDLL0916::UseUnsafeContentStreams(int SafetyLevel)
{
	return DebenuPDFLibraryUseUnsafeContentStreams(instanceID, SafetyLevel);
}

